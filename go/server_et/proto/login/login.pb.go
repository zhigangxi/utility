// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.11.4
// source: login.proto

package loginpb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type LoginErrorCode int32

const (
	LoginErrorCode_NoError         LoginErrorCode = 0
	LoginErrorCode_LoginError      LoginErrorCode = 1 //用户名密码出错
	LoginErrorCode_UserNameExisted LoginErrorCode = 2 //用户名已存在
)

// Enum value maps for LoginErrorCode.
var (
	LoginErrorCode_name = map[int32]string{
		0: "NoError",
		1: "LoginError",
		2: "UserNameExisted",
	}
	LoginErrorCode_value = map[string]int32{
		"NoError":         0,
		"LoginError":      1,
		"UserNameExisted": 2,
	}
)

func (x LoginErrorCode) Enum() *LoginErrorCode {
	p := new(LoginErrorCode)
	*p = x
	return p
}

func (x LoginErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LoginErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_login_proto_enumTypes[0].Descriptor()
}

func (LoginErrorCode) Type() protoreflect.EnumType {
	return &file_login_proto_enumTypes[0]
}

func (x LoginErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LoginErrorCode.Descriptor instead.
func (LoginErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_login_proto_rawDescGZIP(), []int{0}
}

type LoginPbType_TypeEnum int32

const (
	LoginPbType_NotUse        LoginPbType_TypeEnum = 0
	LoginPbType_LoginReq      LoginPbType_TypeEnum = 20001
	LoginPbType_LoginAck      LoginPbType_TypeEnum = 20002
	LoginPbType_RegisterReq   LoginPbType_TypeEnum = 20003
	LoginPbType_RegisterAck   LoginPbType_TypeEnum = 20004
	LoginPbType_ServerListReq LoginPbType_TypeEnum = 20005
	LoginPbType_ServerListAck LoginPbType_TypeEnum = 20006
)

// Enum value maps for LoginPbType_TypeEnum.
var (
	LoginPbType_TypeEnum_name = map[int32]string{
		0:     "NotUse",
		20001: "LoginReq",
		20002: "LoginAck",
		20003: "RegisterReq",
		20004: "RegisterAck",
		20005: "ServerListReq",
		20006: "ServerListAck",
	}
	LoginPbType_TypeEnum_value = map[string]int32{
		"NotUse":        0,
		"LoginReq":      20001,
		"LoginAck":      20002,
		"RegisterReq":   20003,
		"RegisterAck":   20004,
		"ServerListReq": 20005,
		"ServerListAck": 20006,
	}
)

func (x LoginPbType_TypeEnum) Enum() *LoginPbType_TypeEnum {
	p := new(LoginPbType_TypeEnum)
	*p = x
	return p
}

func (x LoginPbType_TypeEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LoginPbType_TypeEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_login_proto_enumTypes[1].Descriptor()
}

func (LoginPbType_TypeEnum) Type() protoreflect.EnumType {
	return &file_login_proto_enumTypes[1]
}

func (x LoginPbType_TypeEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LoginPbType_TypeEnum.Descriptor instead.
func (LoginPbType_TypeEnum) EnumDescriptor() ([]byte, []int) {
	return file_login_proto_rawDescGZIP(), []int{6, 0}
}

type LoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RpcId    int32  `protobuf:"varint,90,opt,name=RpcId,proto3" json:"RpcId,omitempty"`
	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *LoginReq) Reset() {
	*x = LoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_login_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReq) ProtoMessage() {}

func (x *LoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_login_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReq.ProtoReflect.Descriptor instead.
func (*LoginReq) Descriptor() ([]byte, []int) {
	return file_login_proto_rawDescGZIP(), []int{0}
}

func (x *LoginReq) GetRpcId() int32 {
	if x != nil {
		return x.RpcId
	}
	return 0
}

func (x *LoginReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LoginReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type LoginAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RpcId     int32          `protobuf:"varint,90,opt,name=RpcId,proto3" json:"RpcId,omitempty"`
	Error     int32          `protobuf:"varint,91,opt,name=Error,proto3" json:"Error,omitempty"`
	Message   string         `protobuf:"bytes,92,opt,name=Message,proto3" json:"Message,omitempty"`
	AccountID int64          `protobuf:"varint,1,opt,name=accountID,proto3" json:"accountID,omitempty"`
	Session   string         `protobuf:"bytes,2,opt,name=session,proto3" json:"session,omitempty"`
	Err       LoginErrorCode `protobuf:"varint,3,opt,name=err,proto3,enum=loginpb.LoginErrorCode" json:"err,omitempty"`
}

func (x *LoginAck) Reset() {
	*x = LoginAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_login_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginAck) ProtoMessage() {}

func (x *LoginAck) ProtoReflect() protoreflect.Message {
	mi := &file_login_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginAck.ProtoReflect.Descriptor instead.
func (*LoginAck) Descriptor() ([]byte, []int) {
	return file_login_proto_rawDescGZIP(), []int{1}
}

func (x *LoginAck) GetRpcId() int32 {
	if x != nil {
		return x.RpcId
	}
	return 0
}

func (x *LoginAck) GetError() int32 {
	if x != nil {
		return x.Error
	}
	return 0
}

func (x *LoginAck) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LoginAck) GetAccountID() int64 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *LoginAck) GetSession() string {
	if x != nil {
		return x.Session
	}
	return ""
}

func (x *LoginAck) GetErr() LoginErrorCode {
	if x != nil {
		return x.Err
	}
	return LoginErrorCode_NoError
}

type RegisterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RpcId    int32  `protobuf:"varint,90,opt,name=RpcId,proto3" json:"RpcId,omitempty"`
	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Code     string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *RegisterReq) Reset() {
	*x = RegisterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_login_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterReq) ProtoMessage() {}

func (x *RegisterReq) ProtoReflect() protoreflect.Message {
	mi := &file_login_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterReq.ProtoReflect.Descriptor instead.
func (*RegisterReq) Descriptor() ([]byte, []int) {
	return file_login_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterReq) GetRpcId() int32 {
	if x != nil {
		return x.RpcId
	}
	return 0
}

func (x *RegisterReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegisterReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *RegisterReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type RegisterAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RpcId   int32          `protobuf:"varint,90,opt,name=RpcId,proto3" json:"RpcId,omitempty"`
	Error   int32          `protobuf:"varint,91,opt,name=Error,proto3" json:"Error,omitempty"`
	Message string         `protobuf:"bytes,92,opt,name=Message,proto3" json:"Message,omitempty"`
	Err     LoginErrorCode `protobuf:"varint,1,opt,name=err,proto3,enum=loginpb.LoginErrorCode" json:"err,omitempty"`
	UserId  int64          `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"` //玩家唯一ID
}

func (x *RegisterAck) Reset() {
	*x = RegisterAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_login_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterAck) ProtoMessage() {}

func (x *RegisterAck) ProtoReflect() protoreflect.Message {
	mi := &file_login_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterAck.ProtoReflect.Descriptor instead.
func (*RegisterAck) Descriptor() ([]byte, []int) {
	return file_login_proto_rawDescGZIP(), []int{3}
}

func (x *RegisterAck) GetRpcId() int32 {
	if x != nil {
		return x.RpcId
	}
	return 0
}

func (x *RegisterAck) GetError() int32 {
	if x != nil {
		return x.Error
	}
	return 0
}

func (x *RegisterAck) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RegisterAck) GetErr() LoginErrorCode {
	if x != nil {
		return x.Err
	}
	return LoginErrorCode_NoError
}

func (x *RegisterAck) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type ServerListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RpcId int32 `protobuf:"varint,90,opt,name=RpcId,proto3" json:"RpcId,omitempty"`
}

func (x *ServerListReq) Reset() {
	*x = ServerListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_login_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerListReq) ProtoMessage() {}

func (x *ServerListReq) ProtoReflect() protoreflect.Message {
	mi := &file_login_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerListReq.ProtoReflect.Descriptor instead.
func (*ServerListReq) Descriptor() ([]byte, []int) {
	return file_login_proto_rawDescGZIP(), []int{4}
}

func (x *ServerListReq) GetRpcId() int32 {
	if x != nil {
		return x.RpcId
	}
	return 0
}

type ServerListAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RpcId   int32         `protobuf:"varint,90,opt,name=RpcId,proto3" json:"RpcId,omitempty"`
	Error   int32         `protobuf:"varint,91,opt,name=Error,proto3" json:"Error,omitempty"`
	Message string        `protobuf:"bytes,92,opt,name=Message,proto3" json:"Message,omitempty"`
	Infos   []*ServerInfo `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos,omitempty"`
}

func (x *ServerListAck) Reset() {
	*x = ServerListAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_login_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerListAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerListAck) ProtoMessage() {}

func (x *ServerListAck) ProtoReflect() protoreflect.Message {
	mi := &file_login_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerListAck.ProtoReflect.Descriptor instead.
func (*ServerListAck) Descriptor() ([]byte, []int) {
	return file_login_proto_rawDescGZIP(), []int{5}
}

func (x *ServerListAck) GetRpcId() int32 {
	if x != nil {
		return x.RpcId
	}
	return 0
}

func (x *ServerListAck) GetError() int32 {
	if x != nil {
		return x.Error
	}
	return 0
}

func (x *ServerListAck) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ServerListAck) GetInfos() []*ServerInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

type LoginPbType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LoginPbType) Reset() {
	*x = LoginPbType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_login_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginPbType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginPbType) ProtoMessage() {}

func (x *LoginPbType) ProtoReflect() protoreflect.Message {
	mi := &file_login_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginPbType.ProtoReflect.Descriptor instead.
func (*LoginPbType) Descriptor() ([]byte, []int) {
	return file_login_proto_rawDescGZIP(), []int{6}
}

type ServerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RpcId int32  `protobuf:"varint,90,opt,name=RpcId,proto3" json:"RpcId,omitempty"`
	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Ip    string `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"` //"ip:port"
}

func (x *ServerInfo) Reset() {
	*x = ServerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_login_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerInfo) ProtoMessage() {}

func (x *ServerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_login_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerInfo.ProtoReflect.Descriptor instead.
func (*ServerInfo) Descriptor() ([]byte, []int) {
	return file_login_proto_rawDescGZIP(), []int{7}
}

func (x *ServerInfo) GetRpcId() int32 {
	if x != nil {
		return x.RpcId
	}
	return 0
}

func (x *ServerInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServerInfo) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

var File_login_proto protoreflect.FileDescriptor

var file_login_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x70, 0x62, 0x22, 0x50, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x70, 0x63, 0x49, 0x64, 0x18, 0x5a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x52, 0x70, 0x63, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xb3, 0x01, 0x0a, 0x08, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x41, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x70, 0x63, 0x49, 0x64, 0x18, 0x5a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x52, 0x70, 0x63, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x5b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x5c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x17, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x67,
	0x0a, 0x0b, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a,
	0x05, 0x52, 0x70, 0x63, 0x49, 0x64, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x52, 0x70,
	0x63, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x41, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x70, 0x63, 0x49, 0x64,
	0x18, 0x5a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x52, 0x70, 0x63, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x5b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x5c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a,
	0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x25, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x70, 0x63, 0x49, 0x64, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x52, 0x70, 0x63, 0x49, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x70, 0x63,
	0x49, 0x64, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x52, 0x70, 0x63, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x5b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x5c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x29, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x96, 0x01, 0x0a, 0x0b, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x50, 0x62, 0x54, 0x79, 0x70, 0x65, 0x22, 0x86, 0x01, 0x0a, 0x08, 0x54,
	0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x6f, 0x74, 0x55, 0x73,
	0x65, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x10,
	0xa1, 0x9c, 0x01, 0x12, 0x0e, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x63, 0x6b, 0x10,
	0xa2, 0x9c, 0x01, 0x12, 0x11, 0x0a, 0x0b, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x10, 0xa3, 0x9c, 0x01, 0x12, 0x11, 0x0a, 0x0b, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x41, 0x63, 0x6b, 0x10, 0xa4, 0x9c, 0x01, 0x12, 0x13, 0x0a, 0x0d, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x10, 0xa5, 0x9c, 0x01, 0x12, 0x13,
	0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x6b, 0x10,
	0xa6, 0x9c, 0x01, 0x22, 0x46, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x70, 0x63, 0x49, 0x64, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x52, 0x70, 0x63, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x2a, 0x42, 0x0a, 0x0e, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a,
	0x07, 0x4e, 0x6f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x65, 0x64, 0x10, 0x02, 0x42,
	0x0b, 0x5a, 0x09, 0x2e, 0x3b, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_login_proto_rawDescOnce sync.Once
	file_login_proto_rawDescData = file_login_proto_rawDesc
)

func file_login_proto_rawDescGZIP() []byte {
	file_login_proto_rawDescOnce.Do(func() {
		file_login_proto_rawDescData = protoimpl.X.CompressGZIP(file_login_proto_rawDescData)
	})
	return file_login_proto_rawDescData
}

var file_login_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_login_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_login_proto_goTypes = []interface{}{
	(LoginErrorCode)(0),       // 0: loginpb.LoginErrorCode
	(LoginPbType_TypeEnum)(0), // 1: loginpb.LoginPbType.TypeEnum
	(*LoginReq)(nil),          // 2: loginpb.LoginReq
	(*LoginAck)(nil),          // 3: loginpb.LoginAck
	(*RegisterReq)(nil),       // 4: loginpb.RegisterReq
	(*RegisterAck)(nil),       // 5: loginpb.RegisterAck
	(*ServerListReq)(nil),     // 6: loginpb.ServerListReq
	(*ServerListAck)(nil),     // 7: loginpb.ServerListAck
	(*LoginPbType)(nil),       // 8: loginpb.LoginPbType
	(*ServerInfo)(nil),        // 9: loginpb.ServerInfo
}
var file_login_proto_depIdxs = []int32{
	0, // 0: loginpb.LoginAck.err:type_name -> loginpb.LoginErrorCode
	0, // 1: loginpb.RegisterAck.err:type_name -> loginpb.LoginErrorCode
	9, // 2: loginpb.ServerListAck.infos:type_name -> loginpb.ServerInfo
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_login_proto_init() }
func file_login_proto_init() {
	if File_login_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_login_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_login_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_login_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_login_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_login_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_login_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerListAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_login_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginPbType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_login_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_login_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_login_proto_goTypes,
		DependencyIndexes: file_login_proto_depIdxs,
		EnumInfos:         file_login_proto_enumTypes,
		MessageInfos:      file_login_proto_msgTypes,
	}.Build()
	File_login_proto = out.File
	file_login_proto_rawDesc = nil
	file_login_proto_goTypes = nil
	file_login_proto_depIdxs = nil
}
