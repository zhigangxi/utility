// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ServerPb.proto

#ifndef PROTOBUF_ServerPb_2eproto__INCLUDED
#define PROTOBUF_ServerPb_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "NetMsg.pb.h"
// @@protoc_insertion_point(includes)

namespace ServerPB {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_ServerPb_2eproto();
void protobuf_InitDefaults_ServerPb_2eproto();
void protobuf_AssignDesc_ServerPb_2eproto();
void protobuf_ShutdownFile_ServerPb_2eproto();

class BioClass;
class BioStep;
class MiningInfo;
class RaffleHeroTimes;
class TeamUpdateTime;
class UserAddData;
class UserBanquetInfo;
class UserCamp;
class UserCamps;
class UserCluster;
class UserCycBattle;
class UserTeam;

// ===================================================================

class UserCamp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ServerPB.UserCamp) */ {
 public:
  UserCamp();
  virtual ~UserCamp();

  UserCamp(const UserCamp& from);

  inline UserCamp& operator=(const UserCamp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserCamp& default_instance();

  static const UserCamp* internal_default_instance();

  void Swap(UserCamp* other);

  // implements Message ----------------------------------------------

  inline UserCamp* New() const { return New(NULL); }

  UserCamp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserCamp& from);
  void MergeFrom(const UserCamp& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserCamp* other);
  void UnsafeMergeFrom(const UserCamp& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // optional uint32 level = 2;
  void clear_level();
  static const int kLevelFieldNumber = 2;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // optional float outputData = 3;
  void clear_outputdata();
  static const int kOutputDataFieldNumber = 3;
  float outputdata() const;
  void set_outputdata(float value);

  // optional uint32 leftTime = 4;
  void clear_lefttime();
  static const int kLeftTimeFieldNumber = 4;
  ::google::protobuf::uint32 lefttime() const;
  void set_lefttime(::google::protobuf::uint32 value);

  // optional uint32 levelUpTime = 5;
  void clear_leveluptime();
  static const int kLevelUpTimeFieldNumber = 5;
  ::google::protobuf::uint32 leveluptime() const;
  void set_leveluptime(::google::protobuf::uint32 value);

  // optional uint32 outputTime = 6;
  void clear_outputtime();
  static const int kOutputTimeFieldNumber = 6;
  ::google::protobuf::uint32 outputtime() const;
  void set_outputtime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ServerPB.UserCamp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 level_;
  float outputdata_;
  ::google::protobuf::uint32 lefttime_;
  ::google::protobuf::uint32 leveluptime_;
  ::google::protobuf::uint32 outputtime_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_ServerPb_2eproto_impl();
  friend void  protobuf_AddDesc_ServerPb_2eproto_impl();
  friend void protobuf_AssignDesc_ServerPb_2eproto();
  friend void protobuf_ShutdownFile_ServerPb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UserCamp> UserCamp_default_instance_;

// -------------------------------------------------------------------

class UserCamps : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ServerPB.UserCamps) */ {
 public:
  UserCamps();
  virtual ~UserCamps();

  UserCamps(const UserCamps& from);

  inline UserCamps& operator=(const UserCamps& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserCamps& default_instance();

  static const UserCamps* internal_default_instance();

  void Swap(UserCamps* other);

  // implements Message ----------------------------------------------

  inline UserCamps* New() const { return New(NULL); }

  UserCamps* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserCamps& from);
  void MergeFrom(const UserCamps& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserCamps* other);
  void UnsafeMergeFrom(const UserCamps& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ServerPB.UserCamp camps = 1;
  int camps_size() const;
  void clear_camps();
  static const int kCampsFieldNumber = 1;
  const ::ServerPB::UserCamp& camps(int index) const;
  ::ServerPB::UserCamp* mutable_camps(int index);
  ::ServerPB::UserCamp* add_camps();
  ::google::protobuf::RepeatedPtrField< ::ServerPB::UserCamp >*
      mutable_camps();
  const ::google::protobuf::RepeatedPtrField< ::ServerPB::UserCamp >&
      camps() const;

  // @@protoc_insertion_point(class_scope:ServerPB.UserCamps)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ServerPB::UserCamp > camps_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_ServerPb_2eproto_impl();
  friend void  protobuf_AddDesc_ServerPb_2eproto_impl();
  friend void protobuf_AssignDesc_ServerPb_2eproto();
  friend void protobuf_ShutdownFile_ServerPb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UserCamps> UserCamps_default_instance_;

// -------------------------------------------------------------------

class UserCycBattle : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ServerPB.UserCycBattle) */ {
 public:
  UserCycBattle();
  virtual ~UserCycBattle();

  UserCycBattle(const UserCycBattle& from);

  inline UserCycBattle& operator=(const UserCycBattle& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserCycBattle& default_instance();

  static const UserCycBattle* internal_default_instance();

  void Swap(UserCycBattle* other);

  // implements Message ----------------------------------------------

  inline UserCycBattle* New() const { return New(NULL); }

  UserCycBattle* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserCycBattle& from);
  void MergeFrom(const UserCycBattle& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserCycBattle* other);
  void UnsafeMergeFrom(const UserCycBattle& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 maxDifficulty = 1;
  void clear_maxdifficulty();
  static const int kMaxDifficultyFieldNumber = 1;
  ::google::protobuf::uint32 maxdifficulty() const;
  void set_maxdifficulty(::google::protobuf::uint32 value);

  // optional uint32 curDifficulty = 2;
  void clear_curdifficulty();
  static const int kCurDifficultyFieldNumber = 2;
  ::google::protobuf::uint32 curdifficulty() const;
  void set_curdifficulty(::google::protobuf::uint32 value);

  // optional uint32 curRound = 3;
  void clear_curround();
  static const int kCurRoundFieldNumber = 3;
  ::google::protobuf::uint32 curround() const;
  void set_curround(::google::protobuf::uint32 value);

  // optional uint32 leftUnlockTimes = 4;
  void clear_leftunlocktimes();
  static const int kLeftUnlockTimesFieldNumber = 4;
  ::google::protobuf::uint32 leftunlocktimes() const;
  void set_leftunlocktimes(::google::protobuf::uint32 value);

  // optional uint32 leftTime = 5;
  void clear_lefttime();
  static const int kLeftTimeFieldNumber = 5;
  ::google::protobuf::uint32 lefttime() const;
  void set_lefttime(::google::protobuf::uint32 value);

  // optional uint32 enemyPath = 7;
  void clear_enemypath();
  static const int kEnemyPathFieldNumber = 7;
  ::google::protobuf::uint32 enemypath() const;
  void set_enemypath(::google::protobuf::uint32 value);

  // optional float percent = 8;
  void clear_percent();
  static const int kPercentFieldNumber = 8;
  float percent() const;
  void set_percent(float value);

  // optional uint64 battleId = 9;
  void clear_battleid();
  static const int kBattleIdFieldNumber = 9;
  ::google::protobuf::uint64 battleid() const;
  void set_battleid(::google::protobuf::uint64 value);

  // optional uint32 enemyTeam = 10;
  void clear_enemyteam();
  static const int kEnemyTeamFieldNumber = 10;
  ::google::protobuf::uint32 enemyteam() const;
  void set_enemyteam(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ServerPB.UserCycBattle)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 maxdifficulty_;
  ::google::protobuf::uint32 curdifficulty_;
  ::google::protobuf::uint32 curround_;
  ::google::protobuf::uint32 leftunlocktimes_;
  ::google::protobuf::uint32 lefttime_;
  ::google::protobuf::uint32 enemypath_;
  ::google::protobuf::uint64 battleid_;
  float percent_;
  ::google::protobuf::uint32 enemyteam_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_ServerPb_2eproto_impl();
  friend void  protobuf_AddDesc_ServerPb_2eproto_impl();
  friend void protobuf_AssignDesc_ServerPb_2eproto();
  friend void protobuf_ShutdownFile_ServerPb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UserCycBattle> UserCycBattle_default_instance_;

// -------------------------------------------------------------------

class BioStep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ServerPB.BioStep) */ {
 public:
  BioStep();
  virtual ~BioStep();

  BioStep(const BioStep& from);

  inline BioStep& operator=(const BioStep& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BioStep& default_instance();

  static const BioStep* internal_default_instance();

  void Swap(BioStep* other);

  // implements Message ----------------------------------------------

  inline BioStep* New() const { return New(NULL); }

  BioStep* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BioStep& from);
  void MergeFrom(const BioStep& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BioStep* other);
  void UnsafeMergeFrom(const BioStep& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 stepId = 1;
  void clear_stepid();
  static const int kStepIdFieldNumber = 1;
  ::google::protobuf::uint32 stepid() const;
  void set_stepid(::google::protobuf::uint32 value);

  // repeated uint32 branchIds = 2;
  int branchids_size() const;
  void clear_branchids();
  static const int kBranchIdsFieldNumber = 2;
  ::google::protobuf::uint32 branchids(int index) const;
  void set_branchids(int index, ::google::protobuf::uint32 value);
  void add_branchids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      branchids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_branchids();

  // @@protoc_insertion_point(class_scope:ServerPB.BioStep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > branchids_;
  mutable int _branchids_cached_byte_size_;
  ::google::protobuf::uint32 stepid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_ServerPb_2eproto_impl();
  friend void  protobuf_AddDesc_ServerPb_2eproto_impl();
  friend void protobuf_AssignDesc_ServerPb_2eproto();
  friend void protobuf_ShutdownFile_ServerPb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BioStep> BioStep_default_instance_;

// -------------------------------------------------------------------

class BioClass : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ServerPB.BioClass) */ {
 public:
  BioClass();
  virtual ~BioClass();

  BioClass(const BioClass& from);

  inline BioClass& operator=(const BioClass& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BioClass& default_instance();

  static const BioClass* internal_default_instance();

  void Swap(BioClass* other);

  // implements Message ----------------------------------------------

  inline BioClass* New() const { return New(NULL); }

  BioClass* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BioClass& from);
  void MergeFrom(const BioClass& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BioClass* other);
  void UnsafeMergeFrom(const BioClass& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 heroClass = 1;
  void clear_heroclass();
  static const int kHeroClassFieldNumber = 1;
  ::google::protobuf::uint32 heroclass() const;
  void set_heroclass(::google::protobuf::uint32 value);

  // repeated .ServerPB.BioStep step = 2;
  int step_size() const;
  void clear_step();
  static const int kStepFieldNumber = 2;
  const ::ServerPB::BioStep& step(int index) const;
  ::ServerPB::BioStep* mutable_step(int index);
  ::ServerPB::BioStep* add_step();
  ::google::protobuf::RepeatedPtrField< ::ServerPB::BioStep >*
      mutable_step();
  const ::google::protobuf::RepeatedPtrField< ::ServerPB::BioStep >&
      step() const;

  // @@protoc_insertion_point(class_scope:ServerPB.BioClass)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ServerPB::BioStep > step_;
  ::google::protobuf::uint32 heroclass_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_ServerPb_2eproto_impl();
  friend void  protobuf_AddDesc_ServerPb_2eproto_impl();
  friend void protobuf_AssignDesc_ServerPb_2eproto();
  friend void protobuf_ShutdownFile_ServerPb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BioClass> BioClass_default_instance_;

// -------------------------------------------------------------------

class RaffleHeroTimes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ServerPB.RaffleHeroTimes) */ {
 public:
  RaffleHeroTimes();
  virtual ~RaffleHeroTimes();

  RaffleHeroTimes(const RaffleHeroTimes& from);

  inline RaffleHeroTimes& operator=(const RaffleHeroTimes& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RaffleHeroTimes& default_instance();

  static const RaffleHeroTimes* internal_default_instance();

  void Swap(RaffleHeroTimes* other);

  // implements Message ----------------------------------------------

  inline RaffleHeroTimes* New() const { return New(NULL); }

  RaffleHeroTimes* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RaffleHeroTimes& from);
  void MergeFrom(const RaffleHeroTimes& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RaffleHeroTimes* other);
  void UnsafeMergeFrom(const RaffleHeroTimes& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional uint32 useTimes = 2;
  void clear_usetimes();
  static const int kUseTimesFieldNumber = 2;
  ::google::protobuf::uint32 usetimes() const;
  void set_usetimes(::google::protobuf::uint32 value);

  // optional uint32 oneRaffTimes = 3;
  void clear_onerafftimes();
  static const int kOneRaffTimesFieldNumber = 3;
  ::google::protobuf::uint32 onerafftimes() const;
  void set_onerafftimes(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ServerPB.RaffleHeroTimes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 usetimes_;
  ::google::protobuf::uint32 onerafftimes_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_ServerPb_2eproto_impl();
  friend void  protobuf_AddDesc_ServerPb_2eproto_impl();
  friend void protobuf_AssignDesc_ServerPb_2eproto();
  friend void protobuf_ShutdownFile_ServerPb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RaffleHeroTimes> RaffleHeroTimes_default_instance_;

// -------------------------------------------------------------------

class UserBanquetInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ServerPB.UserBanquetInfo) */ {
 public:
  UserBanquetInfo();
  virtual ~UserBanquetInfo();

  UserBanquetInfo(const UserBanquetInfo& from);

  inline UserBanquetInfo& operator=(const UserBanquetInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserBanquetInfo& default_instance();

  static const UserBanquetInfo* internal_default_instance();

  void Swap(UserBanquetInfo* other);

  // implements Message ----------------------------------------------

  inline UserBanquetInfo* New() const { return New(NULL); }

  UserBanquetInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserBanquetInfo& from);
  void MergeFrom(const UserBanquetInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserBanquetInfo* other);
  void UnsafeMergeFrom(const UserBanquetInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .NetMsg.BanquetHeros info = 1;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::NetMsg::BanquetHeros& info() const;
  ::NetMsg::BanquetHeros* mutable_info();
  ::NetMsg::BanquetHeros* release_info();
  void set_allocated_info(::NetMsg::BanquetHeros* info);

  // optional uint32 createTime = 2;
  void clear_createtime();
  static const int kCreateTimeFieldNumber = 2;
  ::google::protobuf::uint32 createtime() const;
  void set_createtime(::google::protobuf::uint32 value);

  // optional uint32 duraTime = 3;
  void clear_duratime();
  static const int kDuraTimeFieldNumber = 3;
  ::google::protobuf::uint32 duratime() const;
  void set_duratime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ServerPB.UserBanquetInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NetMsg::BanquetHeros* info_;
  ::google::protobuf::uint32 createtime_;
  ::google::protobuf::uint32 duratime_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_ServerPb_2eproto_impl();
  friend void  protobuf_AddDesc_ServerPb_2eproto_impl();
  friend void protobuf_AssignDesc_ServerPb_2eproto();
  friend void protobuf_ShutdownFile_ServerPb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UserBanquetInfo> UserBanquetInfo_default_instance_;

// -------------------------------------------------------------------

class TeamUpdateTime : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ServerPB.TeamUpdateTime) */ {
 public:
  TeamUpdateTime();
  virtual ~TeamUpdateTime();

  TeamUpdateTime(const TeamUpdateTime& from);

  inline TeamUpdateTime& operator=(const TeamUpdateTime& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamUpdateTime& default_instance();

  static const TeamUpdateTime* internal_default_instance();

  void Swap(TeamUpdateTime* other);

  // implements Message ----------------------------------------------

  inline TeamUpdateTime* New() const { return New(NULL); }

  TeamUpdateTime* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamUpdateTime& from);
  void MergeFrom(const TeamUpdateTime& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TeamUpdateTime* other);
  void UnsafeMergeFrom(const TeamUpdateTime& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 pos = 1;
  void clear_pos();
  static const int kPosFieldNumber = 1;
  ::google::protobuf::uint32 pos() const;
  void set_pos(::google::protobuf::uint32 value);

  // optional uint32 time = 2;
  void clear_time();
  static const int kTimeFieldNumber = 2;
  ::google::protobuf::uint32 time() const;
  void set_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ServerPB.TeamUpdateTime)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 time_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_ServerPb_2eproto_impl();
  friend void  protobuf_AddDesc_ServerPb_2eproto_impl();
  friend void protobuf_AssignDesc_ServerPb_2eproto();
  friend void protobuf_ShutdownFile_ServerPb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TeamUpdateTime> TeamUpdateTime_default_instance_;

// -------------------------------------------------------------------

class UserTeam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ServerPB.UserTeam) */ {
 public:
  UserTeam();
  virtual ~UserTeam();

  UserTeam(const UserTeam& from);

  inline UserTeam& operator=(const UserTeam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserTeam& default_instance();

  static const UserTeam* internal_default_instance();

  void Swap(UserTeam* other);

  // implements Message ----------------------------------------------

  inline UserTeam* New() const { return New(NULL); }

  UserTeam* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserTeam& from);
  void MergeFrom(const UserTeam& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserTeam* other);
  void UnsafeMergeFrom(const UserTeam& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .NetMsg.TeamInfo team = 1;
  bool has_team() const;
  void clear_team();
  static const int kTeamFieldNumber = 1;
  const ::NetMsg::TeamInfo& team() const;
  ::NetMsg::TeamInfo* mutable_team();
  ::NetMsg::TeamInfo* release_team();
  void set_allocated_team(::NetMsg::TeamInfo* team);

  // optional .NetMsg.RunPathAck path = 2;
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 2;
  const ::NetMsg::RunPathAck& path() const;
  ::NetMsg::RunPathAck* mutable_path();
  ::NetMsg::RunPathAck* release_path();
  void set_allocated_path(::NetMsg::RunPathAck* path);

  // optional int32 curCity = 3;
  void clear_curcity();
  static const int kCurCityFieldNumber = 3;
  ::google::protobuf::int32 curcity() const;
  void set_curcity(::google::protobuf::int32 value);

  // optional uint32 updateTime = 4;
  void clear_updatetime();
  static const int kUpdateTimeFieldNumber = 4;
  ::google::protobuf::uint32 updatetime() const;
  void set_updatetime(::google::protobuf::uint32 value);

  // optional .ServerPB.MiningInfo miningInfo = 5;
  bool has_mininginfo() const;
  void clear_mininginfo();
  static const int kMiningInfoFieldNumber = 5;
  const ::ServerPB::MiningInfo& mininginfo() const;
  ::ServerPB::MiningInfo* mutable_mininginfo();
  ::ServerPB::MiningInfo* release_mininginfo();
  void set_allocated_mininginfo(::ServerPB::MiningInfo* mininginfo);

  // @@protoc_insertion_point(class_scope:ServerPB.UserTeam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NetMsg::TeamInfo* team_;
  ::NetMsg::RunPathAck* path_;
  ::ServerPB::MiningInfo* mininginfo_;
  ::google::protobuf::int32 curcity_;
  ::google::protobuf::uint32 updatetime_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_ServerPb_2eproto_impl();
  friend void  protobuf_AddDesc_ServerPb_2eproto_impl();
  friend void protobuf_AssignDesc_ServerPb_2eproto();
  friend void protobuf_ShutdownFile_ServerPb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UserTeam> UserTeam_default_instance_;

// -------------------------------------------------------------------

class UserAddData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ServerPB.UserAddData) */ {
 public:
  UserAddData();
  virtual ~UserAddData();

  UserAddData(const UserAddData& from);

  inline UserAddData& operator=(const UserAddData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserAddData& default_instance();

  static const UserAddData* internal_default_instance();

  void Swap(UserAddData* other);

  // implements Message ----------------------------------------------

  inline UserAddData* New() const { return New(NULL); }

  UserAddData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserAddData& from);
  void MergeFrom(const UserAddData& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserAddData* other);
  void UnsafeMergeFrom(const UserAddData& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 recruitHeros = 1;
  int recruitheros_size() const;
  void clear_recruitheros();
  static const int kRecruitHerosFieldNumber = 1;
  ::google::protobuf::uint32 recruitheros(int index) const;
  void set_recruitheros(int index, ::google::protobuf::uint32 value);
  void add_recruitheros(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      recruitheros() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_recruitheros();

  // repeated uint32 firstHaveHero = 2;
  int firsthavehero_size() const;
  void clear_firsthavehero();
  static const int kFirstHaveHeroFieldNumber = 2;
  ::google::protobuf::uint32 firsthavehero(int index) const;
  void set_firsthavehero(int index, ::google::protobuf::uint32 value);
  void add_firsthavehero(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      firsthavehero() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_firsthavehero();

  // repeated .ServerPB.BioClass heroBios = 3;
  int herobios_size() const;
  void clear_herobios();
  static const int kHeroBiosFieldNumber = 3;
  const ::ServerPB::BioClass& herobios(int index) const;
  ::ServerPB::BioClass* mutable_herobios(int index);
  ::ServerPB::BioClass* add_herobios();
  ::google::protobuf::RepeatedPtrField< ::ServerPB::BioClass >*
      mutable_herobios();
  const ::google::protobuf::RepeatedPtrField< ::ServerPB::BioClass >&
      herobios() const;

  // repeated .ServerPB.RaffleHeroTimes raffTimes = 4;
  int rafftimes_size() const;
  void clear_rafftimes();
  static const int kRaffTimesFieldNumber = 4;
  const ::ServerPB::RaffleHeroTimes& rafftimes(int index) const;
  ::ServerPB::RaffleHeroTimes* mutable_rafftimes(int index);
  ::ServerPB::RaffleHeroTimes* add_rafftimes();
  ::google::protobuf::RepeatedPtrField< ::ServerPB::RaffleHeroTimes >*
      mutable_rafftimes();
  const ::google::protobuf::RepeatedPtrField< ::ServerPB::RaffleHeroTimes >&
      rafftimes() const;

  // optional uint32 raffDay = 5;
  void clear_raffday();
  static const int kRaffDayFieldNumber = 5;
  ::google::protobuf::uint32 raffday() const;
  void set_raffday(::google::protobuf::uint32 value);

  // optional uint32 selHero = 6;
  void clear_selhero();
  static const int kSelHeroFieldNumber = 6;
  ::google::protobuf::uint32 selhero() const;
  void set_selhero(::google::protobuf::uint32 value);

  // repeated .ServerPB.UserBanquetInfo banquetInfos = 7;
  int banquetinfos_size() const;
  void clear_banquetinfos();
  static const int kBanquetInfosFieldNumber = 7;
  const ::ServerPB::UserBanquetInfo& banquetinfos(int index) const;
  ::ServerPB::UserBanquetInfo* mutable_banquetinfos(int index);
  ::ServerPB::UserBanquetInfo* add_banquetinfos();
  ::google::protobuf::RepeatedPtrField< ::ServerPB::UserBanquetInfo >*
      mutable_banquetinfos();
  const ::google::protobuf::RepeatedPtrField< ::ServerPB::UserBanquetInfo >&
      banquetinfos() const;

  // repeated .ServerPB.UserTeam teams = 8;
  int teams_size() const;
  void clear_teams();
  static const int kTeamsFieldNumber = 8;
  const ::ServerPB::UserTeam& teams(int index) const;
  ::ServerPB::UserTeam* mutable_teams(int index);
  ::ServerPB::UserTeam* add_teams();
  ::google::protobuf::RepeatedPtrField< ::ServerPB::UserTeam >*
      mutable_teams();
  const ::google::protobuf::RepeatedPtrField< ::ServerPB::UserTeam >&
      teams() const;

  // @@protoc_insertion_point(class_scope:ServerPB.UserAddData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > recruitheros_;
  mutable int _recruitheros_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > firsthavehero_;
  mutable int _firsthavehero_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::ServerPB::BioClass > herobios_;
  ::google::protobuf::RepeatedPtrField< ::ServerPB::RaffleHeroTimes > rafftimes_;
  ::google::protobuf::RepeatedPtrField< ::ServerPB::UserBanquetInfo > banquetinfos_;
  ::google::protobuf::RepeatedPtrField< ::ServerPB::UserTeam > teams_;
  ::google::protobuf::uint32 raffday_;
  ::google::protobuf::uint32 selhero_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_ServerPb_2eproto_impl();
  friend void  protobuf_AddDesc_ServerPb_2eproto_impl();
  friend void protobuf_AssignDesc_ServerPb_2eproto();
  friend void protobuf_ShutdownFile_ServerPb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UserAddData> UserAddData_default_instance_;

// -------------------------------------------------------------------

class MiningInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ServerPB.MiningInfo) */ {
 public:
  MiningInfo();
  virtual ~MiningInfo();

  MiningInfo(const MiningInfo& from);

  inline MiningInfo& operator=(const MiningInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MiningInfo& default_instance();

  static const MiningInfo* internal_default_instance();

  void Swap(MiningInfo* other);

  // implements Message ----------------------------------------------

  inline MiningInfo* New() const { return New(NULL); }

  MiningInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MiningInfo& from);
  void MergeFrom(const MiningInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MiningInfo* other);
  void UnsafeMergeFrom(const MiningInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 startMining = 1;
  void clear_startmining();
  static const int kStartMiningFieldNumber = 1;
  ::google::protobuf::uint32 startmining() const;
  void set_startmining(::google::protobuf::uint32 value);

  // optional uint32 carryNum = 2;
  void clear_carrynum();
  static const int kCarryNumFieldNumber = 2;
  ::google::protobuf::uint32 carrynum() const;
  void set_carrynum(::google::protobuf::uint32 value);

  // optional uint32 soldierCarryOne = 3;
  void clear_soldiercarryone();
  static const int kSoldierCarryOneFieldNumber = 3;
  ::google::protobuf::uint32 soldiercarryone() const;
  void set_soldiercarryone(::google::protobuf::uint32 value);

  // optional uint32 soldierCarryMax = 4;
  void clear_soldiercarrymax();
  static const int kSoldierCarryMaxFieldNumber = 4;
  ::google::protobuf::uint32 soldiercarrymax() const;
  void set_soldiercarrymax(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ServerPB.MiningInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 startmining_;
  ::google::protobuf::uint32 carrynum_;
  ::google::protobuf::uint32 soldiercarryone_;
  ::google::protobuf::uint32 soldiercarrymax_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_ServerPb_2eproto_impl();
  friend void  protobuf_AddDesc_ServerPb_2eproto_impl();
  friend void protobuf_AssignDesc_ServerPb_2eproto();
  friend void protobuf_ShutdownFile_ServerPb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<MiningInfo> MiningInfo_default_instance_;

// -------------------------------------------------------------------

class UserCluster : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ServerPB.UserCluster) */ {
 public:
  UserCluster();
  virtual ~UserCluster();

  UserCluster(const UserCluster& from);

  inline UserCluster& operator=(const UserCluster& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserCluster& default_instance();

  static const UserCluster* internal_default_instance();

  void Swap(UserCluster* other);

  // implements Message ----------------------------------------------

  inline UserCluster* New() const { return New(NULL); }

  UserCluster* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserCluster& from);
  void MergeFrom(const UserCluster& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserCluster* other);
  void UnsafeMergeFrom(const UserCluster& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .NetMsg.ClusterCreater creater = 1;
  bool has_creater() const;
  void clear_creater();
  static const int kCreaterFieldNumber = 1;
  const ::NetMsg::ClusterCreater& creater() const;
  ::NetMsg::ClusterCreater* mutable_creater();
  ::NetMsg::ClusterCreater* release_creater();
  void set_allocated_creater(::NetMsg::ClusterCreater* creater);

  // repeated .NetMsg.ClusterMemberInfo info = 2;
  int info_size() const;
  void clear_info();
  static const int kInfoFieldNumber = 2;
  const ::NetMsg::ClusterMemberInfo& info(int index) const;
  ::NetMsg::ClusterMemberInfo* mutable_info(int index);
  ::NetMsg::ClusterMemberInfo* add_info();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::ClusterMemberInfo >*
      mutable_info();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::ClusterMemberInfo >&
      info() const;

  // repeated .NetMsg.ClusterMemberDetail detail = 3;
  int detail_size() const;
  void clear_detail();
  static const int kDetailFieldNumber = 3;
  const ::NetMsg::ClusterMemberDetail& detail(int index) const;
  ::NetMsg::ClusterMemberDetail* mutable_detail(int index);
  ::NetMsg::ClusterMemberDetail* add_detail();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::ClusterMemberDetail >*
      mutable_detail();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::ClusterMemberDetail >&
      detail() const;

  // optional bool pub = 4;
  void clear_pub();
  static const int kPubFieldNumber = 4;
  bool pub() const;
  void set_pub(bool value);

  // @@protoc_insertion_point(class_scope:ServerPB.UserCluster)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::ClusterMemberInfo > info_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::ClusterMemberDetail > detail_;
  ::NetMsg::ClusterCreater* creater_;
  bool pub_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_ServerPb_2eproto_impl();
  friend void  protobuf_AddDesc_ServerPb_2eproto_impl();
  friend void protobuf_AssignDesc_ServerPb_2eproto();
  friend void protobuf_ShutdownFile_ServerPb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UserCluster> UserCluster_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// UserCamp

// optional uint32 type = 1;
inline void UserCamp::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 UserCamp::type() const {
  // @@protoc_insertion_point(field_get:ServerPB.UserCamp.type)
  return type_;
}
inline void UserCamp::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:ServerPB.UserCamp.type)
}

// optional uint32 level = 2;
inline void UserCamp::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 UserCamp::level() const {
  // @@protoc_insertion_point(field_get:ServerPB.UserCamp.level)
  return level_;
}
inline void UserCamp::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:ServerPB.UserCamp.level)
}

// optional float outputData = 3;
inline void UserCamp::clear_outputdata() {
  outputdata_ = 0;
}
inline float UserCamp::outputdata() const {
  // @@protoc_insertion_point(field_get:ServerPB.UserCamp.outputData)
  return outputdata_;
}
inline void UserCamp::set_outputdata(float value) {
  
  outputdata_ = value;
  // @@protoc_insertion_point(field_set:ServerPB.UserCamp.outputData)
}

// optional uint32 leftTime = 4;
inline void UserCamp::clear_lefttime() {
  lefttime_ = 0u;
}
inline ::google::protobuf::uint32 UserCamp::lefttime() const {
  // @@protoc_insertion_point(field_get:ServerPB.UserCamp.leftTime)
  return lefttime_;
}
inline void UserCamp::set_lefttime(::google::protobuf::uint32 value) {
  
  lefttime_ = value;
  // @@protoc_insertion_point(field_set:ServerPB.UserCamp.leftTime)
}

// optional uint32 levelUpTime = 5;
inline void UserCamp::clear_leveluptime() {
  leveluptime_ = 0u;
}
inline ::google::protobuf::uint32 UserCamp::leveluptime() const {
  // @@protoc_insertion_point(field_get:ServerPB.UserCamp.levelUpTime)
  return leveluptime_;
}
inline void UserCamp::set_leveluptime(::google::protobuf::uint32 value) {
  
  leveluptime_ = value;
  // @@protoc_insertion_point(field_set:ServerPB.UserCamp.levelUpTime)
}

// optional uint32 outputTime = 6;
inline void UserCamp::clear_outputtime() {
  outputtime_ = 0u;
}
inline ::google::protobuf::uint32 UserCamp::outputtime() const {
  // @@protoc_insertion_point(field_get:ServerPB.UserCamp.outputTime)
  return outputtime_;
}
inline void UserCamp::set_outputtime(::google::protobuf::uint32 value) {
  
  outputtime_ = value;
  // @@protoc_insertion_point(field_set:ServerPB.UserCamp.outputTime)
}

inline const UserCamp* UserCamp::internal_default_instance() {
  return &UserCamp_default_instance_.get();
}
// -------------------------------------------------------------------

// UserCamps

// repeated .ServerPB.UserCamp camps = 1;
inline int UserCamps::camps_size() const {
  return camps_.size();
}
inline void UserCamps::clear_camps() {
  camps_.Clear();
}
inline const ::ServerPB::UserCamp& UserCamps::camps(int index) const {
  // @@protoc_insertion_point(field_get:ServerPB.UserCamps.camps)
  return camps_.Get(index);
}
inline ::ServerPB::UserCamp* UserCamps::mutable_camps(int index) {
  // @@protoc_insertion_point(field_mutable:ServerPB.UserCamps.camps)
  return camps_.Mutable(index);
}
inline ::ServerPB::UserCamp* UserCamps::add_camps() {
  // @@protoc_insertion_point(field_add:ServerPB.UserCamps.camps)
  return camps_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ServerPB::UserCamp >*
UserCamps::mutable_camps() {
  // @@protoc_insertion_point(field_mutable_list:ServerPB.UserCamps.camps)
  return &camps_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ServerPB::UserCamp >&
UserCamps::camps() const {
  // @@protoc_insertion_point(field_list:ServerPB.UserCamps.camps)
  return camps_;
}

inline const UserCamps* UserCamps::internal_default_instance() {
  return &UserCamps_default_instance_.get();
}
// -------------------------------------------------------------------

// UserCycBattle

// optional uint32 maxDifficulty = 1;
inline void UserCycBattle::clear_maxdifficulty() {
  maxdifficulty_ = 0u;
}
inline ::google::protobuf::uint32 UserCycBattle::maxdifficulty() const {
  // @@protoc_insertion_point(field_get:ServerPB.UserCycBattle.maxDifficulty)
  return maxdifficulty_;
}
inline void UserCycBattle::set_maxdifficulty(::google::protobuf::uint32 value) {
  
  maxdifficulty_ = value;
  // @@protoc_insertion_point(field_set:ServerPB.UserCycBattle.maxDifficulty)
}

// optional uint32 curDifficulty = 2;
inline void UserCycBattle::clear_curdifficulty() {
  curdifficulty_ = 0u;
}
inline ::google::protobuf::uint32 UserCycBattle::curdifficulty() const {
  // @@protoc_insertion_point(field_get:ServerPB.UserCycBattle.curDifficulty)
  return curdifficulty_;
}
inline void UserCycBattle::set_curdifficulty(::google::protobuf::uint32 value) {
  
  curdifficulty_ = value;
  // @@protoc_insertion_point(field_set:ServerPB.UserCycBattle.curDifficulty)
}

// optional uint32 curRound = 3;
inline void UserCycBattle::clear_curround() {
  curround_ = 0u;
}
inline ::google::protobuf::uint32 UserCycBattle::curround() const {
  // @@protoc_insertion_point(field_get:ServerPB.UserCycBattle.curRound)
  return curround_;
}
inline void UserCycBattle::set_curround(::google::protobuf::uint32 value) {
  
  curround_ = value;
  // @@protoc_insertion_point(field_set:ServerPB.UserCycBattle.curRound)
}

// optional uint32 leftUnlockTimes = 4;
inline void UserCycBattle::clear_leftunlocktimes() {
  leftunlocktimes_ = 0u;
}
inline ::google::protobuf::uint32 UserCycBattle::leftunlocktimes() const {
  // @@protoc_insertion_point(field_get:ServerPB.UserCycBattle.leftUnlockTimes)
  return leftunlocktimes_;
}
inline void UserCycBattle::set_leftunlocktimes(::google::protobuf::uint32 value) {
  
  leftunlocktimes_ = value;
  // @@protoc_insertion_point(field_set:ServerPB.UserCycBattle.leftUnlockTimes)
}

// optional uint32 leftTime = 5;
inline void UserCycBattle::clear_lefttime() {
  lefttime_ = 0u;
}
inline ::google::protobuf::uint32 UserCycBattle::lefttime() const {
  // @@protoc_insertion_point(field_get:ServerPB.UserCycBattle.leftTime)
  return lefttime_;
}
inline void UserCycBattle::set_lefttime(::google::protobuf::uint32 value) {
  
  lefttime_ = value;
  // @@protoc_insertion_point(field_set:ServerPB.UserCycBattle.leftTime)
}

// optional uint32 enemyPath = 7;
inline void UserCycBattle::clear_enemypath() {
  enemypath_ = 0u;
}
inline ::google::protobuf::uint32 UserCycBattle::enemypath() const {
  // @@protoc_insertion_point(field_get:ServerPB.UserCycBattle.enemyPath)
  return enemypath_;
}
inline void UserCycBattle::set_enemypath(::google::protobuf::uint32 value) {
  
  enemypath_ = value;
  // @@protoc_insertion_point(field_set:ServerPB.UserCycBattle.enemyPath)
}

// optional float percent = 8;
inline void UserCycBattle::clear_percent() {
  percent_ = 0;
}
inline float UserCycBattle::percent() const {
  // @@protoc_insertion_point(field_get:ServerPB.UserCycBattle.percent)
  return percent_;
}
inline void UserCycBattle::set_percent(float value) {
  
  percent_ = value;
  // @@protoc_insertion_point(field_set:ServerPB.UserCycBattle.percent)
}

// optional uint64 battleId = 9;
inline void UserCycBattle::clear_battleid() {
  battleid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UserCycBattle::battleid() const {
  // @@protoc_insertion_point(field_get:ServerPB.UserCycBattle.battleId)
  return battleid_;
}
inline void UserCycBattle::set_battleid(::google::protobuf::uint64 value) {
  
  battleid_ = value;
  // @@protoc_insertion_point(field_set:ServerPB.UserCycBattle.battleId)
}

// optional uint32 enemyTeam = 10;
inline void UserCycBattle::clear_enemyteam() {
  enemyteam_ = 0u;
}
inline ::google::protobuf::uint32 UserCycBattle::enemyteam() const {
  // @@protoc_insertion_point(field_get:ServerPB.UserCycBattle.enemyTeam)
  return enemyteam_;
}
inline void UserCycBattle::set_enemyteam(::google::protobuf::uint32 value) {
  
  enemyteam_ = value;
  // @@protoc_insertion_point(field_set:ServerPB.UserCycBattle.enemyTeam)
}

inline const UserCycBattle* UserCycBattle::internal_default_instance() {
  return &UserCycBattle_default_instance_.get();
}
// -------------------------------------------------------------------

// BioStep

// optional uint32 stepId = 1;
inline void BioStep::clear_stepid() {
  stepid_ = 0u;
}
inline ::google::protobuf::uint32 BioStep::stepid() const {
  // @@protoc_insertion_point(field_get:ServerPB.BioStep.stepId)
  return stepid_;
}
inline void BioStep::set_stepid(::google::protobuf::uint32 value) {
  
  stepid_ = value;
  // @@protoc_insertion_point(field_set:ServerPB.BioStep.stepId)
}

// repeated uint32 branchIds = 2;
inline int BioStep::branchids_size() const {
  return branchids_.size();
}
inline void BioStep::clear_branchids() {
  branchids_.Clear();
}
inline ::google::protobuf::uint32 BioStep::branchids(int index) const {
  // @@protoc_insertion_point(field_get:ServerPB.BioStep.branchIds)
  return branchids_.Get(index);
}
inline void BioStep::set_branchids(int index, ::google::protobuf::uint32 value) {
  branchids_.Set(index, value);
  // @@protoc_insertion_point(field_set:ServerPB.BioStep.branchIds)
}
inline void BioStep::add_branchids(::google::protobuf::uint32 value) {
  branchids_.Add(value);
  // @@protoc_insertion_point(field_add:ServerPB.BioStep.branchIds)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BioStep::branchids() const {
  // @@protoc_insertion_point(field_list:ServerPB.BioStep.branchIds)
  return branchids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BioStep::mutable_branchids() {
  // @@protoc_insertion_point(field_mutable_list:ServerPB.BioStep.branchIds)
  return &branchids_;
}

inline const BioStep* BioStep::internal_default_instance() {
  return &BioStep_default_instance_.get();
}
// -------------------------------------------------------------------

// BioClass

// optional uint32 heroClass = 1;
inline void BioClass::clear_heroclass() {
  heroclass_ = 0u;
}
inline ::google::protobuf::uint32 BioClass::heroclass() const {
  // @@protoc_insertion_point(field_get:ServerPB.BioClass.heroClass)
  return heroclass_;
}
inline void BioClass::set_heroclass(::google::protobuf::uint32 value) {
  
  heroclass_ = value;
  // @@protoc_insertion_point(field_set:ServerPB.BioClass.heroClass)
}

// repeated .ServerPB.BioStep step = 2;
inline int BioClass::step_size() const {
  return step_.size();
}
inline void BioClass::clear_step() {
  step_.Clear();
}
inline const ::ServerPB::BioStep& BioClass::step(int index) const {
  // @@protoc_insertion_point(field_get:ServerPB.BioClass.step)
  return step_.Get(index);
}
inline ::ServerPB::BioStep* BioClass::mutable_step(int index) {
  // @@protoc_insertion_point(field_mutable:ServerPB.BioClass.step)
  return step_.Mutable(index);
}
inline ::ServerPB::BioStep* BioClass::add_step() {
  // @@protoc_insertion_point(field_add:ServerPB.BioClass.step)
  return step_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ServerPB::BioStep >*
BioClass::mutable_step() {
  // @@protoc_insertion_point(field_mutable_list:ServerPB.BioClass.step)
  return &step_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ServerPB::BioStep >&
BioClass::step() const {
  // @@protoc_insertion_point(field_list:ServerPB.BioClass.step)
  return step_;
}

inline const BioClass* BioClass::internal_default_instance() {
  return &BioClass_default_instance_.get();
}
// -------------------------------------------------------------------

// RaffleHeroTimes

// optional uint32 id = 1;
inline void RaffleHeroTimes::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 RaffleHeroTimes::id() const {
  // @@protoc_insertion_point(field_get:ServerPB.RaffleHeroTimes.id)
  return id_;
}
inline void RaffleHeroTimes::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ServerPB.RaffleHeroTimes.id)
}

// optional uint32 useTimes = 2;
inline void RaffleHeroTimes::clear_usetimes() {
  usetimes_ = 0u;
}
inline ::google::protobuf::uint32 RaffleHeroTimes::usetimes() const {
  // @@protoc_insertion_point(field_get:ServerPB.RaffleHeroTimes.useTimes)
  return usetimes_;
}
inline void RaffleHeroTimes::set_usetimes(::google::protobuf::uint32 value) {
  
  usetimes_ = value;
  // @@protoc_insertion_point(field_set:ServerPB.RaffleHeroTimes.useTimes)
}

// optional uint32 oneRaffTimes = 3;
inline void RaffleHeroTimes::clear_onerafftimes() {
  onerafftimes_ = 0u;
}
inline ::google::protobuf::uint32 RaffleHeroTimes::onerafftimes() const {
  // @@protoc_insertion_point(field_get:ServerPB.RaffleHeroTimes.oneRaffTimes)
  return onerafftimes_;
}
inline void RaffleHeroTimes::set_onerafftimes(::google::protobuf::uint32 value) {
  
  onerafftimes_ = value;
  // @@protoc_insertion_point(field_set:ServerPB.RaffleHeroTimes.oneRaffTimes)
}

inline const RaffleHeroTimes* RaffleHeroTimes::internal_default_instance() {
  return &RaffleHeroTimes_default_instance_.get();
}
// -------------------------------------------------------------------

// UserBanquetInfo

// optional .NetMsg.BanquetHeros info = 1;
inline bool UserBanquetInfo::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void UserBanquetInfo::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
inline const ::NetMsg::BanquetHeros& UserBanquetInfo::info() const {
  // @@protoc_insertion_point(field_get:ServerPB.UserBanquetInfo.info)
  return info_ != NULL ? *info_
                         : *::NetMsg::BanquetHeros::internal_default_instance();
}
inline ::NetMsg::BanquetHeros* UserBanquetInfo::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::NetMsg::BanquetHeros;
  }
  // @@protoc_insertion_point(field_mutable:ServerPB.UserBanquetInfo.info)
  return info_;
}
inline ::NetMsg::BanquetHeros* UserBanquetInfo::release_info() {
  // @@protoc_insertion_point(field_release:ServerPB.UserBanquetInfo.info)
  
  ::NetMsg::BanquetHeros* temp = info_;
  info_ = NULL;
  return temp;
}
inline void UserBanquetInfo::set_allocated_info(::NetMsg::BanquetHeros* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ServerPB.UserBanquetInfo.info)
}

// optional uint32 createTime = 2;
inline void UserBanquetInfo::clear_createtime() {
  createtime_ = 0u;
}
inline ::google::protobuf::uint32 UserBanquetInfo::createtime() const {
  // @@protoc_insertion_point(field_get:ServerPB.UserBanquetInfo.createTime)
  return createtime_;
}
inline void UserBanquetInfo::set_createtime(::google::protobuf::uint32 value) {
  
  createtime_ = value;
  // @@protoc_insertion_point(field_set:ServerPB.UserBanquetInfo.createTime)
}

// optional uint32 duraTime = 3;
inline void UserBanquetInfo::clear_duratime() {
  duratime_ = 0u;
}
inline ::google::protobuf::uint32 UserBanquetInfo::duratime() const {
  // @@protoc_insertion_point(field_get:ServerPB.UserBanquetInfo.duraTime)
  return duratime_;
}
inline void UserBanquetInfo::set_duratime(::google::protobuf::uint32 value) {
  
  duratime_ = value;
  // @@protoc_insertion_point(field_set:ServerPB.UserBanquetInfo.duraTime)
}

inline const UserBanquetInfo* UserBanquetInfo::internal_default_instance() {
  return &UserBanquetInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// TeamUpdateTime

// optional uint32 pos = 1;
inline void TeamUpdateTime::clear_pos() {
  pos_ = 0u;
}
inline ::google::protobuf::uint32 TeamUpdateTime::pos() const {
  // @@protoc_insertion_point(field_get:ServerPB.TeamUpdateTime.pos)
  return pos_;
}
inline void TeamUpdateTime::set_pos(::google::protobuf::uint32 value) {
  
  pos_ = value;
  // @@protoc_insertion_point(field_set:ServerPB.TeamUpdateTime.pos)
}

// optional uint32 time = 2;
inline void TeamUpdateTime::clear_time() {
  time_ = 0u;
}
inline ::google::protobuf::uint32 TeamUpdateTime::time() const {
  // @@protoc_insertion_point(field_get:ServerPB.TeamUpdateTime.time)
  return time_;
}
inline void TeamUpdateTime::set_time(::google::protobuf::uint32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:ServerPB.TeamUpdateTime.time)
}

inline const TeamUpdateTime* TeamUpdateTime::internal_default_instance() {
  return &TeamUpdateTime_default_instance_.get();
}
// -------------------------------------------------------------------

// UserTeam

// optional .NetMsg.TeamInfo team = 1;
inline bool UserTeam::has_team() const {
  return this != internal_default_instance() && team_ != NULL;
}
inline void UserTeam::clear_team() {
  if (GetArenaNoVirtual() == NULL && team_ != NULL) delete team_;
  team_ = NULL;
}
inline const ::NetMsg::TeamInfo& UserTeam::team() const {
  // @@protoc_insertion_point(field_get:ServerPB.UserTeam.team)
  return team_ != NULL ? *team_
                         : *::NetMsg::TeamInfo::internal_default_instance();
}
inline ::NetMsg::TeamInfo* UserTeam::mutable_team() {
  
  if (team_ == NULL) {
    team_ = new ::NetMsg::TeamInfo;
  }
  // @@protoc_insertion_point(field_mutable:ServerPB.UserTeam.team)
  return team_;
}
inline ::NetMsg::TeamInfo* UserTeam::release_team() {
  // @@protoc_insertion_point(field_release:ServerPB.UserTeam.team)
  
  ::NetMsg::TeamInfo* temp = team_;
  team_ = NULL;
  return temp;
}
inline void UserTeam::set_allocated_team(::NetMsg::TeamInfo* team) {
  delete team_;
  team_ = team;
  if (team) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ServerPB.UserTeam.team)
}

// optional .NetMsg.RunPathAck path = 2;
inline bool UserTeam::has_path() const {
  return this != internal_default_instance() && path_ != NULL;
}
inline void UserTeam::clear_path() {
  if (GetArenaNoVirtual() == NULL && path_ != NULL) delete path_;
  path_ = NULL;
}
inline const ::NetMsg::RunPathAck& UserTeam::path() const {
  // @@protoc_insertion_point(field_get:ServerPB.UserTeam.path)
  return path_ != NULL ? *path_
                         : *::NetMsg::RunPathAck::internal_default_instance();
}
inline ::NetMsg::RunPathAck* UserTeam::mutable_path() {
  
  if (path_ == NULL) {
    path_ = new ::NetMsg::RunPathAck;
  }
  // @@protoc_insertion_point(field_mutable:ServerPB.UserTeam.path)
  return path_;
}
inline ::NetMsg::RunPathAck* UserTeam::release_path() {
  // @@protoc_insertion_point(field_release:ServerPB.UserTeam.path)
  
  ::NetMsg::RunPathAck* temp = path_;
  path_ = NULL;
  return temp;
}
inline void UserTeam::set_allocated_path(::NetMsg::RunPathAck* path) {
  delete path_;
  path_ = path;
  if (path) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ServerPB.UserTeam.path)
}

// optional int32 curCity = 3;
inline void UserTeam::clear_curcity() {
  curcity_ = 0;
}
inline ::google::protobuf::int32 UserTeam::curcity() const {
  // @@protoc_insertion_point(field_get:ServerPB.UserTeam.curCity)
  return curcity_;
}
inline void UserTeam::set_curcity(::google::protobuf::int32 value) {
  
  curcity_ = value;
  // @@protoc_insertion_point(field_set:ServerPB.UserTeam.curCity)
}

// optional uint32 updateTime = 4;
inline void UserTeam::clear_updatetime() {
  updatetime_ = 0u;
}
inline ::google::protobuf::uint32 UserTeam::updatetime() const {
  // @@protoc_insertion_point(field_get:ServerPB.UserTeam.updateTime)
  return updatetime_;
}
inline void UserTeam::set_updatetime(::google::protobuf::uint32 value) {
  
  updatetime_ = value;
  // @@protoc_insertion_point(field_set:ServerPB.UserTeam.updateTime)
}

// optional .ServerPB.MiningInfo miningInfo = 5;
inline bool UserTeam::has_mininginfo() const {
  return this != internal_default_instance() && mininginfo_ != NULL;
}
inline void UserTeam::clear_mininginfo() {
  if (GetArenaNoVirtual() == NULL && mininginfo_ != NULL) delete mininginfo_;
  mininginfo_ = NULL;
}
inline const ::ServerPB::MiningInfo& UserTeam::mininginfo() const {
  // @@protoc_insertion_point(field_get:ServerPB.UserTeam.miningInfo)
  return mininginfo_ != NULL ? *mininginfo_
                         : *::ServerPB::MiningInfo::internal_default_instance();
}
inline ::ServerPB::MiningInfo* UserTeam::mutable_mininginfo() {
  
  if (mininginfo_ == NULL) {
    mininginfo_ = new ::ServerPB::MiningInfo;
  }
  // @@protoc_insertion_point(field_mutable:ServerPB.UserTeam.miningInfo)
  return mininginfo_;
}
inline ::ServerPB::MiningInfo* UserTeam::release_mininginfo() {
  // @@protoc_insertion_point(field_release:ServerPB.UserTeam.miningInfo)
  
  ::ServerPB::MiningInfo* temp = mininginfo_;
  mininginfo_ = NULL;
  return temp;
}
inline void UserTeam::set_allocated_mininginfo(::ServerPB::MiningInfo* mininginfo) {
  delete mininginfo_;
  mininginfo_ = mininginfo;
  if (mininginfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ServerPB.UserTeam.miningInfo)
}

inline const UserTeam* UserTeam::internal_default_instance() {
  return &UserTeam_default_instance_.get();
}
// -------------------------------------------------------------------

// UserAddData

// repeated uint32 recruitHeros = 1;
inline int UserAddData::recruitheros_size() const {
  return recruitheros_.size();
}
inline void UserAddData::clear_recruitheros() {
  recruitheros_.Clear();
}
inline ::google::protobuf::uint32 UserAddData::recruitheros(int index) const {
  // @@protoc_insertion_point(field_get:ServerPB.UserAddData.recruitHeros)
  return recruitheros_.Get(index);
}
inline void UserAddData::set_recruitheros(int index, ::google::protobuf::uint32 value) {
  recruitheros_.Set(index, value);
  // @@protoc_insertion_point(field_set:ServerPB.UserAddData.recruitHeros)
}
inline void UserAddData::add_recruitheros(::google::protobuf::uint32 value) {
  recruitheros_.Add(value);
  // @@protoc_insertion_point(field_add:ServerPB.UserAddData.recruitHeros)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UserAddData::recruitheros() const {
  // @@protoc_insertion_point(field_list:ServerPB.UserAddData.recruitHeros)
  return recruitheros_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UserAddData::mutable_recruitheros() {
  // @@protoc_insertion_point(field_mutable_list:ServerPB.UserAddData.recruitHeros)
  return &recruitheros_;
}

// repeated uint32 firstHaveHero = 2;
inline int UserAddData::firsthavehero_size() const {
  return firsthavehero_.size();
}
inline void UserAddData::clear_firsthavehero() {
  firsthavehero_.Clear();
}
inline ::google::protobuf::uint32 UserAddData::firsthavehero(int index) const {
  // @@protoc_insertion_point(field_get:ServerPB.UserAddData.firstHaveHero)
  return firsthavehero_.Get(index);
}
inline void UserAddData::set_firsthavehero(int index, ::google::protobuf::uint32 value) {
  firsthavehero_.Set(index, value);
  // @@protoc_insertion_point(field_set:ServerPB.UserAddData.firstHaveHero)
}
inline void UserAddData::add_firsthavehero(::google::protobuf::uint32 value) {
  firsthavehero_.Add(value);
  // @@protoc_insertion_point(field_add:ServerPB.UserAddData.firstHaveHero)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UserAddData::firsthavehero() const {
  // @@protoc_insertion_point(field_list:ServerPB.UserAddData.firstHaveHero)
  return firsthavehero_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UserAddData::mutable_firsthavehero() {
  // @@protoc_insertion_point(field_mutable_list:ServerPB.UserAddData.firstHaveHero)
  return &firsthavehero_;
}

// repeated .ServerPB.BioClass heroBios = 3;
inline int UserAddData::herobios_size() const {
  return herobios_.size();
}
inline void UserAddData::clear_herobios() {
  herobios_.Clear();
}
inline const ::ServerPB::BioClass& UserAddData::herobios(int index) const {
  // @@protoc_insertion_point(field_get:ServerPB.UserAddData.heroBios)
  return herobios_.Get(index);
}
inline ::ServerPB::BioClass* UserAddData::mutable_herobios(int index) {
  // @@protoc_insertion_point(field_mutable:ServerPB.UserAddData.heroBios)
  return herobios_.Mutable(index);
}
inline ::ServerPB::BioClass* UserAddData::add_herobios() {
  // @@protoc_insertion_point(field_add:ServerPB.UserAddData.heroBios)
  return herobios_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ServerPB::BioClass >*
UserAddData::mutable_herobios() {
  // @@protoc_insertion_point(field_mutable_list:ServerPB.UserAddData.heroBios)
  return &herobios_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ServerPB::BioClass >&
UserAddData::herobios() const {
  // @@protoc_insertion_point(field_list:ServerPB.UserAddData.heroBios)
  return herobios_;
}

// repeated .ServerPB.RaffleHeroTimes raffTimes = 4;
inline int UserAddData::rafftimes_size() const {
  return rafftimes_.size();
}
inline void UserAddData::clear_rafftimes() {
  rafftimes_.Clear();
}
inline const ::ServerPB::RaffleHeroTimes& UserAddData::rafftimes(int index) const {
  // @@protoc_insertion_point(field_get:ServerPB.UserAddData.raffTimes)
  return rafftimes_.Get(index);
}
inline ::ServerPB::RaffleHeroTimes* UserAddData::mutable_rafftimes(int index) {
  // @@protoc_insertion_point(field_mutable:ServerPB.UserAddData.raffTimes)
  return rafftimes_.Mutable(index);
}
inline ::ServerPB::RaffleHeroTimes* UserAddData::add_rafftimes() {
  // @@protoc_insertion_point(field_add:ServerPB.UserAddData.raffTimes)
  return rafftimes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ServerPB::RaffleHeroTimes >*
UserAddData::mutable_rafftimes() {
  // @@protoc_insertion_point(field_mutable_list:ServerPB.UserAddData.raffTimes)
  return &rafftimes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ServerPB::RaffleHeroTimes >&
UserAddData::rafftimes() const {
  // @@protoc_insertion_point(field_list:ServerPB.UserAddData.raffTimes)
  return rafftimes_;
}

// optional uint32 raffDay = 5;
inline void UserAddData::clear_raffday() {
  raffday_ = 0u;
}
inline ::google::protobuf::uint32 UserAddData::raffday() const {
  // @@protoc_insertion_point(field_get:ServerPB.UserAddData.raffDay)
  return raffday_;
}
inline void UserAddData::set_raffday(::google::protobuf::uint32 value) {
  
  raffday_ = value;
  // @@protoc_insertion_point(field_set:ServerPB.UserAddData.raffDay)
}

// optional uint32 selHero = 6;
inline void UserAddData::clear_selhero() {
  selhero_ = 0u;
}
inline ::google::protobuf::uint32 UserAddData::selhero() const {
  // @@protoc_insertion_point(field_get:ServerPB.UserAddData.selHero)
  return selhero_;
}
inline void UserAddData::set_selhero(::google::protobuf::uint32 value) {
  
  selhero_ = value;
  // @@protoc_insertion_point(field_set:ServerPB.UserAddData.selHero)
}

// repeated .ServerPB.UserBanquetInfo banquetInfos = 7;
inline int UserAddData::banquetinfos_size() const {
  return banquetinfos_.size();
}
inline void UserAddData::clear_banquetinfos() {
  banquetinfos_.Clear();
}
inline const ::ServerPB::UserBanquetInfo& UserAddData::banquetinfos(int index) const {
  // @@protoc_insertion_point(field_get:ServerPB.UserAddData.banquetInfos)
  return banquetinfos_.Get(index);
}
inline ::ServerPB::UserBanquetInfo* UserAddData::mutable_banquetinfos(int index) {
  // @@protoc_insertion_point(field_mutable:ServerPB.UserAddData.banquetInfos)
  return banquetinfos_.Mutable(index);
}
inline ::ServerPB::UserBanquetInfo* UserAddData::add_banquetinfos() {
  // @@protoc_insertion_point(field_add:ServerPB.UserAddData.banquetInfos)
  return banquetinfos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ServerPB::UserBanquetInfo >*
UserAddData::mutable_banquetinfos() {
  // @@protoc_insertion_point(field_mutable_list:ServerPB.UserAddData.banquetInfos)
  return &banquetinfos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ServerPB::UserBanquetInfo >&
UserAddData::banquetinfos() const {
  // @@protoc_insertion_point(field_list:ServerPB.UserAddData.banquetInfos)
  return banquetinfos_;
}

// repeated .ServerPB.UserTeam teams = 8;
inline int UserAddData::teams_size() const {
  return teams_.size();
}
inline void UserAddData::clear_teams() {
  teams_.Clear();
}
inline const ::ServerPB::UserTeam& UserAddData::teams(int index) const {
  // @@protoc_insertion_point(field_get:ServerPB.UserAddData.teams)
  return teams_.Get(index);
}
inline ::ServerPB::UserTeam* UserAddData::mutable_teams(int index) {
  // @@protoc_insertion_point(field_mutable:ServerPB.UserAddData.teams)
  return teams_.Mutable(index);
}
inline ::ServerPB::UserTeam* UserAddData::add_teams() {
  // @@protoc_insertion_point(field_add:ServerPB.UserAddData.teams)
  return teams_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ServerPB::UserTeam >*
UserAddData::mutable_teams() {
  // @@protoc_insertion_point(field_mutable_list:ServerPB.UserAddData.teams)
  return &teams_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ServerPB::UserTeam >&
UserAddData::teams() const {
  // @@protoc_insertion_point(field_list:ServerPB.UserAddData.teams)
  return teams_;
}

inline const UserAddData* UserAddData::internal_default_instance() {
  return &UserAddData_default_instance_.get();
}
// -------------------------------------------------------------------

// MiningInfo

// optional uint32 startMining = 1;
inline void MiningInfo::clear_startmining() {
  startmining_ = 0u;
}
inline ::google::protobuf::uint32 MiningInfo::startmining() const {
  // @@protoc_insertion_point(field_get:ServerPB.MiningInfo.startMining)
  return startmining_;
}
inline void MiningInfo::set_startmining(::google::protobuf::uint32 value) {
  
  startmining_ = value;
  // @@protoc_insertion_point(field_set:ServerPB.MiningInfo.startMining)
}

// optional uint32 carryNum = 2;
inline void MiningInfo::clear_carrynum() {
  carrynum_ = 0u;
}
inline ::google::protobuf::uint32 MiningInfo::carrynum() const {
  // @@protoc_insertion_point(field_get:ServerPB.MiningInfo.carryNum)
  return carrynum_;
}
inline void MiningInfo::set_carrynum(::google::protobuf::uint32 value) {
  
  carrynum_ = value;
  // @@protoc_insertion_point(field_set:ServerPB.MiningInfo.carryNum)
}

// optional uint32 soldierCarryOne = 3;
inline void MiningInfo::clear_soldiercarryone() {
  soldiercarryone_ = 0u;
}
inline ::google::protobuf::uint32 MiningInfo::soldiercarryone() const {
  // @@protoc_insertion_point(field_get:ServerPB.MiningInfo.soldierCarryOne)
  return soldiercarryone_;
}
inline void MiningInfo::set_soldiercarryone(::google::protobuf::uint32 value) {
  
  soldiercarryone_ = value;
  // @@protoc_insertion_point(field_set:ServerPB.MiningInfo.soldierCarryOne)
}

// optional uint32 soldierCarryMax = 4;
inline void MiningInfo::clear_soldiercarrymax() {
  soldiercarrymax_ = 0u;
}
inline ::google::protobuf::uint32 MiningInfo::soldiercarrymax() const {
  // @@protoc_insertion_point(field_get:ServerPB.MiningInfo.soldierCarryMax)
  return soldiercarrymax_;
}
inline void MiningInfo::set_soldiercarrymax(::google::protobuf::uint32 value) {
  
  soldiercarrymax_ = value;
  // @@protoc_insertion_point(field_set:ServerPB.MiningInfo.soldierCarryMax)
}

inline const MiningInfo* MiningInfo::internal_default_instance() {
  return &MiningInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// UserCluster

// optional .NetMsg.ClusterCreater creater = 1;
inline bool UserCluster::has_creater() const {
  return this != internal_default_instance() && creater_ != NULL;
}
inline void UserCluster::clear_creater() {
  if (GetArenaNoVirtual() == NULL && creater_ != NULL) delete creater_;
  creater_ = NULL;
}
inline const ::NetMsg::ClusterCreater& UserCluster::creater() const {
  // @@protoc_insertion_point(field_get:ServerPB.UserCluster.creater)
  return creater_ != NULL ? *creater_
                         : *::NetMsg::ClusterCreater::internal_default_instance();
}
inline ::NetMsg::ClusterCreater* UserCluster::mutable_creater() {
  
  if (creater_ == NULL) {
    creater_ = new ::NetMsg::ClusterCreater;
  }
  // @@protoc_insertion_point(field_mutable:ServerPB.UserCluster.creater)
  return creater_;
}
inline ::NetMsg::ClusterCreater* UserCluster::release_creater() {
  // @@protoc_insertion_point(field_release:ServerPB.UserCluster.creater)
  
  ::NetMsg::ClusterCreater* temp = creater_;
  creater_ = NULL;
  return temp;
}
inline void UserCluster::set_allocated_creater(::NetMsg::ClusterCreater* creater) {
  delete creater_;
  creater_ = creater;
  if (creater) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ServerPB.UserCluster.creater)
}

// repeated .NetMsg.ClusterMemberInfo info = 2;
inline int UserCluster::info_size() const {
  return info_.size();
}
inline void UserCluster::clear_info() {
  info_.Clear();
}
inline const ::NetMsg::ClusterMemberInfo& UserCluster::info(int index) const {
  // @@protoc_insertion_point(field_get:ServerPB.UserCluster.info)
  return info_.Get(index);
}
inline ::NetMsg::ClusterMemberInfo* UserCluster::mutable_info(int index) {
  // @@protoc_insertion_point(field_mutable:ServerPB.UserCluster.info)
  return info_.Mutable(index);
}
inline ::NetMsg::ClusterMemberInfo* UserCluster::add_info() {
  // @@protoc_insertion_point(field_add:ServerPB.UserCluster.info)
  return info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::ClusterMemberInfo >*
UserCluster::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:ServerPB.UserCluster.info)
  return &info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::ClusterMemberInfo >&
UserCluster::info() const {
  // @@protoc_insertion_point(field_list:ServerPB.UserCluster.info)
  return info_;
}

// repeated .NetMsg.ClusterMemberDetail detail = 3;
inline int UserCluster::detail_size() const {
  return detail_.size();
}
inline void UserCluster::clear_detail() {
  detail_.Clear();
}
inline const ::NetMsg::ClusterMemberDetail& UserCluster::detail(int index) const {
  // @@protoc_insertion_point(field_get:ServerPB.UserCluster.detail)
  return detail_.Get(index);
}
inline ::NetMsg::ClusterMemberDetail* UserCluster::mutable_detail(int index) {
  // @@protoc_insertion_point(field_mutable:ServerPB.UserCluster.detail)
  return detail_.Mutable(index);
}
inline ::NetMsg::ClusterMemberDetail* UserCluster::add_detail() {
  // @@protoc_insertion_point(field_add:ServerPB.UserCluster.detail)
  return detail_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::ClusterMemberDetail >*
UserCluster::mutable_detail() {
  // @@protoc_insertion_point(field_mutable_list:ServerPB.UserCluster.detail)
  return &detail_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::ClusterMemberDetail >&
UserCluster::detail() const {
  // @@protoc_insertion_point(field_list:ServerPB.UserCluster.detail)
  return detail_;
}

// optional bool pub = 4;
inline void UserCluster::clear_pub() {
  pub_ = false;
}
inline bool UserCluster::pub() const {
  // @@protoc_insertion_point(field_get:ServerPB.UserCluster.pub)
  return pub_;
}
inline void UserCluster::set_pub(bool value) {
  
  pub_ = value;
  // @@protoc_insertion_point(field_set:ServerPB.UserCluster.pub)
}

inline const UserCluster* UserCluster::internal_default_instance() {
  return &UserCluster_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ServerPB

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ServerPb_2eproto__INCLUDED
