// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: error.proto

#ifndef PROTOBUF_error_2eproto__INCLUDED
#define PROTOBUF_error_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)

namespace ErrCode {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_error_2eproto();
void protobuf_InitDefaults_error_2eproto();
void protobuf_AssignDesc_error_2eproto();
void protobuf_ShutdownFile_error_2eproto();


enum ErrorCode {
  NoError = 0,
  ErrorPassword = 1,
  HaveUserName = 2,
  IllegalName = 3,
  ErrorSession = 4,
  NoUserInfo = 5,
  ToUserIsOffline = 6,
  DoTaskHeroInCD = 7,
  NoThisHero = 8,
  TargetUnfinished = 9,
  TooManyRecvQuest = 10,
  NoMoney = 11,
  NoThisItem = 12,
  ItemNotEnough = 13,
  NoMaterial = 14,
  NotEnoughContribution = 15,
  EvolveError = 16,
  NotEnoughPower = 17,
  RefresshCycError = 18,
  SelectCycDiffError = 19,
  AlreadyRecruited = 20,
  NoTimes = 21,
  AdvantureEventNotDone = 22,
  NoProvisions = 23,
  FriendShipLevelError = 24,
  MoreEmptyBook = 25,
  EmptyBookIsError = 26,
  ItemTypeError = 27,
  NoThisCity = 28,
  NoThisField = 29,
  WorldWarSceneNotStart = 30,
  CreateClusterError = 31,
  JoinClusterError = 32,
  ExitClusterError = 33,
  ErrorCode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ErrorCode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ErrorCode_IsValid(int value);
const ErrorCode ErrorCode_MIN = NoError;
const ErrorCode ErrorCode_MAX = ExitClusterError;
const int ErrorCode_ARRAYSIZE = ErrorCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* ErrorCode_descriptor();
inline const ::std::string& ErrorCode_Name(ErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    ErrorCode_descriptor(), value);
}
inline bool ErrorCode_Parse(
    const ::std::string& name, ErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ErrorCode>(
    ErrorCode_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ErrCode

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ErrCode::ErrorCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ErrCode::ErrorCode>() {
  return ::ErrCode::ErrorCode_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_error_2eproto__INCLUDED
