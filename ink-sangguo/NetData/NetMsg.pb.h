// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: NetMsg.proto

#ifndef PROTOBUF_NetMsg_2eproto__INCLUDED
#define PROTOBUF_NetMsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace NetMsg {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_NetMsg_2eproto();
void protobuf_InitDefaults_NetMsg_2eproto();
void protobuf_AssignDesc_NetMsg_2eproto();
void protobuf_ShutdownFile_NetMsg_2eproto();

class AcceptQuestAck;
class AddHeroAck;
class AddItemAck;
class AddMoneyAck;
class AdvancementRankAck;
class AdvantureAck;
class AdvantureContinuousBattle;
class AdvantureEvent;
class AdvantureEventDoneAck;
class AdvantureEventStatusChange;
class AdvantureInfoAck;
class AllClusterAck;
class ArrivedCity;
class Award;
class AwardItem;
class BanquetHeroAck;
class BanquetHeros;
class BanquetInfoAck;
class BattleAck;
class BattleEndAck;
class BattleEnemy;
class BioHeroInfoAck;
class BioHeroStepData;
class BioHeroStepDoneAck;
class BuyShopAck;
class CampState;
class CampStateAck;
class ChatAck;
class CityHeroAck;
class CityHeroInfo;
class CityInfoAck;
class CityItemAck;
class CityItemInfo;
class ClearCampCDAck;
class ClearHeroCDAck;
class ClusterArrivedTarAck;
class ClusterCreater;
class ClusterDetailInfoAck;
class ClusterInfo;
class ClusterInfoAck;
class ClusterMemberDetail;
class ClusterMemberInfo;
class ClusterRunPathAck;
class CreateClusterAck;
class CreateUserAck;
class CycleBattleAck;
class CycleBattleInfoAck;
class DeleteMailAck;
class DoQuestAck;
class DoQuestAward;
class ElectionTitleAck;
class EnterGameAck;
class EnterWorldWarAck;
class EvolveHeroAck;
class ExitClusterAck;
class Formation;
class FriendInfo;
class FriendsInfoAck;
class GeneralSoulExchangeHeroAck;
class GetCampOutAck;
class GetMailAwardAck;
class GiveAward;
class GiveHeroGiftAck;
class HeroAck;
class HeroAttr;
class HeroClassAck;
class HeroClassInfo;
class HeroClassSkill;
class HeroFormationAck;
class HeroFriendship;
class HeroFriendshipAck;
class HeroGeneralSoul;
class HeroGeneralSoulAck;
class HeroInfo;
class HeroUserItemAck;
class InviteJoinClusterAck;
class ItemAck;
class ItemInfo;
class JoinClusterAck;
class LeaveWorldWarAck;
class LevelUpCampAck;
class LoginAck;
class MailData;
class MailDetailAck;
class MailInfoAck;
class MailSender;
class MessageType;
class OrderIdAck;
class PathInfo;
class PlayerData;
class PrepareBattleAck;
class QuestBattle;
class QuestConsAgriculture;
class QuestConsBusiness;
class QuestConsMilitary;
class QuestConscription;
class QuestData;
class QuestDiscovery;
class QuestInfoAck;
class QuestListAck;
class QuestVisit;
class RaffleHeroAck;
class RaffleHeroTimesAck;
class RankTitleAck;
class RankTitlePlayer;
class RecoverBattle;
class RecruitHeroAck;
class RecruitedHeroAck;
class RefreshQuestAck;
class RefreshShopAck;
class RefresshCycleAck;
class RegInviteJoinCluster;
class RegisterAck;
class RemoveFriendAck;
class ReqAcceptQuest;
class ReqAddFriend;
class ReqAddHero;
class ReqAddItem;
class ReqAddMoney;
class ReqAdvancementRank;
class ReqAdvantureEventDone;
class ReqBanquetHero;
class ReqBattle;
class ReqBattleEnd;
class ReqBioHeroInfo;
class ReqBioHeroStepDone;
class ReqBuyShop;
class ReqCampState;
class ReqChat;
class ReqCityHero;
class ReqCityInfo;
class ReqCityItem;
class ReqClearCampCD;
class ReqClearHeroCD;
class ReqClusterArrivedTar;
class ReqClusterDetailInfo;
class ReqCreateUser;
class ReqDeleteMail;
class ReqDoQuest;
class ReqElectionTitle;
class ReqEnterGame;
class ReqEnterWorldWar;
class ReqEvolveHero;
class ReqExitCluster;
class ReqGeneralSoulExchangeHero;
class ReqGetCampOut;
class ReqGetMailAward;
class ReqGiveHeroGift;
class ReqHeroClass;
class ReqHeroUseItem;
class ReqJoinCluster;
class ReqLeaveWorldWar;
class ReqLevelUpCamp;
class ReqLogin;
class ReqMailDetail;
class ReqOrderId;
class ReqPrepareBattle;
class ReqQuestInfo;
class ReqRaffleHero;
class ReqRaffleHeroTimes;
class ReqRankTitle;
class ReqRecruitHero;
class ReqRecruitedHero;
class ReqRefreshShop;
class ReqRegister;
class ReqRemoveFriend;
class ReqResourceDetailInfo;
class ReqSelectCycleDiff;
class ReqSetClusterAttr;
class ReqSetTeam;
class ReqShopItem;
class ReqStudyProperty;
class ReqStudySkill;
class ReqSubmitQuest;
class ReqTeamArrivedTar;
class ReqTeamRunPath;
class ReqTest;
class ReqThirdPartyLogin;
class ReqTitleInfo;
class ReqTopList;
class ReqUseItem;
class ReqVSBattleBegin;
class ReqVSBattleOpt;
class ReqVSBattleReady;
class ReqWorldBattle;
class ReqWorldWarDefence;
class ReqWorldWarDefenceTarget;
class ReqWorldWarMove;
class ReqWorldWarStatus;
class ReqWorldWarTopList;
class ReqWriteSkillBook;
class ResourceDetailInfo;
class ResourceDetailInfoAck;
class ResourceInfo;
class ResourceInfoAck;
class RunPathAck;
class SelectCycleDiffAck;
class ServerInfo;
class ServerListAck;
class SetClusterAttrAck;
class SetClusterRunPath;
class SetHeroFormation;
class SetNewGuide;
class SetRunPath;
class SetTeamAck;
class SetTeamRunPath;
class ShopItem;
class ShopItemAck;
class SkillInfo;
class SortLevelData;
class SortMilitaryData;
class SortReputationData;
class StudyPropertyAck;
class StudySkillAck;
class SubmitQuestAck;
class TeamArrivedTarAck;
class TeamInfo;
class TeamInfoAck;
class TeamMemberDetail;
class TeamRunPathAck;
class TestAck;
class TitleInfoAck;
class TitleInfoPlayer;
class TopListAck;
class TopListData;
class UpdatePlayerAck;
class UpdateSkill;
class UseItemAck;
class UserInviteJoinCluster;
class UserLearnVsCDAck;
class UserLearnVsCDInfo;
class UserNamePassAck;
class UserNickAck;
class VSBattleBeginAck;
class VSBattleEnd;
class VSBattleEnemy;
class VSBattleOptAck;
class VSBattleReadyAck;
class VSBattleTurn;
class VSBattleUnitState;
class VersionInfoAck;
class WorldBattleAck;
class WorldWarAck;
class WorldWarDefenceAck;
class WorldWarDefenceTargetAck;
class WorldWarInfo;
class WorldWarMoveAck;
class WorldWarSceneAgent;
class WorldWarSceneBlockState;
class WorldWarSceneBuildingState;
class WorldWarStatusAck;
class WorldWarTopListAck;
class WorldWarUserInfo;
class WriteSkillBookAck;

enum MessageType_Type {
  MessageType_Type_ReqLogin = 0,
  MessageType_Type_LoginAck = 1,
  MessageType_Type_ReqVersionInfo = 2,
  MessageType_Type_VersionInfoAck = 3,
  MessageType_Type_ReqUserNamePass = 4,
  MessageType_Type_UserNamePassAck = 5,
  MessageType_Type_ReqRegister = 6,
  MessageType_Type_RegisterAck = 7,
  MessageType_Type_ReqEnterGame = 8,
  MessageType_Type_EnterGameAck = 9,
  MessageType_Type_ReqCreateUser = 10,
  MessageType_Type_CreateUserAck = 11,
  MessageType_Type_ReqServerList = 12,
  MessageType_Type_ServerListAck = 13,
  MessageType_Type_ReqThirdPartyLogin = 14,
  MessageType_Type_ReqOrderId = 15,
  MessageType_Type_OrderIdAck = 16,
  MessageType_Type_UpdatePlayerAck = 17,
  MessageType_Type_ReqChat = 18,
  MessageType_Type_ChatAck = 19,
  MessageType_Type_ReqUserNick = 20,
  MessageType_Type_UserNickAck = 21,
  MessageType_Type_ReqHero = 22,
  MessageType_Type_HeroAck = 23,
  MessageType_Type_ReqItem = 24,
  MessageType_Type_ItemAck = 25,
  MessageType_Type_UpdateSkill = 26,
  MessageType_Type_SetNewGuide = 27,
  MessageType_Type_ReqRunPath = 28,
  MessageType_Type_RunPathAck = 29,
  MessageType_Type_SetRunPath = 30,
  MessageType_Type_ArrivedCity = 31,
  MessageType_Type_ReqHeroFormation = 32,
  MessageType_Type_HeroFormationAck = 33,
  MessageType_Type_SetHeroFormation = 34,
  MessageType_Type_ReqCityInfo = 35,
  MessageType_Type_CityInfoAck = 36,
  MessageType_Type_ReqQuestList = 37,
  MessageType_Type_QuestListAck = 38,
  MessageType_Type_ReqQuestInfo = 39,
  MessageType_Type_QuestInfoAck = 40,
  MessageType_Type_GiveAward = 41,
  MessageType_Type_ReqDoQuest = 42,
  MessageType_Type_DoQuestAck = 43,
  MessageType_Type_ReqSubmitQuest = 44,
  MessageType_Type_SubmitQuestAck = 45,
  MessageType_Type_ReqAcceptQuest = 46,
  MessageType_Type_AcceptQuestAck = 47,
  MessageType_Type_ReqClearHeroCD = 48,
  MessageType_Type_ClearHeroCDAck = 49,
  MessageType_Type_ReqRefreshQuest = 50,
  MessageType_Type_RefreshQuestAck = 51,
  MessageType_Type_ReqBattle = 52,
  MessageType_Type_BattleAck = 53,
  MessageType_Type_ReqBattleEnd = 54,
  MessageType_Type_BattleEndAck = 55,
  MessageType_Type_ReqHeroUseItem = 56,
  MessageType_Type_HeroUserItemAck = 57,
  MessageType_Type_ReqUseItem = 58,
  MessageType_Type_UseItemAck = 59,
  MessageType_Type_ReqAdvantureInfo = 60,
  MessageType_Type_AdvantureInfoAck = 61,
  MessageType_Type_ReqAdvanture = 62,
  MessageType_Type_AdvantureAck = 63,
  MessageType_Type_ReqAdvantureEventDone = 64,
  MessageType_Type_AdvantureEventDoneAck = 65,
  MessageType_Type_ReqHeroFriendship = 66,
  MessageType_Type_HeroFriendshipAck = 67,
  MessageType_Type_ReqGiveHeroGift = 68,
  MessageType_Type_GiveHeroGiftAck = 69,
  MessageType_Type_ReqShopItem = 70,
  MessageType_Type_ShopItemAck = 71,
  MessageType_Type_ReqBuyShop = 72,
  MessageType_Type_BuyShopAck = 73,
  MessageType_Type_ReqRefreshShop = 74,
  MessageType_Type_RefreshShopAck = 75,
  MessageType_Type_ReqEvolveHero = 76,
  MessageType_Type_EvolveHeroAck = 77,
  MessageType_Type_ReqAdvancementRank = 78,
  MessageType_Type_AdvancementRankAck = 79,
  MessageType_Type_ReqHeroClass = 80,
  MessageType_Type_HeroClassAck = 81,
  MessageType_Type_ReqStudySkill = 82,
  MessageType_Type_StudySkillAck = 83,
  MessageType_Type_ReqStudyProperty = 84,
  MessageType_Type_StudyPropertyAck = 85,
  MessageType_Type_ReqRaffleHero = 86,
  MessageType_Type_RaffleHeroAck = 87,
  MessageType_Type_ReqRankTitle = 88,
  MessageType_Type_RankTitleAck = 89,
  MessageType_Type_ReqTitleInfo = 90,
  MessageType_Type_TitleInfoAck = 91,
  MessageType_Type_ReqElectionTitle = 92,
  MessageType_Type_ElectionTitleAck = 93,
  MessageType_Type_ReqLevelUpCamp = 94,
  MessageType_Type_LevelUpCampAck = 95,
  MessageType_Type_ReqCampState = 96,
  MessageType_Type_CampStateAck = 97,
  MessageType_Type_ReqGetCampOut = 98,
  MessageType_Type_GetCampOutAck = 99,
  MessageType_Type_ReqClearCampCD = 100,
  MessageType_Type_ClearCampCDAck = 101,
  MessageType_Type_ReqCycleBattle = 102,
  MessageType_Type_CycleBattleAck = 103,
  MessageType_Type_ReqRefresshCycle = 104,
  MessageType_Type_RefresshCycleAck = 105,
  MessageType_Type_ReqSelectCycleDiff = 106,
  MessageType_Type_SelectCycleDiffAck = 107,
  MessageType_Type_ReqCycleBattleInfo = 108,
  MessageType_Type_CycleBattleInfoAck = 109,
  MessageType_Type_AdvantureEventStatusChange = 110,
  MessageType_Type_ReqRecruitHero = 111,
  MessageType_Type_RecruitHeroAck = 112,
  MessageType_Type_ReqRecruitedHero = 113,
  MessageType_Type_RecruitedHeroAck = 114,
  MessageType_Type_ReqVSBattleBegin = 115,
  MessageType_Type_VSBattleBeginAck = 116,
  MessageType_Type_ReqVSBattleReady = 117,
  MessageType_Type_VSBattleReadyAck = 118,
  MessageType_Type_ReqVSBattleOpt = 119,
  MessageType_Type_VSBattleOptAck = 120,
  MessageType_Type_VSBattleTurn = 121,
  MessageType_Type_VSBattleEnd = 122,
  MessageType_Type_ReqBioHeroInfo = 123,
  MessageType_Type_BioHeroInfoAck = 124,
  MessageType_Type_ReqBioHeroStepDone = 125,
  MessageType_Type_BioHeroStepDoneAck = 126,
  MessageType_Type_ReqAddFriend = 127,
  MessageType_Type_ReqRemoveFriend = 128,
  MessageType_Type_ReqFriendsInfo = 129,
  MessageType_Type_FriendsInfoAck = 130,
  MessageType_Type_ReqMailInfo = 131,
  MessageType_Type_MailInfoAck = 132,
  MessageType_Type_ReqMailDetail = 133,
  MessageType_Type_MailDetailAck = 134,
  MessageType_Type_ReqDeleteMail = 135,
  MessageType_Type_DeleteMailAck = 136,
  MessageType_Type_ReqGetMailAward = 137,
  MessageType_Type_GetMailAwardAck = 138,
  MessageType_Type_ReqRaffleHeroTimes = 139,
  MessageType_Type_RaffleHeroTimesAck = 140,
  MessageType_Type_ReqBanquetInfo = 141,
  MessageType_Type_BanquetInfoAck = 142,
  MessageType_Type_ReqBanquetHero = 143,
  MessageType_Type_BanquetHeroAck = 144,
  MessageType_Type_ReqPrepareBattle = 150,
  MessageType_Type_PrepareBattleAck = 151,
  MessageType_Type_RemoveFriendAck = 152,
  MessageType_Type_ReqTopList = 153,
  MessageType_Type_TopListAck = 154,
  MessageType_Type_ReqWorldWar = 155,
  MessageType_Type_WorldWarAck = 156,
  MessageType_Type_ReqWorldBattle = 157,
  MessageType_Type_WorldBattleAck = 158,
  MessageType_Type_ReqWorldWarTopList = 159,
  MessageType_Type_WorldWarTopListAck = 160,
  MessageType_Type_ReqHeroGeneralSoul = 161,
  MessageType_Type_HeroGeneralSoulAck = 162,
  MessageType_Type_ReqGeneralSoulExchangeHero = 163,
  MessageType_Type_GeneralSoulExchangeHeroAck = 164,
  MessageType_Type_ReqUserLearnVsCD = 165,
  MessageType_Type_UserLearnVsCDAck = 166,
  MessageType_Type_ReqTeamInfo = 167,
  MessageType_Type_TeamInfoAck = 168,
  MessageType_Type_ReqSetTeam = 169,
  MessageType_Type_SetTeamAck = 170,
  MessageType_Type_ReqClusterInfo = 171,
  MessageType_Type_ClusterInfoAck = 172,
  MessageType_Type_ReqAllCluster = 173,
  MessageType_Type_AllClusterAck = 174,
  MessageType_Type_ReqCreateCluster = 175,
  MessageType_Type_CreateClusterAck = 176,
  MessageType_Type_ReqJoinCluster = 177,
  MessageType_Type_JoinClusterAck = 178,
  MessageType_Type_ReqSetClusterAttr = 179,
  MessageType_Type_SetClusterAttrAck = 180,
  MessageType_Type_ReqExitCluster = 181,
  MessageType_Type_ExitClusterAck = 182,
  MessageType_Type_ReqWriteSkillBook = 183,
  MessageType_Type_WriteSkillBookAck = 184,
  MessageType_Type_ReqTeamRunPath = 185,
  MessageType_Type_TeamRunPathAck = 186,
  MessageType_Type_SetTeamRunPath = 187,
  MessageType_Type_ReqTeamArrivedTar = 188,
  MessageType_Type_TeamArrivedTarAck = 189,
  MessageType_Type_ReqClusterDetailInfo = 190,
  MessageType_Type_ClusterDetailInfoAck = 191,
  MessageType_Type_ReqCityItem = 192,
  MessageType_Type_CityItemAck = 193,
  MessageType_Type_ReqCityHero = 194,
  MessageType_Type_CityHeroAck = 195,
  MessageType_Type_ReqResourceInfo = 196,
  MessageType_Type_ResourceInfoAck = 197,
  MessageType_Type_ReqResourceDetailInfo = 198,
  MessageType_Type_ResourceDetailInfoAck = 199,
  MessageType_Type_RegInviteJoinCluster = 200,
  MessageType_Type_InviteJoinClusterAck = 201,
  MessageType_Type_UserInviteJoinCluster = 202,
  MessageType_Type_ReqClusterRunPath = 203,
  MessageType_Type_ClusterRunPathAck = 204,
  MessageType_Type_SetClusterRunPath = 205,
  MessageType_Type_ReqClusterArrivedTar = 206,
  MessageType_Type_ClusterArrivedTarAck = 207,
  MessageType_Type_ReqEnterWorldWar = 208,
  MessageType_Type_EnterWorldWarAck = 209,
  MessageType_Type_ReqWorldWarStatus = 210,
  MessageType_Type_WorldWarStatusAck = 211,
  MessageType_Type_ReqWorldWarMove = 212,
  MessageType_Type_WorldWarMoveAck = 213,
  MessageType_Type_ReqWorldWarDefence = 214,
  MessageType_Type_WorldWarDefenceAck = 215,
  MessageType_Type_ReqWorldWarDefenceTarget = 216,
  MessageType_Type_WorldWarDefenceTargetAck = 217,
  MessageType_Type_ReqLeaveWorldWar = 218,
  MessageType_Type_LeaveWorldWarAck = 219,
  MessageType_Type_ReqAddHero = 100001,
  MessageType_Type_AddHeroAck = 100002,
  MessageType_Type_ReqAddItem = 100003,
  MessageType_Type_AddItemAck = 100004,
  MessageType_Type_ReqAddMoney = 100005,
  MessageType_Type_AddMoneyAck = 100006,
  MessageType_Type_ReqTest = 16777200,
  MessageType_Type_TestAck = 16777201,
  MessageType_Type_MessageType_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MessageType_Type_MessageType_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MessageType_Type_IsValid(int value);
const MessageType_Type MessageType_Type_Type_MIN = MessageType_Type_ReqLogin;
const MessageType_Type MessageType_Type_Type_MAX = MessageType_Type_TestAck;
const int MessageType_Type_Type_ARRAYSIZE = MessageType_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageType_Type_descriptor();
inline const ::std::string& MessageType_Type_Name(MessageType_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageType_Type_descriptor(), value);
}
inline bool MessageType_Type_Parse(
    const ::std::string& name, MessageType_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageType_Type>(
    MessageType_Type_descriptor(), name, value);
}
enum UpdatePlayerAck_UpdateType {
  UpdatePlayerAck_UpdateType_UpdateNick = 0,
  UpdatePlayerAck_UpdateType_UpdateLevel = 1,
  UpdatePlayerAck_UpdateType_UpdateExp = 2,
  UpdatePlayerAck_UpdateType_UpdateStamina = 3,
  UpdatePlayerAck_UpdateType_UpdateCoin = 4,
  UpdatePlayerAck_UpdateType_UpdateGold = 5,
  UpdatePlayerAck_UpdateType_UpdateVipLevel = 6,
  UpdatePlayerAck_UpdateType_UpdateCityId = 7,
  UpdatePlayerAck_UpdateType_UpdateCampCityId = 8,
  UpdatePlayerAck_UpdateType_UpdateForce = 9,
  UpdatePlayerAck_UpdateType_UpdateNewGuide = 10,
  UpdatePlayerAck_UpdateType_UpdateTitle = 11,
  UpdatePlayerAck_UpdateType_UpdateContribution = 12,
  UpdatePlayerAck_UpdateType_UpdateReputation = 13,
  UpdatePlayerAck_UpdateType_UpdateRank = 14,
  UpdatePlayerAck_UpdateType_UpdateExploit = 15,
  UpdatePlayerAck_UpdateType_UpdateWood = 16,
  UpdatePlayerAck_UpdateType_UpdateStone = 17,
  UpdatePlayerAck_UpdateType_UpdateIron = 18,
  UpdatePlayerAck_UpdateType_UpdatePlayerAck_UpdateType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  UpdatePlayerAck_UpdateType_UpdatePlayerAck_UpdateType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool UpdatePlayerAck_UpdateType_IsValid(int value);
const UpdatePlayerAck_UpdateType UpdatePlayerAck_UpdateType_UpdateType_MIN = UpdatePlayerAck_UpdateType_UpdateNick;
const UpdatePlayerAck_UpdateType UpdatePlayerAck_UpdateType_UpdateType_MAX = UpdatePlayerAck_UpdateType_UpdateIron;
const int UpdatePlayerAck_UpdateType_UpdateType_ARRAYSIZE = UpdatePlayerAck_UpdateType_UpdateType_MAX + 1;

const ::google::protobuf::EnumDescriptor* UpdatePlayerAck_UpdateType_descriptor();
inline const ::std::string& UpdatePlayerAck_UpdateType_Name(UpdatePlayerAck_UpdateType value) {
  return ::google::protobuf::internal::NameOfEnum(
    UpdatePlayerAck_UpdateType_descriptor(), value);
}
inline bool UpdatePlayerAck_UpdateType_Parse(
    const ::std::string& name, UpdatePlayerAck_UpdateType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UpdatePlayerAck_UpdateType>(
    UpdatePlayerAck_UpdateType_descriptor(), name, value);
}
enum ServerStatus {
  New = 0,
  Busy = 1,
  Maintenance = 2,
  Normal = 3,
  ServerStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ServerStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ServerStatus_IsValid(int value);
const ServerStatus ServerStatus_MIN = New;
const ServerStatus ServerStatus_MAX = Normal;
const int ServerStatus_ARRAYSIZE = ServerStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* ServerStatus_descriptor();
inline const ::std::string& ServerStatus_Name(ServerStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    ServerStatus_descriptor(), value);
}
inline bool ServerStatus_Parse(
    const ::std::string& name, ServerStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ServerStatus>(
    ServerStatus_descriptor(), name, value);
}
enum ChatType {
  PToPChat = 0,
  WorldChat = 1,
  ForceChat = 2,
  FriendChat = 3,
  ChatType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ChatType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ChatType_IsValid(int value);
const ChatType ChatType_MIN = PToPChat;
const ChatType ChatType_MAX = FriendChat;
const int ChatType_ARRAYSIZE = ChatType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChatType_descriptor();
inline const ::std::string& ChatType_Name(ChatType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChatType_descriptor(), value);
}
inline bool ChatType_Parse(
    const ::std::string& name, ChatType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChatType>(
    ChatType_descriptor(), name, value);
}
enum RunState {
  NonRunState = 0,
  ArrivedTarget = 1,
  PauseRun = 2,
  Runing = 3,
  RunState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RunState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RunState_IsValid(int value);
const RunState RunState_MIN = NonRunState;
const RunState RunState_MAX = Runing;
const int RunState_ARRAYSIZE = RunState_MAX + 1;

const ::google::protobuf::EnumDescriptor* RunState_descriptor();
inline const ::std::string& RunState_Name(RunState value) {
  return ::google::protobuf::internal::NameOfEnum(
    RunState_descriptor(), value);
}
inline bool RunState_Parse(
    const ::std::string& name, RunState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RunState>(
    RunState_descriptor(), name, value);
}
enum RunTargetType {
  RunToCity = 0,
  RunToQuest = 1,
  RunToWorldWar = 2,
  RunToResource = 3,
  RunTargetType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RunTargetType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RunTargetType_IsValid(int value);
const RunTargetType RunTargetType_MIN = RunToCity;
const RunTargetType RunTargetType_MAX = RunToResource;
const int RunTargetType_ARRAYSIZE = RunTargetType_MAX + 1;

const ::google::protobuf::EnumDescriptor* RunTargetType_descriptor();
inline const ::std::string& RunTargetType_Name(RunTargetType value) {
  return ::google::protobuf::internal::NameOfEnum(
    RunTargetType_descriptor(), value);
}
inline bool RunTargetType_Parse(
    const ::std::string& name, RunTargetType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RunTargetType>(
    RunTargetType_descriptor(), name, value);
}
enum QuestDiscoveryFinishedType {
  NoFinishedType = 0,
  FindItemError = 1,
  FindHeroError = 2,
  NotFindItem = 3,
  FindItem = 4,
  NotFindHero = 5,
  FindHero = 6,
  QuestDiscoveryFinishedType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  QuestDiscoveryFinishedType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool QuestDiscoveryFinishedType_IsValid(int value);
const QuestDiscoveryFinishedType QuestDiscoveryFinishedType_MIN = NoFinishedType;
const QuestDiscoveryFinishedType QuestDiscoveryFinishedType_MAX = FindHero;
const int QuestDiscoveryFinishedType_ARRAYSIZE = QuestDiscoveryFinishedType_MAX + 1;

const ::google::protobuf::EnumDescriptor* QuestDiscoveryFinishedType_descriptor();
inline const ::std::string& QuestDiscoveryFinishedType_Name(QuestDiscoveryFinishedType value) {
  return ::google::protobuf::internal::NameOfEnum(
    QuestDiscoveryFinishedType_descriptor(), value);
}
inline bool QuestDiscoveryFinishedType_Parse(
    const ::std::string& name, QuestDiscoveryFinishedType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<QuestDiscoveryFinishedType>(
    QuestDiscoveryFinishedType_descriptor(), name, value);
}
enum QuestState {
  NoQuestState = 0,
  NotAcceptQuest = 1,
  AcceptQuest = 2,
  FinishQuest = 3,
  SubmitQuest = 4,
  QuestState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  QuestState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool QuestState_IsValid(int value);
const QuestState QuestState_MIN = NoQuestState;
const QuestState QuestState_MAX = SubmitQuest;
const int QuestState_ARRAYSIZE = QuestState_MAX + 1;

const ::google::protobuf::EnumDescriptor* QuestState_descriptor();
inline const ::std::string& QuestState_Name(QuestState value) {
  return ::google::protobuf::internal::NameOfEnum(
    QuestState_descriptor(), value);
}
inline bool QuestState_Parse(
    const ::std::string& name, QuestState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<QuestState>(
    QuestState_descriptor(), name, value);
}
enum QuestType {
  NoQuestType = 0,
  ConstructAgriculture = 1,
  ConstructBusiness = 2,
  ConstructMilitary = 3,
  BattleCateran = 4,
  VisitQuest = 5,
  ConscriptionQuest = 6,
  Discovery = 7,
  QuestType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  QuestType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool QuestType_IsValid(int value);
const QuestType QuestType_MIN = NoQuestType;
const QuestType QuestType_MAX = Discovery;
const int QuestType_ARRAYSIZE = QuestType_MAX + 1;

const ::google::protobuf::EnumDescriptor* QuestType_descriptor();
inline const ::std::string& QuestType_Name(QuestType value) {
  return ::google::protobuf::internal::NameOfEnum(
    QuestType_descriptor(), value);
}
inline bool QuestType_Parse(
    const ::std::string& name, QuestType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<QuestType>(
    QuestType_descriptor(), name, value);
}
enum AdvantureEventStatus {
  InProgress = 0,
  Done = 1,
  Invalid = 2,
  AdvantureEventStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AdvantureEventStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AdvantureEventStatus_IsValid(int value);
const AdvantureEventStatus AdvantureEventStatus_MIN = InProgress;
const AdvantureEventStatus AdvantureEventStatus_MAX = Invalid;
const int AdvantureEventStatus_ARRAYSIZE = AdvantureEventStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* AdvantureEventStatus_descriptor();
inline const ::std::string& AdvantureEventStatus_Name(AdvantureEventStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    AdvantureEventStatus_descriptor(), value);
}
inline bool AdvantureEventStatus_Parse(
    const ::std::string& name, AdvantureEventStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AdvantureEventStatus>(
    AdvantureEventStatus_descriptor(), name, value);
}
enum HeroPropertyType {
  NonHeroType = 0,
  HeroStrength = 1,
  HeroLeadership = 2,
  HeroWisdom = 3,
  HeroCharm = 4,
  HeroLuck = 5,
  HeroPropertyType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  HeroPropertyType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool HeroPropertyType_IsValid(int value);
const HeroPropertyType HeroPropertyType_MIN = NonHeroType;
const HeroPropertyType HeroPropertyType_MAX = HeroLuck;
const int HeroPropertyType_ARRAYSIZE = HeroPropertyType_MAX + 1;

const ::google::protobuf::EnumDescriptor* HeroPropertyType_descriptor();
inline const ::std::string& HeroPropertyType_Name(HeroPropertyType value) {
  return ::google::protobuf::internal::NameOfEnum(
    HeroPropertyType_descriptor(), value);
}
inline bool HeroPropertyType_Parse(
    const ::std::string& name, HeroPropertyType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HeroPropertyType>(
    HeroPropertyType_descriptor(), name, value);
}
enum CampType {
  NonCampType = 0,
  BaseCamp = 1,
  MarketCamp = 2,
  FarmlandCamp = 3,
  BarrackCamp = 4,
  ArmoryCamp = 5,
  CampType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CampType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CampType_IsValid(int value);
const CampType CampType_MIN = NonCampType;
const CampType CampType_MAX = ArmoryCamp;
const int CampType_ARRAYSIZE = CampType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CampType_descriptor();
inline const ::std::string& CampType_Name(CampType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CampType_descriptor(), value);
}
inline bool CampType_Parse(
    const ::std::string& name, CampType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CampType>(
    CampType_descriptor(), name, value);
}
enum TopListType {
  NonType = 0,
  Reputation = 1,
  Level = 2,
  TopListType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TopListType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TopListType_IsValid(int value);
const TopListType TopListType_MIN = NonType;
const TopListType TopListType_MAX = Level;
const int TopListType_ARRAYSIZE = TopListType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TopListType_descriptor();
inline const ::std::string& TopListType_Name(TopListType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TopListType_descriptor(), value);
}
inline bool TopListType_Parse(
    const ::std::string& name, TopListType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TopListType>(
    TopListType_descriptor(), name, value);
}
enum MailType {
  NonMailTyep = 0,
  SystemMail = 1,
  PlayerMail = 2,
  TitleMail = 3,
  MailType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MailType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MailType_IsValid(int value);
const MailType MailType_MIN = NonMailTyep;
const MailType MailType_MAX = TitleMail;
const int MailType_ARRAYSIZE = MailType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MailType_descriptor();
inline const ::std::string& MailType_Name(MailType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MailType_descriptor(), value);
}
inline bool MailType_Parse(
    const ::std::string& name, MailType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MailType>(
    MailType_descriptor(), name, value);
}
enum ResourceType {
  ResourceNone = 0,
  ResourceProvisions = 1,
  ResourceWood = 2,
  ResourceStone = 3,
  ResourceIron = 4,
  ResourceType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ResourceType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ResourceType_IsValid(int value);
const ResourceType ResourceType_MIN = ResourceNone;
const ResourceType ResourceType_MAX = ResourceIron;
const int ResourceType_ARRAYSIZE = ResourceType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ResourceType_descriptor();
inline const ::std::string& ResourceType_Name(ResourceType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ResourceType_descriptor(), value);
}
inline bool ResourceType_Parse(
    const ::std::string& name, ResourceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ResourceType>(
    ResourceType_descriptor(), name, value);
}
enum WorldWarSceneForceType {
  ForceNone = 0,
  Force1 = 1,
  Force2 = 2,
  WorldWarSceneForceType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  WorldWarSceneForceType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool WorldWarSceneForceType_IsValid(int value);
const WorldWarSceneForceType WorldWarSceneForceType_MIN = ForceNone;
const WorldWarSceneForceType WorldWarSceneForceType_MAX = Force2;
const int WorldWarSceneForceType_ARRAYSIZE = WorldWarSceneForceType_MAX + 1;

const ::google::protobuf::EnumDescriptor* WorldWarSceneForceType_descriptor();
inline const ::std::string& WorldWarSceneForceType_Name(WorldWarSceneForceType value) {
  return ::google::protobuf::internal::NameOfEnum(
    WorldWarSceneForceType_descriptor(), value);
}
inline bool WorldWarSceneForceType_Parse(
    const ::std::string& name, WorldWarSceneForceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WorldWarSceneForceType>(
    WorldWarSceneForceType_descriptor(), name, value);
}
enum WorldWarSceneForceState {
  StateMove = 0,
  StateDefence = 1,
  WorldWarSceneForceState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  WorldWarSceneForceState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool WorldWarSceneForceState_IsValid(int value);
const WorldWarSceneForceState WorldWarSceneForceState_MIN = StateMove;
const WorldWarSceneForceState WorldWarSceneForceState_MAX = StateDefence;
const int WorldWarSceneForceState_ARRAYSIZE = WorldWarSceneForceState_MAX + 1;

const ::google::protobuf::EnumDescriptor* WorldWarSceneForceState_descriptor();
inline const ::std::string& WorldWarSceneForceState_Name(WorldWarSceneForceState value) {
  return ::google::protobuf::internal::NameOfEnum(
    WorldWarSceneForceState_descriptor(), value);
}
inline bool WorldWarSceneForceState_Parse(
    const ::std::string& name, WorldWarSceneForceState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WorldWarSceneForceState>(
    WorldWarSceneForceState_descriptor(), name, value);
}
enum WorldWarSceneBuildingType {
  None = 0,
  Base = 1,
  Stronghold = 2,
  Barn = 3,
  Barrack = 4,
  Tower = 5,
  SpawnPoint = 6,
  Catapult = 7,
  WorldWarSceneBuildingType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  WorldWarSceneBuildingType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool WorldWarSceneBuildingType_IsValid(int value);
const WorldWarSceneBuildingType WorldWarSceneBuildingType_MIN = None;
const WorldWarSceneBuildingType WorldWarSceneBuildingType_MAX = Catapult;
const int WorldWarSceneBuildingType_ARRAYSIZE = WorldWarSceneBuildingType_MAX + 1;

const ::google::protobuf::EnumDescriptor* WorldWarSceneBuildingType_descriptor();
inline const ::std::string& WorldWarSceneBuildingType_Name(WorldWarSceneBuildingType value) {
  return ::google::protobuf::internal::NameOfEnum(
    WorldWarSceneBuildingType_descriptor(), value);
}
inline bool WorldWarSceneBuildingType_Parse(
    const ::std::string& name, WorldWarSceneBuildingType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WorldWarSceneBuildingType>(
    WorldWarSceneBuildingType_descriptor(), name, value);
}
// ===================================================================

class MessageType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.MessageType) */ {
 public:
  MessageType();
  virtual ~MessageType();

  MessageType(const MessageType& from);

  inline MessageType& operator=(const MessageType& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageType& default_instance();

  static const MessageType* internal_default_instance();

  void Swap(MessageType* other);

  // implements Message ----------------------------------------------

  inline MessageType* New() const { return New(NULL); }

  MessageType* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageType& from);
  void MergeFrom(const MessageType& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessageType* other);
  void UnsafeMergeFrom(const MessageType& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MessageType_Type Type;
  static const Type ReqLogin =
    MessageType_Type_ReqLogin;
  static const Type LoginAck =
    MessageType_Type_LoginAck;
  static const Type ReqVersionInfo =
    MessageType_Type_ReqVersionInfo;
  static const Type VersionInfoAck =
    MessageType_Type_VersionInfoAck;
  static const Type ReqUserNamePass =
    MessageType_Type_ReqUserNamePass;
  static const Type UserNamePassAck =
    MessageType_Type_UserNamePassAck;
  static const Type ReqRegister =
    MessageType_Type_ReqRegister;
  static const Type RegisterAck =
    MessageType_Type_RegisterAck;
  static const Type ReqEnterGame =
    MessageType_Type_ReqEnterGame;
  static const Type EnterGameAck =
    MessageType_Type_EnterGameAck;
  static const Type ReqCreateUser =
    MessageType_Type_ReqCreateUser;
  static const Type CreateUserAck =
    MessageType_Type_CreateUserAck;
  static const Type ReqServerList =
    MessageType_Type_ReqServerList;
  static const Type ServerListAck =
    MessageType_Type_ServerListAck;
  static const Type ReqThirdPartyLogin =
    MessageType_Type_ReqThirdPartyLogin;
  static const Type ReqOrderId =
    MessageType_Type_ReqOrderId;
  static const Type OrderIdAck =
    MessageType_Type_OrderIdAck;
  static const Type UpdatePlayerAck =
    MessageType_Type_UpdatePlayerAck;
  static const Type ReqChat =
    MessageType_Type_ReqChat;
  static const Type ChatAck =
    MessageType_Type_ChatAck;
  static const Type ReqUserNick =
    MessageType_Type_ReqUserNick;
  static const Type UserNickAck =
    MessageType_Type_UserNickAck;
  static const Type ReqHero =
    MessageType_Type_ReqHero;
  static const Type HeroAck =
    MessageType_Type_HeroAck;
  static const Type ReqItem =
    MessageType_Type_ReqItem;
  static const Type ItemAck =
    MessageType_Type_ItemAck;
  static const Type UpdateSkill =
    MessageType_Type_UpdateSkill;
  static const Type SetNewGuide =
    MessageType_Type_SetNewGuide;
  static const Type ReqRunPath =
    MessageType_Type_ReqRunPath;
  static const Type RunPathAck =
    MessageType_Type_RunPathAck;
  static const Type SetRunPath =
    MessageType_Type_SetRunPath;
  static const Type ArrivedCity =
    MessageType_Type_ArrivedCity;
  static const Type ReqHeroFormation =
    MessageType_Type_ReqHeroFormation;
  static const Type HeroFormationAck =
    MessageType_Type_HeroFormationAck;
  static const Type SetHeroFormation =
    MessageType_Type_SetHeroFormation;
  static const Type ReqCityInfo =
    MessageType_Type_ReqCityInfo;
  static const Type CityInfoAck =
    MessageType_Type_CityInfoAck;
  static const Type ReqQuestList =
    MessageType_Type_ReqQuestList;
  static const Type QuestListAck =
    MessageType_Type_QuestListAck;
  static const Type ReqQuestInfo =
    MessageType_Type_ReqQuestInfo;
  static const Type QuestInfoAck =
    MessageType_Type_QuestInfoAck;
  static const Type GiveAward =
    MessageType_Type_GiveAward;
  static const Type ReqDoQuest =
    MessageType_Type_ReqDoQuest;
  static const Type DoQuestAck =
    MessageType_Type_DoQuestAck;
  static const Type ReqSubmitQuest =
    MessageType_Type_ReqSubmitQuest;
  static const Type SubmitQuestAck =
    MessageType_Type_SubmitQuestAck;
  static const Type ReqAcceptQuest =
    MessageType_Type_ReqAcceptQuest;
  static const Type AcceptQuestAck =
    MessageType_Type_AcceptQuestAck;
  static const Type ReqClearHeroCD =
    MessageType_Type_ReqClearHeroCD;
  static const Type ClearHeroCDAck =
    MessageType_Type_ClearHeroCDAck;
  static const Type ReqRefreshQuest =
    MessageType_Type_ReqRefreshQuest;
  static const Type RefreshQuestAck =
    MessageType_Type_RefreshQuestAck;
  static const Type ReqBattle =
    MessageType_Type_ReqBattle;
  static const Type BattleAck =
    MessageType_Type_BattleAck;
  static const Type ReqBattleEnd =
    MessageType_Type_ReqBattleEnd;
  static const Type BattleEndAck =
    MessageType_Type_BattleEndAck;
  static const Type ReqHeroUseItem =
    MessageType_Type_ReqHeroUseItem;
  static const Type HeroUserItemAck =
    MessageType_Type_HeroUserItemAck;
  static const Type ReqUseItem =
    MessageType_Type_ReqUseItem;
  static const Type UseItemAck =
    MessageType_Type_UseItemAck;
  static const Type ReqAdvantureInfo =
    MessageType_Type_ReqAdvantureInfo;
  static const Type AdvantureInfoAck =
    MessageType_Type_AdvantureInfoAck;
  static const Type ReqAdvanture =
    MessageType_Type_ReqAdvanture;
  static const Type AdvantureAck =
    MessageType_Type_AdvantureAck;
  static const Type ReqAdvantureEventDone =
    MessageType_Type_ReqAdvantureEventDone;
  static const Type AdvantureEventDoneAck =
    MessageType_Type_AdvantureEventDoneAck;
  static const Type ReqHeroFriendship =
    MessageType_Type_ReqHeroFriendship;
  static const Type HeroFriendshipAck =
    MessageType_Type_HeroFriendshipAck;
  static const Type ReqGiveHeroGift =
    MessageType_Type_ReqGiveHeroGift;
  static const Type GiveHeroGiftAck =
    MessageType_Type_GiveHeroGiftAck;
  static const Type ReqShopItem =
    MessageType_Type_ReqShopItem;
  static const Type ShopItemAck =
    MessageType_Type_ShopItemAck;
  static const Type ReqBuyShop =
    MessageType_Type_ReqBuyShop;
  static const Type BuyShopAck =
    MessageType_Type_BuyShopAck;
  static const Type ReqRefreshShop =
    MessageType_Type_ReqRefreshShop;
  static const Type RefreshShopAck =
    MessageType_Type_RefreshShopAck;
  static const Type ReqEvolveHero =
    MessageType_Type_ReqEvolveHero;
  static const Type EvolveHeroAck =
    MessageType_Type_EvolveHeroAck;
  static const Type ReqAdvancementRank =
    MessageType_Type_ReqAdvancementRank;
  static const Type AdvancementRankAck =
    MessageType_Type_AdvancementRankAck;
  static const Type ReqHeroClass =
    MessageType_Type_ReqHeroClass;
  static const Type HeroClassAck =
    MessageType_Type_HeroClassAck;
  static const Type ReqStudySkill =
    MessageType_Type_ReqStudySkill;
  static const Type StudySkillAck =
    MessageType_Type_StudySkillAck;
  static const Type ReqStudyProperty =
    MessageType_Type_ReqStudyProperty;
  static const Type StudyPropertyAck =
    MessageType_Type_StudyPropertyAck;
  static const Type ReqRaffleHero =
    MessageType_Type_ReqRaffleHero;
  static const Type RaffleHeroAck =
    MessageType_Type_RaffleHeroAck;
  static const Type ReqRankTitle =
    MessageType_Type_ReqRankTitle;
  static const Type RankTitleAck =
    MessageType_Type_RankTitleAck;
  static const Type ReqTitleInfo =
    MessageType_Type_ReqTitleInfo;
  static const Type TitleInfoAck =
    MessageType_Type_TitleInfoAck;
  static const Type ReqElectionTitle =
    MessageType_Type_ReqElectionTitle;
  static const Type ElectionTitleAck =
    MessageType_Type_ElectionTitleAck;
  static const Type ReqLevelUpCamp =
    MessageType_Type_ReqLevelUpCamp;
  static const Type LevelUpCampAck =
    MessageType_Type_LevelUpCampAck;
  static const Type ReqCampState =
    MessageType_Type_ReqCampState;
  static const Type CampStateAck =
    MessageType_Type_CampStateAck;
  static const Type ReqGetCampOut =
    MessageType_Type_ReqGetCampOut;
  static const Type GetCampOutAck =
    MessageType_Type_GetCampOutAck;
  static const Type ReqClearCampCD =
    MessageType_Type_ReqClearCampCD;
  static const Type ClearCampCDAck =
    MessageType_Type_ClearCampCDAck;
  static const Type ReqCycleBattle =
    MessageType_Type_ReqCycleBattle;
  static const Type CycleBattleAck =
    MessageType_Type_CycleBattleAck;
  static const Type ReqRefresshCycle =
    MessageType_Type_ReqRefresshCycle;
  static const Type RefresshCycleAck =
    MessageType_Type_RefresshCycleAck;
  static const Type ReqSelectCycleDiff =
    MessageType_Type_ReqSelectCycleDiff;
  static const Type SelectCycleDiffAck =
    MessageType_Type_SelectCycleDiffAck;
  static const Type ReqCycleBattleInfo =
    MessageType_Type_ReqCycleBattleInfo;
  static const Type CycleBattleInfoAck =
    MessageType_Type_CycleBattleInfoAck;
  static const Type AdvantureEventStatusChange =
    MessageType_Type_AdvantureEventStatusChange;
  static const Type ReqRecruitHero =
    MessageType_Type_ReqRecruitHero;
  static const Type RecruitHeroAck =
    MessageType_Type_RecruitHeroAck;
  static const Type ReqRecruitedHero =
    MessageType_Type_ReqRecruitedHero;
  static const Type RecruitedHeroAck =
    MessageType_Type_RecruitedHeroAck;
  static const Type ReqVSBattleBegin =
    MessageType_Type_ReqVSBattleBegin;
  static const Type VSBattleBeginAck =
    MessageType_Type_VSBattleBeginAck;
  static const Type ReqVSBattleReady =
    MessageType_Type_ReqVSBattleReady;
  static const Type VSBattleReadyAck =
    MessageType_Type_VSBattleReadyAck;
  static const Type ReqVSBattleOpt =
    MessageType_Type_ReqVSBattleOpt;
  static const Type VSBattleOptAck =
    MessageType_Type_VSBattleOptAck;
  static const Type VSBattleTurn =
    MessageType_Type_VSBattleTurn;
  static const Type VSBattleEnd =
    MessageType_Type_VSBattleEnd;
  static const Type ReqBioHeroInfo =
    MessageType_Type_ReqBioHeroInfo;
  static const Type BioHeroInfoAck =
    MessageType_Type_BioHeroInfoAck;
  static const Type ReqBioHeroStepDone =
    MessageType_Type_ReqBioHeroStepDone;
  static const Type BioHeroStepDoneAck =
    MessageType_Type_BioHeroStepDoneAck;
  static const Type ReqAddFriend =
    MessageType_Type_ReqAddFriend;
  static const Type ReqRemoveFriend =
    MessageType_Type_ReqRemoveFriend;
  static const Type ReqFriendsInfo =
    MessageType_Type_ReqFriendsInfo;
  static const Type FriendsInfoAck =
    MessageType_Type_FriendsInfoAck;
  static const Type ReqMailInfo =
    MessageType_Type_ReqMailInfo;
  static const Type MailInfoAck =
    MessageType_Type_MailInfoAck;
  static const Type ReqMailDetail =
    MessageType_Type_ReqMailDetail;
  static const Type MailDetailAck =
    MessageType_Type_MailDetailAck;
  static const Type ReqDeleteMail =
    MessageType_Type_ReqDeleteMail;
  static const Type DeleteMailAck =
    MessageType_Type_DeleteMailAck;
  static const Type ReqGetMailAward =
    MessageType_Type_ReqGetMailAward;
  static const Type GetMailAwardAck =
    MessageType_Type_GetMailAwardAck;
  static const Type ReqRaffleHeroTimes =
    MessageType_Type_ReqRaffleHeroTimes;
  static const Type RaffleHeroTimesAck =
    MessageType_Type_RaffleHeroTimesAck;
  static const Type ReqBanquetInfo =
    MessageType_Type_ReqBanquetInfo;
  static const Type BanquetInfoAck =
    MessageType_Type_BanquetInfoAck;
  static const Type ReqBanquetHero =
    MessageType_Type_ReqBanquetHero;
  static const Type BanquetHeroAck =
    MessageType_Type_BanquetHeroAck;
  static const Type ReqPrepareBattle =
    MessageType_Type_ReqPrepareBattle;
  static const Type PrepareBattleAck =
    MessageType_Type_PrepareBattleAck;
  static const Type RemoveFriendAck =
    MessageType_Type_RemoveFriendAck;
  static const Type ReqTopList =
    MessageType_Type_ReqTopList;
  static const Type TopListAck =
    MessageType_Type_TopListAck;
  static const Type ReqWorldWar =
    MessageType_Type_ReqWorldWar;
  static const Type WorldWarAck =
    MessageType_Type_WorldWarAck;
  static const Type ReqWorldBattle =
    MessageType_Type_ReqWorldBattle;
  static const Type WorldBattleAck =
    MessageType_Type_WorldBattleAck;
  static const Type ReqWorldWarTopList =
    MessageType_Type_ReqWorldWarTopList;
  static const Type WorldWarTopListAck =
    MessageType_Type_WorldWarTopListAck;
  static const Type ReqHeroGeneralSoul =
    MessageType_Type_ReqHeroGeneralSoul;
  static const Type HeroGeneralSoulAck =
    MessageType_Type_HeroGeneralSoulAck;
  static const Type ReqGeneralSoulExchangeHero =
    MessageType_Type_ReqGeneralSoulExchangeHero;
  static const Type GeneralSoulExchangeHeroAck =
    MessageType_Type_GeneralSoulExchangeHeroAck;
  static const Type ReqUserLearnVsCD =
    MessageType_Type_ReqUserLearnVsCD;
  static const Type UserLearnVsCDAck =
    MessageType_Type_UserLearnVsCDAck;
  static const Type ReqTeamInfo =
    MessageType_Type_ReqTeamInfo;
  static const Type TeamInfoAck =
    MessageType_Type_TeamInfoAck;
  static const Type ReqSetTeam =
    MessageType_Type_ReqSetTeam;
  static const Type SetTeamAck =
    MessageType_Type_SetTeamAck;
  static const Type ReqClusterInfo =
    MessageType_Type_ReqClusterInfo;
  static const Type ClusterInfoAck =
    MessageType_Type_ClusterInfoAck;
  static const Type ReqAllCluster =
    MessageType_Type_ReqAllCluster;
  static const Type AllClusterAck =
    MessageType_Type_AllClusterAck;
  static const Type ReqCreateCluster =
    MessageType_Type_ReqCreateCluster;
  static const Type CreateClusterAck =
    MessageType_Type_CreateClusterAck;
  static const Type ReqJoinCluster =
    MessageType_Type_ReqJoinCluster;
  static const Type JoinClusterAck =
    MessageType_Type_JoinClusterAck;
  static const Type ReqSetClusterAttr =
    MessageType_Type_ReqSetClusterAttr;
  static const Type SetClusterAttrAck =
    MessageType_Type_SetClusterAttrAck;
  static const Type ReqExitCluster =
    MessageType_Type_ReqExitCluster;
  static const Type ExitClusterAck =
    MessageType_Type_ExitClusterAck;
  static const Type ReqWriteSkillBook =
    MessageType_Type_ReqWriteSkillBook;
  static const Type WriteSkillBookAck =
    MessageType_Type_WriteSkillBookAck;
  static const Type ReqTeamRunPath =
    MessageType_Type_ReqTeamRunPath;
  static const Type TeamRunPathAck =
    MessageType_Type_TeamRunPathAck;
  static const Type SetTeamRunPath =
    MessageType_Type_SetTeamRunPath;
  static const Type ReqTeamArrivedTar =
    MessageType_Type_ReqTeamArrivedTar;
  static const Type TeamArrivedTarAck =
    MessageType_Type_TeamArrivedTarAck;
  static const Type ReqClusterDetailInfo =
    MessageType_Type_ReqClusterDetailInfo;
  static const Type ClusterDetailInfoAck =
    MessageType_Type_ClusterDetailInfoAck;
  static const Type ReqCityItem =
    MessageType_Type_ReqCityItem;
  static const Type CityItemAck =
    MessageType_Type_CityItemAck;
  static const Type ReqCityHero =
    MessageType_Type_ReqCityHero;
  static const Type CityHeroAck =
    MessageType_Type_CityHeroAck;
  static const Type ReqResourceInfo =
    MessageType_Type_ReqResourceInfo;
  static const Type ResourceInfoAck =
    MessageType_Type_ResourceInfoAck;
  static const Type ReqResourceDetailInfo =
    MessageType_Type_ReqResourceDetailInfo;
  static const Type ResourceDetailInfoAck =
    MessageType_Type_ResourceDetailInfoAck;
  static const Type RegInviteJoinCluster =
    MessageType_Type_RegInviteJoinCluster;
  static const Type InviteJoinClusterAck =
    MessageType_Type_InviteJoinClusterAck;
  static const Type UserInviteJoinCluster =
    MessageType_Type_UserInviteJoinCluster;
  static const Type ReqClusterRunPath =
    MessageType_Type_ReqClusterRunPath;
  static const Type ClusterRunPathAck =
    MessageType_Type_ClusterRunPathAck;
  static const Type SetClusterRunPath =
    MessageType_Type_SetClusterRunPath;
  static const Type ReqClusterArrivedTar =
    MessageType_Type_ReqClusterArrivedTar;
  static const Type ClusterArrivedTarAck =
    MessageType_Type_ClusterArrivedTarAck;
  static const Type ReqEnterWorldWar =
    MessageType_Type_ReqEnterWorldWar;
  static const Type EnterWorldWarAck =
    MessageType_Type_EnterWorldWarAck;
  static const Type ReqWorldWarStatus =
    MessageType_Type_ReqWorldWarStatus;
  static const Type WorldWarStatusAck =
    MessageType_Type_WorldWarStatusAck;
  static const Type ReqWorldWarMove =
    MessageType_Type_ReqWorldWarMove;
  static const Type WorldWarMoveAck =
    MessageType_Type_WorldWarMoveAck;
  static const Type ReqWorldWarDefence =
    MessageType_Type_ReqWorldWarDefence;
  static const Type WorldWarDefenceAck =
    MessageType_Type_WorldWarDefenceAck;
  static const Type ReqWorldWarDefenceTarget =
    MessageType_Type_ReqWorldWarDefenceTarget;
  static const Type WorldWarDefenceTargetAck =
    MessageType_Type_WorldWarDefenceTargetAck;
  static const Type ReqLeaveWorldWar =
    MessageType_Type_ReqLeaveWorldWar;
  static const Type LeaveWorldWarAck =
    MessageType_Type_LeaveWorldWarAck;
  static const Type ReqAddHero =
    MessageType_Type_ReqAddHero;
  static const Type AddHeroAck =
    MessageType_Type_AddHeroAck;
  static const Type ReqAddItem =
    MessageType_Type_ReqAddItem;
  static const Type AddItemAck =
    MessageType_Type_AddItemAck;
  static const Type ReqAddMoney =
    MessageType_Type_ReqAddMoney;
  static const Type AddMoneyAck =
    MessageType_Type_AddMoneyAck;
  static const Type ReqTest =
    MessageType_Type_ReqTest;
  static const Type TestAck =
    MessageType_Type_TestAck;
  static inline bool Type_IsValid(int value) {
    return MessageType_Type_IsValid(value);
  }
  static const Type Type_MIN =
    MessageType_Type_Type_MIN;
  static const Type Type_MAX =
    MessageType_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    MessageType_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return MessageType_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return MessageType_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return MessageType_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:NetMsg.MessageType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<MessageType> MessageType_default_instance_;

// -------------------------------------------------------------------

class ReqLogin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqLogin) */ {
 public:
  ReqLogin();
  virtual ~ReqLogin();

  ReqLogin(const ReqLogin& from);

  inline ReqLogin& operator=(const ReqLogin& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqLogin& default_instance();

  static const ReqLogin* internal_default_instance();

  void Swap(ReqLogin* other);

  // implements Message ----------------------------------------------

  inline ReqLogin* New() const { return New(NULL); }

  ReqLogin* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqLogin& from);
  void MergeFrom(const ReqLogin& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqLogin* other);
  void UnsafeMergeFrom(const ReqLogin& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqLogin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqLogin> ReqLogin_default_instance_;

// -------------------------------------------------------------------

class PlayerData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.PlayerData) */ {
 public:
  PlayerData();
  virtual ~PlayerData();

  PlayerData(const PlayerData& from);

  inline PlayerData& operator=(const PlayerData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerData& default_instance();

  static const PlayerData* internal_default_instance();

  void Swap(PlayerData* other);

  // implements Message ----------------------------------------------

  inline PlayerData* New() const { return New(NULL); }

  PlayerData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerData& from);
  void MergeFrom(const PlayerData& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PlayerData* other);
  void UnsafeMergeFrom(const PlayerData& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string firstName = 1;
  void clear_firstname();
  static const int kFirstNameFieldNumber = 1;
  const ::std::string& firstname() const;
  void set_firstname(const ::std::string& value);
  void set_firstname(const char* value);
  void set_firstname(const char* value, size_t size);
  ::std::string* mutable_firstname();
  ::std::string* release_firstname();
  void set_allocated_firstname(::std::string* firstname);

  // optional string lastName = 2;
  void clear_lastname();
  static const int kLastNameFieldNumber = 2;
  const ::std::string& lastname() const;
  void set_lastname(const ::std::string& value);
  void set_lastname(const char* value);
  void set_lastname(const char* value, size_t size);
  ::std::string* mutable_lastname();
  ::std::string* release_lastname();
  void set_allocated_lastname(::std::string* lastname);

  // optional string secondName = 3;
  void clear_secondname();
  static const int kSecondNameFieldNumber = 3;
  const ::std::string& secondname() const;
  void set_secondname(const ::std::string& value);
  void set_secondname(const char* value);
  void set_secondname(const char* value, size_t size);
  ::std::string* mutable_secondname();
  ::std::string* release_secondname();
  void set_allocated_secondname(::std::string* secondname);

  // optional uint32 id = 4;
  void clear_id();
  static const int kIdFieldNumber = 4;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional uint32 level = 5;
  void clear_level();
  static const int kLevelFieldNumber = 5;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // optional uint32 exp = 6;
  void clear_exp();
  static const int kExpFieldNumber = 6;
  ::google::protobuf::uint32 exp() const;
  void set_exp(::google::protobuf::uint32 value);

  // optional uint32 stamina = 7;
  void clear_stamina();
  static const int kStaminaFieldNumber = 7;
  ::google::protobuf::uint32 stamina() const;
  void set_stamina(::google::protobuf::uint32 value);

  // optional uint32 coin = 8;
  void clear_coin();
  static const int kCoinFieldNumber = 8;
  ::google::protobuf::uint32 coin() const;
  void set_coin(::google::protobuf::uint32 value);

  // optional uint32 gold = 9;
  void clear_gold();
  static const int kGoldFieldNumber = 9;
  ::google::protobuf::uint32 gold() const;
  void set_gold(::google::protobuf::uint32 value);

  // optional uint32 vipLevel = 10;
  void clear_viplevel();
  static const int kVipLevelFieldNumber = 10;
  ::google::protobuf::uint32 viplevel() const;
  void set_viplevel(::google::protobuf::uint32 value);

  // optional int32 cityId = 11;
  void clear_cityid();
  static const int kCityIdFieldNumber = 11;
  ::google::protobuf::int32 cityid() const;
  void set_cityid(::google::protobuf::int32 value);

  // optional uint32 campCityId = 12;
  void clear_campcityid();
  static const int kCampCityIdFieldNumber = 12;
  ::google::protobuf::uint32 campcityid() const;
  void set_campcityid(::google::protobuf::uint32 value);

  // optional uint32 force = 13;
  void clear_force();
  static const int kForceFieldNumber = 13;
  ::google::protobuf::uint32 force() const;
  void set_force(::google::protobuf::uint32 value);

  // optional uint32 newGuide = 14;
  void clear_newguide();
  static const int kNewGuideFieldNumber = 14;
  ::google::protobuf::uint32 newguide() const;
  void set_newguide(::google::protobuf::uint32 value);

  // optional uint32 title = 15;
  void clear_title();
  static const int kTitleFieldNumber = 15;
  ::google::protobuf::uint32 title() const;
  void set_title(::google::protobuf::uint32 value);

  // optional uint32 contribution = 16;
  void clear_contribution();
  static const int kContributionFieldNumber = 16;
  ::google::protobuf::uint32 contribution() const;
  void set_contribution(::google::protobuf::uint32 value);

  // optional uint32 reputation = 17;
  void clear_reputation();
  static const int kReputationFieldNumber = 17;
  ::google::protobuf::uint32 reputation() const;
  void set_reputation(::google::protobuf::uint32 value);

  // optional uint64 battleId = 18;
  void clear_battleid();
  static const int kBattleIdFieldNumber = 18;
  ::google::protobuf::uint64 battleid() const;
  void set_battleid(::google::protobuf::uint64 value);

  // optional uint32 rank = 19;
  void clear_rank();
  static const int kRankFieldNumber = 19;
  ::google::protobuf::uint32 rank() const;
  void set_rank(::google::protobuf::uint32 value);

  // optional uint32 sex = 20;
  void clear_sex();
  static const int kSexFieldNumber = 20;
  ::google::protobuf::uint32 sex() const;
  void set_sex(::google::protobuf::uint32 value);

  // optional uint32 icon = 21;
  void clear_icon();
  static const int kIconFieldNumber = 21;
  ::google::protobuf::uint32 icon() const;
  void set_icon(::google::protobuf::uint32 value);

  // optional uint32 selectHero = 22;
  void clear_selecthero();
  static const int kSelectHeroFieldNumber = 22;
  ::google::protobuf::uint32 selecthero() const;
  void set_selecthero(::google::protobuf::uint32 value);

  // optional uint32 exploit = 23;
  void clear_exploit();
  static const int kExploitFieldNumber = 23;
  ::google::protobuf::uint32 exploit() const;
  void set_exploit(::google::protobuf::uint32 value);

  // optional uint32 wood = 24;
  void clear_wood();
  static const int kWoodFieldNumber = 24;
  ::google::protobuf::uint32 wood() const;
  void set_wood(::google::protobuf::uint32 value);

  // optional uint32 stone = 25;
  void clear_stone();
  static const int kStoneFieldNumber = 25;
  ::google::protobuf::uint32 stone() const;
  void set_stone(::google::protobuf::uint32 value);

  // optional uint32 iron = 26;
  void clear_iron();
  static const int kIronFieldNumber = 26;
  ::google::protobuf::uint32 iron() const;
  void set_iron(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.PlayerData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr firstname_;
  ::google::protobuf::internal::ArenaStringPtr lastname_;
  ::google::protobuf::internal::ArenaStringPtr secondname_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 stamina_;
  ::google::protobuf::uint32 coin_;
  ::google::protobuf::uint32 gold_;
  ::google::protobuf::uint32 viplevel_;
  ::google::protobuf::int32 cityid_;
  ::google::protobuf::uint32 campcityid_;
  ::google::protobuf::uint32 force_;
  ::google::protobuf::uint32 newguide_;
  ::google::protobuf::uint32 title_;
  ::google::protobuf::uint32 contribution_;
  ::google::protobuf::uint32 reputation_;
  ::google::protobuf::uint64 battleid_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 sex_;
  ::google::protobuf::uint32 icon_;
  ::google::protobuf::uint32 selecthero_;
  ::google::protobuf::uint32 exploit_;
  ::google::protobuf::uint32 wood_;
  ::google::protobuf::uint32 stone_;
  ::google::protobuf::uint32 iron_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PlayerData> PlayerData_default_instance_;

// -------------------------------------------------------------------

class LoginAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.LoginAck) */ {
 public:
  LoginAck();
  virtual ~LoginAck();

  LoginAck(const LoginAck& from);

  inline LoginAck& operator=(const LoginAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginAck& default_instance();

  static const LoginAck* internal_default_instance();

  void Swap(LoginAck* other);

  // implements Message ----------------------------------------------

  inline LoginAck* New() const { return New(NULL); }

  LoginAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginAck& from);
  void MergeFrom(const LoginAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginAck* other);
  void UnsafeMergeFrom(const LoginAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 error = 1;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // optional string session = 2;
  void clear_session();
  static const int kSessionFieldNumber = 2;
  const ::std::string& session() const;
  void set_session(const ::std::string& value);
  void set_session(const char* value);
  void set_session(const char* value, size_t size);
  ::std::string* mutable_session();
  ::std::string* release_session();
  void set_allocated_session(::std::string* session);

  // @@protoc_insertion_point(class_scope:NetMsg.LoginAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr session_;
  ::google::protobuf::uint32 error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<LoginAck> LoginAck_default_instance_;

// -------------------------------------------------------------------

class VersionInfoAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.VersionInfoAck) */ {
 public:
  VersionInfoAck();
  virtual ~VersionInfoAck();

  VersionInfoAck(const VersionInfoAck& from);

  inline VersionInfoAck& operator=(const VersionInfoAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VersionInfoAck& default_instance();

  static const VersionInfoAck* internal_default_instance();

  void Swap(VersionInfoAck* other);

  // implements Message ----------------------------------------------

  inline VersionInfoAck* New() const { return New(NULL); }

  VersionInfoAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VersionInfoAck& from);
  void MergeFrom(const VersionInfoAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(VersionInfoAck* other);
  void UnsafeMergeFrom(const VersionInfoAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 clientVersion = 1;
  void clear_clientversion();
  static const int kClientVersionFieldNumber = 1;
  ::google::protobuf::int32 clientversion() const;
  void set_clientversion(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.VersionInfoAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 clientversion_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<VersionInfoAck> VersionInfoAck_default_instance_;

// -------------------------------------------------------------------

class UserNamePassAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.UserNamePassAck) */ {
 public:
  UserNamePassAck();
  virtual ~UserNamePassAck();

  UserNamePassAck(const UserNamePassAck& from);

  inline UserNamePassAck& operator=(const UserNamePassAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserNamePassAck& default_instance();

  static const UserNamePassAck* internal_default_instance();

  void Swap(UserNamePassAck* other);

  // implements Message ----------------------------------------------

  inline UserNamePassAck* New() const { return New(NULL); }

  UserNamePassAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserNamePassAck& from);
  void MergeFrom(const UserNamePassAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserNamePassAck* other);
  void UnsafeMergeFrom(const UserNamePassAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:NetMsg.UserNamePassAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UserNamePassAck> UserNamePassAck_default_instance_;

// -------------------------------------------------------------------

class ReqRegister : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqRegister) */ {
 public:
  ReqRegister();
  virtual ~ReqRegister();

  ReqRegister(const ReqRegister& from);

  inline ReqRegister& operator=(const ReqRegister& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqRegister& default_instance();

  static const ReqRegister* internal_default_instance();

  void Swap(ReqRegister* other);

  // implements Message ----------------------------------------------

  inline ReqRegister* New() const { return New(NULL); }

  ReqRegister* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqRegister& from);
  void MergeFrom(const ReqRegister& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqRegister* other);
  void UnsafeMergeFrom(const ReqRegister& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqRegister)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqRegister> ReqRegister_default_instance_;

// -------------------------------------------------------------------

class RegisterAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.RegisterAck) */ {
 public:
  RegisterAck();
  virtual ~RegisterAck();

  RegisterAck(const RegisterAck& from);

  inline RegisterAck& operator=(const RegisterAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisterAck& default_instance();

  static const RegisterAck* internal_default_instance();

  void Swap(RegisterAck* other);

  // implements Message ----------------------------------------------

  inline RegisterAck* New() const { return New(NULL); }

  RegisterAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RegisterAck& from);
  void MergeFrom(const RegisterAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RegisterAck* other);
  void UnsafeMergeFrom(const RegisterAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 error = 1;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.RegisterAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RegisterAck> RegisterAck_default_instance_;

// -------------------------------------------------------------------

class ReqEnterGame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqEnterGame) */ {
 public:
  ReqEnterGame();
  virtual ~ReqEnterGame();

  ReqEnterGame(const ReqEnterGame& from);

  inline ReqEnterGame& operator=(const ReqEnterGame& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqEnterGame& default_instance();

  static const ReqEnterGame* internal_default_instance();

  void Swap(ReqEnterGame* other);

  // implements Message ----------------------------------------------

  inline ReqEnterGame* New() const { return New(NULL); }

  ReqEnterGame* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqEnterGame& from);
  void MergeFrom(const ReqEnterGame& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqEnterGame* other);
  void UnsafeMergeFrom(const ReqEnterGame& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string session = 1;
  void clear_session();
  static const int kSessionFieldNumber = 1;
  const ::std::string& session() const;
  void set_session(const ::std::string& value);
  void set_session(const char* value);
  void set_session(const char* value, size_t size);
  ::std::string* mutable_session();
  ::std::string* release_session();
  void set_allocated_session(::std::string* session);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqEnterGame)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr session_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqEnterGame> ReqEnterGame_default_instance_;

// -------------------------------------------------------------------

class EnterGameAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.EnterGameAck) */ {
 public:
  EnterGameAck();
  virtual ~EnterGameAck();

  EnterGameAck(const EnterGameAck& from);

  inline EnterGameAck& operator=(const EnterGameAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterGameAck& default_instance();

  static const EnterGameAck* internal_default_instance();

  void Swap(EnterGameAck* other);

  // implements Message ----------------------------------------------

  inline EnterGameAck* New() const { return New(NULL); }

  EnterGameAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnterGameAck& from);
  void MergeFrom(const EnterGameAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnterGameAck* other);
  void UnsafeMergeFrom(const EnterGameAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 error = 1;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // optional .NetMsg.PlayerData player = 2;
  bool has_player() const;
  void clear_player();
  static const int kPlayerFieldNumber = 2;
  const ::NetMsg::PlayerData& player() const;
  ::NetMsg::PlayerData* mutable_player();
  ::NetMsg::PlayerData* release_player();
  void set_allocated_player(::NetMsg::PlayerData* player);

  // @@protoc_insertion_point(class_scope:NetMsg.EnterGameAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NetMsg::PlayerData* player_;
  ::google::protobuf::int32 error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<EnterGameAck> EnterGameAck_default_instance_;

// -------------------------------------------------------------------

class ReqCreateUser : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqCreateUser) */ {
 public:
  ReqCreateUser();
  virtual ~ReqCreateUser();

  ReqCreateUser(const ReqCreateUser& from);

  inline ReqCreateUser& operator=(const ReqCreateUser& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqCreateUser& default_instance();

  static const ReqCreateUser* internal_default_instance();

  void Swap(ReqCreateUser* other);

  // implements Message ----------------------------------------------

  inline ReqCreateUser* New() const { return New(NULL); }

  ReqCreateUser* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqCreateUser& from);
  void MergeFrom(const ReqCreateUser& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqCreateUser* other);
  void UnsafeMergeFrom(const ReqCreateUser& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 newGuideId = 1;
  void clear_newguideid();
  static const int kNewGuideIdFieldNumber = 1;
  ::google::protobuf::uint32 newguideid() const;
  void set_newguideid(::google::protobuf::uint32 value);

  // optional string firstName = 2;
  void clear_firstname();
  static const int kFirstNameFieldNumber = 2;
  const ::std::string& firstname() const;
  void set_firstname(const ::std::string& value);
  void set_firstname(const char* value);
  void set_firstname(const char* value, size_t size);
  ::std::string* mutable_firstname();
  ::std::string* release_firstname();
  void set_allocated_firstname(::std::string* firstname);

  // optional string lastName = 3;
  void clear_lastname();
  static const int kLastNameFieldNumber = 3;
  const ::std::string& lastname() const;
  void set_lastname(const ::std::string& value);
  void set_lastname(const char* value);
  void set_lastname(const char* value, size_t size);
  ::std::string* mutable_lastname();
  ::std::string* release_lastname();
  void set_allocated_lastname(::std::string* lastname);

  // optional string secondName = 4;
  void clear_secondname();
  static const int kSecondNameFieldNumber = 4;
  const ::std::string& secondname() const;
  void set_secondname(const ::std::string& value);
  void set_secondname(const char* value);
  void set_secondname(const char* value, size_t size);
  ::std::string* mutable_secondname();
  ::std::string* release_secondname();
  void set_allocated_secondname(::std::string* secondname);

  // optional uint32 sex = 5;
  void clear_sex();
  static const int kSexFieldNumber = 5;
  ::google::protobuf::uint32 sex() const;
  void set_sex(::google::protobuf::uint32 value);

  // optional uint32 icon = 6;
  void clear_icon();
  static const int kIconFieldNumber = 6;
  ::google::protobuf::uint32 icon() const;
  void set_icon(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqCreateUser)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr firstname_;
  ::google::protobuf::internal::ArenaStringPtr lastname_;
  ::google::protobuf::internal::ArenaStringPtr secondname_;
  ::google::protobuf::uint32 newguideid_;
  ::google::protobuf::uint32 sex_;
  ::google::protobuf::uint32 icon_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqCreateUser> ReqCreateUser_default_instance_;

// -------------------------------------------------------------------

class CreateUserAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.CreateUserAck) */ {
 public:
  CreateUserAck();
  virtual ~CreateUserAck();

  CreateUserAck(const CreateUserAck& from);

  inline CreateUserAck& operator=(const CreateUserAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateUserAck& default_instance();

  static const CreateUserAck* internal_default_instance();

  void Swap(CreateUserAck* other);

  // implements Message ----------------------------------------------

  inline CreateUserAck* New() const { return New(NULL); }

  CreateUserAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateUserAck& from);
  void MergeFrom(const CreateUserAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CreateUserAck* other);
  void UnsafeMergeFrom(const CreateUserAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 error = 1;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // optional .NetMsg.PlayerData player = 2;
  bool has_player() const;
  void clear_player();
  static const int kPlayerFieldNumber = 2;
  const ::NetMsg::PlayerData& player() const;
  ::NetMsg::PlayerData* mutable_player();
  ::NetMsg::PlayerData* release_player();
  void set_allocated_player(::NetMsg::PlayerData* player);

  // @@protoc_insertion_point(class_scope:NetMsg.CreateUserAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NetMsg::PlayerData* player_;
  ::google::protobuf::int32 error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CreateUserAck> CreateUserAck_default_instance_;

// -------------------------------------------------------------------

class ServerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ServerInfo) */ {
 public:
  ServerInfo();
  virtual ~ServerInfo();

  ServerInfo(const ServerInfo& from);

  inline ServerInfo& operator=(const ServerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerInfo& default_instance();

  static const ServerInfo* internal_default_instance();

  void Swap(ServerInfo* other);

  // implements Message ----------------------------------------------

  inline ServerInfo* New() const { return New(NULL); }

  ServerInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerInfo& from);
  void MergeFrom(const ServerInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ServerInfo* other);
  void UnsafeMergeFrom(const ServerInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string ip = 3;
  void clear_ip();
  static const int kIpFieldNumber = 3;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // optional int32 port = 4;
  void clear_port();
  static const int kPortFieldNumber = 4;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // optional .NetMsg.ServerStatus status = 5;
  void clear_status();
  static const int kStatusFieldNumber = 5;
  ::NetMsg::ServerStatus status() const;
  void set_status(::NetMsg::ServerStatus value);

  // @@protoc_insertion_point(class_scope:NetMsg.ServerInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 port_;
  int status_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ServerInfo> ServerInfo_default_instance_;

// -------------------------------------------------------------------

class ServerListAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ServerListAck) */ {
 public:
  ServerListAck();
  virtual ~ServerListAck();

  ServerListAck(const ServerListAck& from);

  inline ServerListAck& operator=(const ServerListAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerListAck& default_instance();

  static const ServerListAck* internal_default_instance();

  void Swap(ServerListAck* other);

  // implements Message ----------------------------------------------

  inline ServerListAck* New() const { return New(NULL); }

  ServerListAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerListAck& from);
  void MergeFrom(const ServerListAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ServerListAck* other);
  void UnsafeMergeFrom(const ServerListAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .NetMsg.ServerInfo info = 1;
  int info_size() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::NetMsg::ServerInfo& info(int index) const;
  ::NetMsg::ServerInfo* mutable_info(int index);
  ::NetMsg::ServerInfo* add_info();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::ServerInfo >*
      mutable_info();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::ServerInfo >&
      info() const;

  // @@protoc_insertion_point(class_scope:NetMsg.ServerListAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::ServerInfo > info_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ServerListAck> ServerListAck_default_instance_;

// -------------------------------------------------------------------

class ReqThirdPartyLogin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqThirdPartyLogin) */ {
 public:
  ReqThirdPartyLogin();
  virtual ~ReqThirdPartyLogin();

  ReqThirdPartyLogin(const ReqThirdPartyLogin& from);

  inline ReqThirdPartyLogin& operator=(const ReqThirdPartyLogin& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqThirdPartyLogin& default_instance();

  static const ReqThirdPartyLogin* internal_default_instance();

  void Swap(ReqThirdPartyLogin* other);

  // implements Message ----------------------------------------------

  inline ReqThirdPartyLogin* New() const { return New(NULL); }

  ReqThirdPartyLogin* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqThirdPartyLogin& from);
  void MergeFrom(const ReqThirdPartyLogin& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqThirdPartyLogin* other);
  void UnsafeMergeFrom(const ReqThirdPartyLogin& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional string tocken = 2;
  void clear_tocken();
  static const int kTockenFieldNumber = 2;
  const ::std::string& tocken() const;
  void set_tocken(const ::std::string& value);
  void set_tocken(const char* value);
  void set_tocken(const char* value, size_t size);
  ::std::string* mutable_tocken();
  ::std::string* release_tocken();
  void set_allocated_tocken(::std::string* tocken);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqThirdPartyLogin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr tocken_;
  ::google::protobuf::int32 id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqThirdPartyLogin> ReqThirdPartyLogin_default_instance_;

// -------------------------------------------------------------------

class ReqOrderId : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqOrderId) */ {
 public:
  ReqOrderId();
  virtual ~ReqOrderId();

  ReqOrderId(const ReqOrderId& from);

  inline ReqOrderId& operator=(const ReqOrderId& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqOrderId& default_instance();

  static const ReqOrderId* internal_default_instance();

  void Swap(ReqOrderId* other);

  // implements Message ----------------------------------------------

  inline ReqOrderId* New() const { return New(NULL); }

  ReqOrderId* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqOrderId& from);
  void MergeFrom(const ReqOrderId& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqOrderId* other);
  void UnsafeMergeFrom(const ReqOrderId& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 productId = 1;
  void clear_productid();
  static const int kProductIdFieldNumber = 1;
  ::google::protobuf::int32 productid() const;
  void set_productid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqOrderId)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 productid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqOrderId> ReqOrderId_default_instance_;

// -------------------------------------------------------------------

class OrderIdAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.OrderIdAck) */ {
 public:
  OrderIdAck();
  virtual ~OrderIdAck();

  OrderIdAck(const OrderIdAck& from);

  inline OrderIdAck& operator=(const OrderIdAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderIdAck& default_instance();

  static const OrderIdAck* internal_default_instance();

  void Swap(OrderIdAck* other);

  // implements Message ----------------------------------------------

  inline OrderIdAck* New() const { return New(NULL); }

  OrderIdAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OrderIdAck& from);
  void MergeFrom(const OrderIdAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OrderIdAck* other);
  void UnsafeMergeFrom(const OrderIdAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string orderId = 1;
  void clear_orderid();
  static const int kOrderIdFieldNumber = 1;
  const ::std::string& orderid() const;
  void set_orderid(const ::std::string& value);
  void set_orderid(const char* value);
  void set_orderid(const char* value, size_t size);
  ::std::string* mutable_orderid();
  ::std::string* release_orderid();
  void set_allocated_orderid(::std::string* orderid);

  // optional string ext = 2;
  void clear_ext();
  static const int kExtFieldNumber = 2;
  const ::std::string& ext() const;
  void set_ext(const ::std::string& value);
  void set_ext(const char* value);
  void set_ext(const char* value, size_t size);
  ::std::string* mutable_ext();
  ::std::string* release_ext();
  void set_allocated_ext(::std::string* ext);

  // @@protoc_insertion_point(class_scope:NetMsg.OrderIdAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr orderid_;
  ::google::protobuf::internal::ArenaStringPtr ext_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<OrderIdAck> OrderIdAck_default_instance_;

// -------------------------------------------------------------------

class UpdatePlayerAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.UpdatePlayerAck) */ {
 public:
  UpdatePlayerAck();
  virtual ~UpdatePlayerAck();

  UpdatePlayerAck(const UpdatePlayerAck& from);

  inline UpdatePlayerAck& operator=(const UpdatePlayerAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdatePlayerAck& default_instance();

  static const UpdatePlayerAck* internal_default_instance();

  void Swap(UpdatePlayerAck* other);

  // implements Message ----------------------------------------------

  inline UpdatePlayerAck* New() const { return New(NULL); }

  UpdatePlayerAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdatePlayerAck& from);
  void MergeFrom(const UpdatePlayerAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UpdatePlayerAck* other);
  void UnsafeMergeFrom(const UpdatePlayerAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef UpdatePlayerAck_UpdateType UpdateType;
  static const UpdateType UpdateNick =
    UpdatePlayerAck_UpdateType_UpdateNick;
  static const UpdateType UpdateLevel =
    UpdatePlayerAck_UpdateType_UpdateLevel;
  static const UpdateType UpdateExp =
    UpdatePlayerAck_UpdateType_UpdateExp;
  static const UpdateType UpdateStamina =
    UpdatePlayerAck_UpdateType_UpdateStamina;
  static const UpdateType UpdateCoin =
    UpdatePlayerAck_UpdateType_UpdateCoin;
  static const UpdateType UpdateGold =
    UpdatePlayerAck_UpdateType_UpdateGold;
  static const UpdateType UpdateVipLevel =
    UpdatePlayerAck_UpdateType_UpdateVipLevel;
  static const UpdateType UpdateCityId =
    UpdatePlayerAck_UpdateType_UpdateCityId;
  static const UpdateType UpdateCampCityId =
    UpdatePlayerAck_UpdateType_UpdateCampCityId;
  static const UpdateType UpdateForce =
    UpdatePlayerAck_UpdateType_UpdateForce;
  static const UpdateType UpdateNewGuide =
    UpdatePlayerAck_UpdateType_UpdateNewGuide;
  static const UpdateType UpdateTitle =
    UpdatePlayerAck_UpdateType_UpdateTitle;
  static const UpdateType UpdateContribution =
    UpdatePlayerAck_UpdateType_UpdateContribution;
  static const UpdateType UpdateReputation =
    UpdatePlayerAck_UpdateType_UpdateReputation;
  static const UpdateType UpdateRank =
    UpdatePlayerAck_UpdateType_UpdateRank;
  static const UpdateType UpdateExploit =
    UpdatePlayerAck_UpdateType_UpdateExploit;
  static const UpdateType UpdateWood =
    UpdatePlayerAck_UpdateType_UpdateWood;
  static const UpdateType UpdateStone =
    UpdatePlayerAck_UpdateType_UpdateStone;
  static const UpdateType UpdateIron =
    UpdatePlayerAck_UpdateType_UpdateIron;
  static inline bool UpdateType_IsValid(int value) {
    return UpdatePlayerAck_UpdateType_IsValid(value);
  }
  static const UpdateType UpdateType_MIN =
    UpdatePlayerAck_UpdateType_UpdateType_MIN;
  static const UpdateType UpdateType_MAX =
    UpdatePlayerAck_UpdateType_UpdateType_MAX;
  static const int UpdateType_ARRAYSIZE =
    UpdatePlayerAck_UpdateType_UpdateType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  UpdateType_descriptor() {
    return UpdatePlayerAck_UpdateType_descriptor();
  }
  static inline const ::std::string& UpdateType_Name(UpdateType value) {
    return UpdatePlayerAck_UpdateType_Name(value);
  }
  static inline bool UpdateType_Parse(const ::std::string& name,
      UpdateType* value) {
    return UpdatePlayerAck_UpdateType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint64 mask = 1;
  void clear_mask();
  static const int kMaskFieldNumber = 1;
  ::google::protobuf::uint64 mask() const;
  void set_mask(::google::protobuf::uint64 value);

  // optional .NetMsg.PlayerData player = 2;
  bool has_player() const;
  void clear_player();
  static const int kPlayerFieldNumber = 2;
  const ::NetMsg::PlayerData& player() const;
  ::NetMsg::PlayerData* mutable_player();
  ::NetMsg::PlayerData* release_player();
  void set_allocated_player(::NetMsg::PlayerData* player);

  // @@protoc_insertion_point(class_scope:NetMsg.UpdatePlayerAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NetMsg::PlayerData* player_;
  ::google::protobuf::uint64 mask_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UpdatePlayerAck> UpdatePlayerAck_default_instance_;

// -------------------------------------------------------------------

class ReqChat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqChat) */ {
 public:
  ReqChat();
  virtual ~ReqChat();

  ReqChat(const ReqChat& from);

  inline ReqChat& operator=(const ReqChat& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqChat& default_instance();

  static const ReqChat* internal_default_instance();

  void Swap(ReqChat* other);

  // implements Message ----------------------------------------------

  inline ReqChat* New() const { return New(NULL); }

  ReqChat* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqChat& from);
  void MergeFrom(const ReqChat& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqChat* other);
  void UnsafeMergeFrom(const ReqChat& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 chatType = 1;
  void clear_chattype();
  static const int kChatTypeFieldNumber = 1;
  ::google::protobuf::uint32 chattype() const;
  void set_chattype(::google::protobuf::uint32 value);

  // optional uint32 toUserId = 2;
  void clear_touserid();
  static const int kToUserIdFieldNumber = 2;
  ::google::protobuf::uint32 touserid() const;
  void set_touserid(::google::protobuf::uint32 value);

  // optional string toNick = 3;
  void clear_tonick();
  static const int kToNickFieldNumber = 3;
  const ::std::string& tonick() const;
  void set_tonick(const ::std::string& value);
  void set_tonick(const char* value);
  void set_tonick(const char* value, size_t size);
  ::std::string* mutable_tonick();
  ::std::string* release_tonick();
  void set_allocated_tonick(::std::string* tonick);

  // optional string msg = 4;
  void clear_msg();
  static const int kMsgFieldNumber = 4;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqChat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr tonick_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::uint32 chattype_;
  ::google::protobuf::uint32 touserid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqChat> ReqChat_default_instance_;

// -------------------------------------------------------------------

class ChatAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ChatAck) */ {
 public:
  ChatAck();
  virtual ~ChatAck();

  ChatAck(const ChatAck& from);

  inline ChatAck& operator=(const ChatAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatAck& default_instance();

  static const ChatAck* internal_default_instance();

  void Swap(ChatAck* other);

  // implements Message ----------------------------------------------

  inline ChatAck* New() const { return New(NULL); }

  ChatAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChatAck& from);
  void MergeFrom(const ChatAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ChatAck* other);
  void UnsafeMergeFrom(const ChatAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 chatType = 1;
  void clear_chattype();
  static const int kChatTypeFieldNumber = 1;
  ::google::protobuf::uint32 chattype() const;
  void set_chattype(::google::protobuf::uint32 value);

  // optional uint32 fromUserId = 2;
  void clear_fromuserid();
  static const int kFromUserIdFieldNumber = 2;
  ::google::protobuf::uint32 fromuserid() const;
  void set_fromuserid(::google::protobuf::uint32 value);

  // optional string fromNick = 3;
  void clear_fromnick();
  static const int kFromNickFieldNumber = 3;
  const ::std::string& fromnick() const;
  void set_fromnick(const ::std::string& value);
  void set_fromnick(const char* value);
  void set_fromnick(const char* value, size_t size);
  ::std::string* mutable_fromnick();
  ::std::string* release_fromnick();
  void set_allocated_fromnick(::std::string* fromnick);

  // optional uint32 toUserId = 4;
  void clear_touserid();
  static const int kToUserIdFieldNumber = 4;
  ::google::protobuf::uint32 touserid() const;
  void set_touserid(::google::protobuf::uint32 value);

  // optional string toNick = 5;
  void clear_tonick();
  static const int kToNickFieldNumber = 5;
  const ::std::string& tonick() const;
  void set_tonick(const ::std::string& value);
  void set_tonick(const char* value);
  void set_tonick(const char* value, size_t size);
  ::std::string* mutable_tonick();
  ::std::string* release_tonick();
  void set_allocated_tonick(::std::string* tonick);

  // optional string msg = 6;
  void clear_msg();
  static const int kMsgFieldNumber = 6;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional uint32 error = 7;
  void clear_error();
  static const int kErrorFieldNumber = 7;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // optional uint32 sendTime = 8;
  void clear_sendtime();
  static const int kSendTimeFieldNumber = 8;
  ::google::protobuf::uint32 sendtime() const;
  void set_sendtime(::google::protobuf::uint32 value);

  // optional uint32 fromForce = 9;
  void clear_fromforce();
  static const int kFromForceFieldNumber = 9;
  ::google::protobuf::uint32 fromforce() const;
  void set_fromforce(::google::protobuf::uint32 value);

  // optional uint32 fromUserIcon = 10;
  void clear_fromusericon();
  static const int kFromUserIconFieldNumber = 10;
  ::google::protobuf::uint32 fromusericon() const;
  void set_fromusericon(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ChatAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr fromnick_;
  ::google::protobuf::internal::ArenaStringPtr tonick_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::uint32 chattype_;
  ::google::protobuf::uint32 fromuserid_;
  ::google::protobuf::uint32 touserid_;
  ::google::protobuf::uint32 error_;
  ::google::protobuf::uint32 sendtime_;
  ::google::protobuf::uint32 fromforce_;
  ::google::protobuf::uint32 fromusericon_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ChatAck> ChatAck_default_instance_;

// -------------------------------------------------------------------

class UserNickAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.UserNickAck) */ {
 public:
  UserNickAck();
  virtual ~UserNickAck();

  UserNickAck(const UserNickAck& from);

  inline UserNickAck& operator=(const UserNickAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserNickAck& default_instance();

  static const UserNickAck* internal_default_instance();

  void Swap(UserNickAck* other);

  // implements Message ----------------------------------------------

  inline UserNickAck* New() const { return New(NULL); }

  UserNickAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserNickAck& from);
  void MergeFrom(const UserNickAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserNickAck* other);
  void UnsafeMergeFrom(const UserNickAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string firstName = 1;
  void clear_firstname();
  static const int kFirstNameFieldNumber = 1;
  const ::std::string& firstname() const;
  void set_firstname(const ::std::string& value);
  void set_firstname(const char* value);
  void set_firstname(const char* value, size_t size);
  ::std::string* mutable_firstname();
  ::std::string* release_firstname();
  void set_allocated_firstname(::std::string* firstname);

  // optional string lastName = 2;
  void clear_lastname();
  static const int kLastNameFieldNumber = 2;
  const ::std::string& lastname() const;
  void set_lastname(const ::std::string& value);
  void set_lastname(const char* value);
  void set_lastname(const char* value, size_t size);
  ::std::string* mutable_lastname();
  ::std::string* release_lastname();
  void set_allocated_lastname(::std::string* lastname);

  // optional string secondName = 3;
  void clear_secondname();
  static const int kSecondNameFieldNumber = 3;
  const ::std::string& secondname() const;
  void set_secondname(const ::std::string& value);
  void set_secondname(const char* value);
  void set_secondname(const char* value, size_t size);
  ::std::string* mutable_secondname();
  ::std::string* release_secondname();
  void set_allocated_secondname(::std::string* secondname);

  // @@protoc_insertion_point(class_scope:NetMsg.UserNickAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr firstname_;
  ::google::protobuf::internal::ArenaStringPtr lastname_;
  ::google::protobuf::internal::ArenaStringPtr secondname_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UserNickAck> UserNickAck_default_instance_;

// -------------------------------------------------------------------

class SkillInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.SkillInfo) */ {
 public:
  SkillInfo();
  virtual ~SkillInfo();

  SkillInfo(const SkillInfo& from);

  inline SkillInfo& operator=(const SkillInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillInfo& default_instance();

  static const SkillInfo* internal_default_instance();

  void Swap(SkillInfo* other);

  // implements Message ----------------------------------------------

  inline SkillInfo* New() const { return New(NULL); }

  SkillInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillInfo& from);
  void MergeFrom(const SkillInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SkillInfo* other);
  void UnsafeMergeFrom(const SkillInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint64 uid() const;
  void set_uid(::google::protobuf::uint64 value);

  // optional uint32 skillId = 2;
  void clear_skillid();
  static const int kSkillIdFieldNumber = 2;
  ::google::protobuf::uint32 skillid() const;
  void set_skillid(::google::protobuf::uint32 value);

  // optional uint32 skillExp = 3;
  void clear_skillexp();
  static const int kSkillExpFieldNumber = 3;
  ::google::protobuf::uint32 skillexp() const;
  void set_skillexp(::google::protobuf::uint32 value);

  // optional uint32 skillLevel = 4;
  void clear_skilllevel();
  static const int kSkillLevelFieldNumber = 4;
  ::google::protobuf::uint32 skilllevel() const;
  void set_skilllevel(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.SkillInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 uid_;
  ::google::protobuf::uint32 skillid_;
  ::google::protobuf::uint32 skillexp_;
  ::google::protobuf::uint32 skilllevel_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SkillInfo> SkillInfo_default_instance_;

// -------------------------------------------------------------------

class HeroAttr : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.HeroAttr) */ {
 public:
  HeroAttr();
  virtual ~HeroAttr();

  HeroAttr(const HeroAttr& from);

  inline HeroAttr& operator=(const HeroAttr& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroAttr& default_instance();

  static const HeroAttr* internal_default_instance();

  void Swap(HeroAttr* other);

  // implements Message ----------------------------------------------

  inline HeroAttr* New() const { return New(NULL); }

  HeroAttr* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroAttr& from);
  void MergeFrom(const HeroAttr& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HeroAttr* other);
  void UnsafeMergeFrom(const HeroAttr& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 exp = 1;
  void clear_exp();
  static const int kExpFieldNumber = 1;
  ::google::protobuf::uint32 exp() const;
  void set_exp(::google::protobuf::uint32 value);

  // optional uint32 lv = 2;
  void clear_lv();
  static const int kLvFieldNumber = 2;
  ::google::protobuf::uint32 lv() const;
  void set_lv(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.HeroAttr)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 lv_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<HeroAttr> HeroAttr_default_instance_;

// -------------------------------------------------------------------

class HeroInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.HeroInfo) */ {
 public:
  HeroInfo();
  virtual ~HeroInfo();

  HeroInfo(const HeroInfo& from);

  inline HeroInfo& operator=(const HeroInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroInfo& default_instance();

  static const HeroInfo* internal_default_instance();

  void Swap(HeroInfo* other);

  // implements Message ----------------------------------------------

  inline HeroInfo* New() const { return New(NULL); }

  HeroInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroInfo& from);
  void MergeFrom(const HeroInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HeroInfo* other);
  void UnsafeMergeFrom(const HeroInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 udid = 1;
  void clear_udid();
  static const int kUdidFieldNumber = 1;
  ::google::protobuf::uint64 udid() const;
  void set_udid(::google::protobuf::uint64 value);

  // optional uint32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional uint32 level = 3;
  void clear_level();
  static const int kLevelFieldNumber = 3;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // optional uint32 starLevel = 4;
  void clear_starlevel();
  static const int kStarLevelFieldNumber = 4;
  ::google::protobuf::uint32 starlevel() const;
  void set_starlevel(::google::protobuf::uint32 value);

  // optional .NetMsg.HeroAttr extraStrength = 5;
  bool has_extrastrength() const;
  void clear_extrastrength();
  static const int kExtraStrengthFieldNumber = 5;
  const ::NetMsg::HeroAttr& extrastrength() const;
  ::NetMsg::HeroAttr* mutable_extrastrength();
  ::NetMsg::HeroAttr* release_extrastrength();
  void set_allocated_extrastrength(::NetMsg::HeroAttr* extrastrength);

  // optional .NetMsg.HeroAttr extraLeadership = 6;
  bool has_extraleadership() const;
  void clear_extraleadership();
  static const int kExtraLeadershipFieldNumber = 6;
  const ::NetMsg::HeroAttr& extraleadership() const;
  ::NetMsg::HeroAttr* mutable_extraleadership();
  ::NetMsg::HeroAttr* release_extraleadership();
  void set_allocated_extraleadership(::NetMsg::HeroAttr* extraleadership);

  // optional .NetMsg.HeroAttr extraWisdom = 7;
  bool has_extrawisdom() const;
  void clear_extrawisdom();
  static const int kExtraWisdomFieldNumber = 7;
  const ::NetMsg::HeroAttr& extrawisdom() const;
  ::NetMsg::HeroAttr* mutable_extrawisdom();
  ::NetMsg::HeroAttr* release_extrawisdom();
  void set_allocated_extrawisdom(::NetMsg::HeroAttr* extrawisdom);

  // optional .NetMsg.HeroAttr extraCharm = 8;
  bool has_extracharm() const;
  void clear_extracharm();
  static const int kExtraCharmFieldNumber = 8;
  const ::NetMsg::HeroAttr& extracharm() const;
  ::NetMsg::HeroAttr* mutable_extracharm();
  ::NetMsg::HeroAttr* release_extracharm();
  void set_allocated_extracharm(::NetMsg::HeroAttr* extracharm);

  // optional .NetMsg.HeroAttr extraLuck = 9;
  bool has_extraluck() const;
  void clear_extraluck();
  static const int kExtraLuckFieldNumber = 9;
  const ::NetMsg::HeroAttr& extraluck() const;
  ::NetMsg::HeroAttr* mutable_extraluck();
  ::NetMsg::HeroAttr* release_extraluck();
  void set_allocated_extraluck(::NetMsg::HeroAttr* extraluck);

  // optional uint32 cdTime = 10;
  void clear_cdtime();
  static const int kCdTimeFieldNumber = 10;
  ::google::protobuf::uint32 cdtime() const;
  void set_cdtime(::google::protobuf::uint32 value);

  // optional uint32 exp = 11;
  void clear_exp();
  static const int kExpFieldNumber = 11;
  ::google::protobuf::uint32 exp() const;
  void set_exp(::google::protobuf::uint32 value);

  // repeated .NetMsg.SkillInfo skills = 12;
  int skills_size() const;
  void clear_skills();
  static const int kSkillsFieldNumber = 12;
  const ::NetMsg::SkillInfo& skills(int index) const;
  ::NetMsg::SkillInfo* mutable_skills(int index);
  ::NetMsg::SkillInfo* add_skills();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::SkillInfo >*
      mutable_skills();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::SkillInfo >&
      skills() const;

  // @@protoc_insertion_point(class_scope:NetMsg.HeroInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::SkillInfo > skills_;
  ::NetMsg::HeroAttr* extrastrength_;
  ::NetMsg::HeroAttr* extraleadership_;
  ::NetMsg::HeroAttr* extrawisdom_;
  ::NetMsg::HeroAttr* extracharm_;
  ::NetMsg::HeroAttr* extraluck_;
  ::google::protobuf::uint64 udid_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 starlevel_;
  ::google::protobuf::uint32 cdtime_;
  ::google::protobuf::uint32 exp_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<HeroInfo> HeroInfo_default_instance_;

// -------------------------------------------------------------------

class HeroAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.HeroAck) */ {
 public:
  HeroAck();
  virtual ~HeroAck();

  HeroAck(const HeroAck& from);

  inline HeroAck& operator=(const HeroAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroAck& default_instance();

  static const HeroAck* internal_default_instance();

  void Swap(HeroAck* other);

  // implements Message ----------------------------------------------

  inline HeroAck* New() const { return New(NULL); }

  HeroAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroAck& from);
  void MergeFrom(const HeroAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HeroAck* other);
  void UnsafeMergeFrom(const HeroAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .NetMsg.HeroInfo heros = 1;
  int heros_size() const;
  void clear_heros();
  static const int kHerosFieldNumber = 1;
  const ::NetMsg::HeroInfo& heros(int index) const;
  ::NetMsg::HeroInfo* mutable_heros(int index);
  ::NetMsg::HeroInfo* add_heros();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::HeroInfo >*
      mutable_heros();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::HeroInfo >&
      heros() const;

  // @@protoc_insertion_point(class_scope:NetMsg.HeroAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::HeroInfo > heros_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<HeroAck> HeroAck_default_instance_;

// -------------------------------------------------------------------

class ItemInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ItemInfo) */ {
 public:
  ItemInfo();
  virtual ~ItemInfo();

  ItemInfo(const ItemInfo& from);

  inline ItemInfo& operator=(const ItemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemInfo& default_instance();

  static const ItemInfo* internal_default_instance();

  void Swap(ItemInfo* other);

  // implements Message ----------------------------------------------

  inline ItemInfo* New() const { return New(NULL); }

  ItemInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemInfo& from);
  void MergeFrom(const ItemInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ItemInfo* other);
  void UnsafeMergeFrom(const ItemInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint64 uid() const;
  void set_uid(::google::protobuf::uint64 value);

  // optional uint32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional uint32 num = 3;
  void clear_num();
  static const int kNumFieldNumber = 3;
  ::google::protobuf::uint32 num() const;
  void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ItemInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 uid_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 num_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ItemInfo> ItemInfo_default_instance_;

// -------------------------------------------------------------------

class ItemAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ItemAck) */ {
 public:
  ItemAck();
  virtual ~ItemAck();

  ItemAck(const ItemAck& from);

  inline ItemAck& operator=(const ItemAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemAck& default_instance();

  static const ItemAck* internal_default_instance();

  void Swap(ItemAck* other);

  // implements Message ----------------------------------------------

  inline ItemAck* New() const { return New(NULL); }

  ItemAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemAck& from);
  void MergeFrom(const ItemAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ItemAck* other);
  void UnsafeMergeFrom(const ItemAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .NetMsg.ItemInfo items = 1;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 1;
  const ::NetMsg::ItemInfo& items(int index) const;
  ::NetMsg::ItemInfo* mutable_items(int index);
  ::NetMsg::ItemInfo* add_items();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::ItemInfo >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::ItemInfo >&
      items() const;

  // @@protoc_insertion_point(class_scope:NetMsg.ItemAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::ItemInfo > items_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ItemAck> ItemAck_default_instance_;

// -------------------------------------------------------------------

class UpdateSkill : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.UpdateSkill) */ {
 public:
  UpdateSkill();
  virtual ~UpdateSkill();

  UpdateSkill(const UpdateSkill& from);

  inline UpdateSkill& operator=(const UpdateSkill& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateSkill& default_instance();

  static const UpdateSkill* internal_default_instance();

  void Swap(UpdateSkill* other);

  // implements Message ----------------------------------------------

  inline UpdateSkill* New() const { return New(NULL); }

  UpdateSkill* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateSkill& from);
  void MergeFrom(const UpdateSkill& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UpdateSkill* other);
  void UnsafeMergeFrom(const UpdateSkill& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 heroUid = 1;
  void clear_herouid();
  static const int kHeroUidFieldNumber = 1;
  ::google::protobuf::uint64 herouid() const;
  void set_herouid(::google::protobuf::uint64 value);

  // repeated .NetMsg.SkillInfo skills = 2;
  int skills_size() const;
  void clear_skills();
  static const int kSkillsFieldNumber = 2;
  const ::NetMsg::SkillInfo& skills(int index) const;
  ::NetMsg::SkillInfo* mutable_skills(int index);
  ::NetMsg::SkillInfo* add_skills();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::SkillInfo >*
      mutable_skills();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::SkillInfo >&
      skills() const;

  // @@protoc_insertion_point(class_scope:NetMsg.UpdateSkill)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::SkillInfo > skills_;
  ::google::protobuf::uint64 herouid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UpdateSkill> UpdateSkill_default_instance_;

// -------------------------------------------------------------------

class SetNewGuide : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.SetNewGuide) */ {
 public:
  SetNewGuide();
  virtual ~SetNewGuide();

  SetNewGuide(const SetNewGuide& from);

  inline SetNewGuide& operator=(const SetNewGuide& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetNewGuide& default_instance();

  static const SetNewGuide* internal_default_instance();

  void Swap(SetNewGuide* other);

  // implements Message ----------------------------------------------

  inline SetNewGuide* New() const { return New(NULL); }

  SetNewGuide* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetNewGuide& from);
  void MergeFrom(const SetNewGuide& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetNewGuide* other);
  void UnsafeMergeFrom(const SetNewGuide& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 step = 1;
  void clear_step();
  static const int kStepFieldNumber = 1;
  ::google::protobuf::uint32 step() const;
  void set_step(::google::protobuf::uint32 value);

  // optional uint32 addData = 2;
  void clear_adddata();
  static const int kAddDataFieldNumber = 2;
  ::google::protobuf::uint32 adddata() const;
  void set_adddata(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.SetNewGuide)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 step_;
  ::google::protobuf::uint32 adddata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SetNewGuide> SetNewGuide_default_instance_;

// -------------------------------------------------------------------

class PathInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.PathInfo) */ {
 public:
  PathInfo();
  virtual ~PathInfo();

  PathInfo(const PathInfo& from);

  inline PathInfo& operator=(const PathInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PathInfo& default_instance();

  static const PathInfo* internal_default_instance();

  void Swap(PathInfo* other);

  // implements Message ----------------------------------------------

  inline PathInfo* New() const { return New(NULL); }

  PathInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PathInfo& from);
  void MergeFrom(const PathInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PathInfo* other);
  void UnsafeMergeFrom(const PathInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 startPath = 1;
  void clear_startpath();
  static const int kStartPathFieldNumber = 1;
  ::google::protobuf::uint32 startpath() const;
  void set_startpath(::google::protobuf::uint32 value);

  // optional float startPer = 2;
  void clear_startper();
  static const int kStartPerFieldNumber = 2;
  float startper() const;
  void set_startper(float value);

  // optional uint32 endPath = 3;
  void clear_endpath();
  static const int kEndPathFieldNumber = 3;
  ::google::protobuf::uint32 endpath() const;
  void set_endpath(::google::protobuf::uint32 value);

  // optional float endPer = 4;
  void clear_endper();
  static const int kEndPerFieldNumber = 4;
  float endper() const;
  void set_endper(float value);

  // optional uint32 curPath = 5;
  void clear_curpath();
  static const int kCurPathFieldNumber = 5;
  ::google::protobuf::uint32 curpath() const;
  void set_curpath(::google::protobuf::uint32 value);

  // optional float curPer = 6;
  void clear_curper();
  static const int kCurPerFieldNumber = 6;
  float curper() const;
  void set_curper(float value);

  // optional uint32 curWayPointInd = 7;
  void clear_curwaypointind();
  static const int kCurWayPointIndFieldNumber = 7;
  ::google::protobuf::uint32 curwaypointind() const;
  void set_curwaypointind(::google::protobuf::uint32 value);

  // repeated uint32 wayPoint = 8;
  int waypoint_size() const;
  void clear_waypoint();
  static const int kWayPointFieldNumber = 8;
  ::google::protobuf::uint32 waypoint(int index) const;
  void set_waypoint(int index, ::google::protobuf::uint32 value);
  void add_waypoint(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      waypoint() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_waypoint();

  // optional .NetMsg.RunTargetType runTarget = 9;
  void clear_runtarget();
  static const int kRunTargetFieldNumber = 9;
  ::NetMsg::RunTargetType runtarget() const;
  void set_runtarget(::NetMsg::RunTargetType value);

  // optional uint64 targetID = 10;
  void clear_targetid();
  static const int kTargetIDFieldNumber = 10;
  ::google::protobuf::uint64 targetid() const;
  void set_targetid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:NetMsg.PathInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > waypoint_;
  mutable int _waypoint_cached_byte_size_;
  ::google::protobuf::uint32 startpath_;
  float startper_;
  ::google::protobuf::uint32 endpath_;
  float endper_;
  ::google::protobuf::uint32 curpath_;
  float curper_;
  ::google::protobuf::uint32 curwaypointind_;
  int runtarget_;
  ::google::protobuf::uint64 targetid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PathInfo> PathInfo_default_instance_;

// -------------------------------------------------------------------

class RunPathAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.RunPathAck) */ {
 public:
  RunPathAck();
  virtual ~RunPathAck();

  RunPathAck(const RunPathAck& from);

  inline RunPathAck& operator=(const RunPathAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RunPathAck& default_instance();

  static const RunPathAck* internal_default_instance();

  void Swap(RunPathAck* other);

  // implements Message ----------------------------------------------

  inline RunPathAck* New() const { return New(NULL); }

  RunPathAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RunPathAck& from);
  void MergeFrom(const RunPathAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RunPathAck* other);
  void UnsafeMergeFrom(const RunPathAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .NetMsg.PathInfo path = 1;
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::NetMsg::PathInfo& path() const;
  ::NetMsg::PathInfo* mutable_path();
  ::NetMsg::PathInfo* release_path();
  void set_allocated_path(::NetMsg::PathInfo* path);

  // optional .NetMsg.RunState state = 2;
  void clear_state();
  static const int kStateFieldNumber = 2;
  ::NetMsg::RunState state() const;
  void set_state(::NetMsg::RunState value);

  // @@protoc_insertion_point(class_scope:NetMsg.RunPathAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NetMsg::PathInfo* path_;
  int state_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RunPathAck> RunPathAck_default_instance_;

// -------------------------------------------------------------------

class SetRunPath : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.SetRunPath) */ {
 public:
  SetRunPath();
  virtual ~SetRunPath();

  SetRunPath(const SetRunPath& from);

  inline SetRunPath& operator=(const SetRunPath& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetRunPath& default_instance();

  static const SetRunPath* internal_default_instance();

  void Swap(SetRunPath* other);

  // implements Message ----------------------------------------------

  inline SetRunPath* New() const { return New(NULL); }

  SetRunPath* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetRunPath& from);
  void MergeFrom(const SetRunPath& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetRunPath* other);
  void UnsafeMergeFrom(const SetRunPath& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .NetMsg.PathInfo path = 1;
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::NetMsg::PathInfo& path() const;
  ::NetMsg::PathInfo* mutable_path();
  ::NetMsg::PathInfo* release_path();
  void set_allocated_path(::NetMsg::PathInfo* path);

  // optional .NetMsg.RunState state = 2;
  void clear_state();
  static const int kStateFieldNumber = 2;
  ::NetMsg::RunState state() const;
  void set_state(::NetMsg::RunState value);

  // @@protoc_insertion_point(class_scope:NetMsg.SetRunPath)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NetMsg::PathInfo* path_;
  int state_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SetRunPath> SetRunPath_default_instance_;

// -------------------------------------------------------------------

class ArrivedCity : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ArrivedCity) */ {
 public:
  ArrivedCity();
  virtual ~ArrivedCity();

  ArrivedCity(const ArrivedCity& from);

  inline ArrivedCity& operator=(const ArrivedCity& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArrivedCity& default_instance();

  static const ArrivedCity* internal_default_instance();

  void Swap(ArrivedCity* other);

  // implements Message ----------------------------------------------

  inline ArrivedCity* New() const { return New(NULL); }

  ArrivedCity* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArrivedCity& from);
  void MergeFrom(const ArrivedCity& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ArrivedCity* other);
  void UnsafeMergeFrom(const ArrivedCity& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 cityId = 1;
  void clear_cityid();
  static const int kCityIdFieldNumber = 1;
  ::google::protobuf::int32 cityid() const;
  void set_cityid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ArrivedCity)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 cityid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ArrivedCity> ArrivedCity_default_instance_;

// -------------------------------------------------------------------

class Formation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.Formation) */ {
 public:
  Formation();
  virtual ~Formation();

  Formation(const Formation& from);

  inline Formation& operator=(const Formation& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Formation& default_instance();

  static const Formation* internal_default_instance();

  void Swap(Formation* other);

  // implements Message ----------------------------------------------

  inline Formation* New() const { return New(NULL); }

  Formation* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Formation& from);
  void MergeFrom(const Formation& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Formation* other);
  void UnsafeMergeFrom(const Formation& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 heroId = 1;
  int heroid_size() const;
  void clear_heroid();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::uint64 heroid(int index) const;
  void set_heroid(int index, ::google::protobuf::uint64 value);
  void add_heroid(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      heroid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_heroid();

  // @@protoc_insertion_point(class_scope:NetMsg.Formation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > heroid_;
  mutable int _heroid_cached_byte_size_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Formation> Formation_default_instance_;

// -------------------------------------------------------------------

class HeroFormationAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.HeroFormationAck) */ {
 public:
  HeroFormationAck();
  virtual ~HeroFormationAck();

  HeroFormationAck(const HeroFormationAck& from);

  inline HeroFormationAck& operator=(const HeroFormationAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroFormationAck& default_instance();

  static const HeroFormationAck* internal_default_instance();

  void Swap(HeroFormationAck* other);

  // implements Message ----------------------------------------------

  inline HeroFormationAck* New() const { return New(NULL); }

  HeroFormationAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroFormationAck& from);
  void MergeFrom(const HeroFormationAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HeroFormationAck* other);
  void UnsafeMergeFrom(const HeroFormationAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .NetMsg.Formation formation = 1;
  int formation_size() const;
  void clear_formation();
  static const int kFormationFieldNumber = 1;
  const ::NetMsg::Formation& formation(int index) const;
  ::NetMsg::Formation* mutable_formation(int index);
  ::NetMsg::Formation* add_formation();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::Formation >*
      mutable_formation();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::Formation >&
      formation() const;

  // optional uint32 curFormation = 2;
  void clear_curformation();
  static const int kCurFormationFieldNumber = 2;
  ::google::protobuf::uint32 curformation() const;
  void set_curformation(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.HeroFormationAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::Formation > formation_;
  ::google::protobuf::uint32 curformation_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<HeroFormationAck> HeroFormationAck_default_instance_;

// -------------------------------------------------------------------

class SetHeroFormation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.SetHeroFormation) */ {
 public:
  SetHeroFormation();
  virtual ~SetHeroFormation();

  SetHeroFormation(const SetHeroFormation& from);

  inline SetHeroFormation& operator=(const SetHeroFormation& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetHeroFormation& default_instance();

  static const SetHeroFormation* internal_default_instance();

  void Swap(SetHeroFormation* other);

  // implements Message ----------------------------------------------

  inline SetHeroFormation* New() const { return New(NULL); }

  SetHeroFormation* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetHeroFormation& from);
  void MergeFrom(const SetHeroFormation& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetHeroFormation* other);
  void UnsafeMergeFrom(const SetHeroFormation& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .NetMsg.Formation formation = 1;
  bool has_formation() const;
  void clear_formation();
  static const int kFormationFieldNumber = 1;
  const ::NetMsg::Formation& formation() const;
  ::NetMsg::Formation* mutable_formation();
  ::NetMsg::Formation* release_formation();
  void set_allocated_formation(::NetMsg::Formation* formation);

  // optional uint32 pos = 2;
  void clear_pos();
  static const int kPosFieldNumber = 2;
  ::google::protobuf::uint32 pos() const;
  void set_pos(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.SetHeroFormation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NetMsg::Formation* formation_;
  ::google::protobuf::uint32 pos_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SetHeroFormation> SetHeroFormation_default_instance_;

// -------------------------------------------------------------------

class ReqCityInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqCityInfo) */ {
 public:
  ReqCityInfo();
  virtual ~ReqCityInfo();

  ReqCityInfo(const ReqCityInfo& from);

  inline ReqCityInfo& operator=(const ReqCityInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqCityInfo& default_instance();

  static const ReqCityInfo* internal_default_instance();

  void Swap(ReqCityInfo* other);

  // implements Message ----------------------------------------------

  inline ReqCityInfo* New() const { return New(NULL); }

  ReqCityInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqCityInfo& from);
  void MergeFrom(const ReqCityInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqCityInfo* other);
  void UnsafeMergeFrom(const ReqCityInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 cityId = 1;
  void clear_cityid();
  static const int kCityIdFieldNumber = 1;
  ::google::protobuf::uint32 cityid() const;
  void set_cityid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqCityInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 cityid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqCityInfo> ReqCityInfo_default_instance_;

// -------------------------------------------------------------------

class CityItemInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.CityItemInfo) */ {
 public:
  CityItemInfo();
  virtual ~CityItemInfo();

  CityItemInfo(const CityItemInfo& from);

  inline CityItemInfo& operator=(const CityItemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CityItemInfo& default_instance();

  static const CityItemInfo* internal_default_instance();

  void Swap(CityItemInfo* other);

  // implements Message ----------------------------------------------

  inline CityItemInfo* New() const { return New(NULL); }

  CityItemInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CityItemInfo& from);
  void MergeFrom(const CityItemInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CityItemInfo* other);
  void UnsafeMergeFrom(const CityItemInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 itemId = 1;
  void clear_itemid();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::uint32 itemid() const;
  void set_itemid(::google::protobuf::uint32 value);

  // optional uint32 itemNum = 2;
  void clear_itemnum();
  static const int kItemNumFieldNumber = 2;
  ::google::protobuf::uint32 itemnum() const;
  void set_itemnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.CityItemInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 itemnum_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CityItemInfo> CityItemInfo_default_instance_;

// -------------------------------------------------------------------

class CityHeroInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.CityHeroInfo) */ {
 public:
  CityHeroInfo();
  virtual ~CityHeroInfo();

  CityHeroInfo(const CityHeroInfo& from);

  inline CityHeroInfo& operator=(const CityHeroInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CityHeroInfo& default_instance();

  static const CityHeroInfo* internal_default_instance();

  void Swap(CityHeroInfo* other);

  // implements Message ----------------------------------------------

  inline CityHeroInfo* New() const { return New(NULL); }

  CityHeroInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CityHeroInfo& from);
  void MergeFrom(const CityHeroInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CityHeroInfo* other);
  void UnsafeMergeFrom(const CityHeroInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 heroId = 1;
  void clear_heroid();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::uint32 heroid() const;
  void set_heroid(::google::protobuf::uint32 value);

  // optional string heroName = 2;
  void clear_heroname();
  static const int kHeroNameFieldNumber = 2;
  const ::std::string& heroname() const;
  void set_heroname(const ::std::string& value);
  void set_heroname(const char* value);
  void set_heroname(const char* value, size_t size);
  ::std::string* mutable_heroname();
  ::std::string* release_heroname();
  void set_allocated_heroname(::std::string* heroname);

  // optional uint32 heroLevel = 3;
  void clear_herolevel();
  static const int kHeroLevelFieldNumber = 3;
  ::google::protobuf::uint32 herolevel() const;
  void set_herolevel(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.CityHeroInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr heroname_;
  ::google::protobuf::uint32 heroid_;
  ::google::protobuf::uint32 herolevel_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CityHeroInfo> CityHeroInfo_default_instance_;

// -------------------------------------------------------------------

class CityInfoAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.CityInfoAck) */ {
 public:
  CityInfoAck();
  virtual ~CityInfoAck();

  CityInfoAck(const CityInfoAck& from);

  inline CityInfoAck& operator=(const CityInfoAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CityInfoAck& default_instance();

  static const CityInfoAck* internal_default_instance();

  void Swap(CityInfoAck* other);

  // implements Message ----------------------------------------------

  inline CityInfoAck* New() const { return New(NULL); }

  CityInfoAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CityInfoAck& from);
  void MergeFrom(const CityInfoAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CityInfoAck* other);
  void UnsafeMergeFrom(const CityInfoAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 cityId = 1;
  void clear_cityid();
  static const int kCityIdFieldNumber = 1;
  ::google::protobuf::uint32 cityid() const;
  void set_cityid(::google::protobuf::uint32 value);

  // optional uint32 governor = 2;
  void clear_governor();
  static const int kGovernorFieldNumber = 2;
  ::google::protobuf::uint32 governor() const;
  void set_governor(::google::protobuf::uint32 value);

  // optional uint32 agriculture = 3;
  void clear_agriculture();
  static const int kAgricultureFieldNumber = 3;
  ::google::protobuf::uint32 agriculture() const;
  void set_agriculture(::google::protobuf::uint32 value);

  // optional uint32 business = 4;
  void clear_business();
  static const int kBusinessFieldNumber = 4;
  ::google::protobuf::uint32 business() const;
  void set_business(::google::protobuf::uint32 value);

  // optional uint32 military = 5;
  void clear_military();
  static const int kMilitaryFieldNumber = 5;
  ::google::protobuf::uint32 military() const;
  void set_military(::google::protobuf::uint32 value);

  // optional uint32 force = 6;
  void clear_force();
  static const int kForceFieldNumber = 6;
  ::google::protobuf::uint32 force() const;
  void set_force(::google::protobuf::uint32 value);

  // repeated uint32 heroClass = 7;
  int heroclass_size() const;
  void clear_heroclass();
  static const int kHeroClassFieldNumber = 7;
  ::google::protobuf::uint32 heroclass(int index) const;
  void set_heroclass(int index, ::google::protobuf::uint32 value);
  void add_heroclass(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      heroclass() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_heroclass();

  // optional uint32 Money = 8;
  void clear_money();
  static const int kMoneyFieldNumber = 8;
  ::google::protobuf::uint32 money() const;
  void set_money(::google::protobuf::uint32 value);

  // optional uint32 Provisions = 9;
  void clear_provisions();
  static const int kProvisionsFieldNumber = 9;
  ::google::protobuf::uint32 provisions() const;
  void set_provisions(::google::protobuf::uint32 value);

  // optional uint32 MoneyDelta = 10;
  void clear_moneydelta();
  static const int kMoneyDeltaFieldNumber = 10;
  ::google::protobuf::uint32 moneydelta() const;
  void set_moneydelta(::google::protobuf::uint32 value);

  // optional uint32 ProvisionsDelta = 11;
  void clear_provisionsdelta();
  static const int kProvisionsDeltaFieldNumber = 11;
  ::google::protobuf::uint32 provisionsdelta() const;
  void set_provisionsdelta(::google::protobuf::uint32 value);

  // optional uint32 CultureDevelopment = 12;
  void clear_culturedevelopment();
  static const int kCultureDevelopmentFieldNumber = 12;
  ::google::protobuf::uint32 culturedevelopment() const;
  void set_culturedevelopment(::google::protobuf::uint32 value);

  // optional uint32 Reserver = 13;
  void clear_reserver();
  static const int kReserverFieldNumber = 13;
  ::google::protobuf::uint32 reserver() const;
  void set_reserver(::google::protobuf::uint32 value);

  // optional uint32 Infantry = 14;
  void clear_infantry();
  static const int kInfantryFieldNumber = 14;
  ::google::protobuf::uint32 infantry() const;
  void set_infantry(::google::protobuf::uint32 value);

  // optional uint32 Archer = 15;
  void clear_archer();
  static const int kArcherFieldNumber = 15;
  ::google::protobuf::uint32 archer() const;
  void set_archer(::google::protobuf::uint32 value);

  // optional uint32 Cavalry = 16;
  void clear_cavalry();
  static const int kCavalryFieldNumber = 16;
  ::google::protobuf::uint32 cavalry() const;
  void set_cavalry(::google::protobuf::uint32 value);

  // optional uint32 SwordShield = 17;
  void clear_swordshield();
  static const int kSwordShieldFieldNumber = 17;
  ::google::protobuf::uint32 swordshield() const;
  void set_swordshield(::google::protobuf::uint32 value);

  // optional uint32 CrossbowMan = 18;
  void clear_crossbowman();
  static const int kCrossbowManFieldNumber = 18;
  ::google::protobuf::uint32 crossbowman() const;
  void set_crossbowman(::google::protobuf::uint32 value);

  // optional uint32 Elephant = 19;
  void clear_elephant();
  static const int kElephantFieldNumber = 19;
  ::google::protobuf::uint32 elephant() const;
  void set_elephant(::google::protobuf::uint32 value);

  // optional uint32 InfantryWounded = 20;
  void clear_infantrywounded();
  static const int kInfantryWoundedFieldNumber = 20;
  ::google::protobuf::uint32 infantrywounded() const;
  void set_infantrywounded(::google::protobuf::uint32 value);

  // optional uint32 ArcherWounded = 21;
  void clear_archerwounded();
  static const int kArcherWoundedFieldNumber = 21;
  ::google::protobuf::uint32 archerwounded() const;
  void set_archerwounded(::google::protobuf::uint32 value);

  // optional uint32 CavalryWounded = 22;
  void clear_cavalrywounded();
  static const int kCavalryWoundedFieldNumber = 22;
  ::google::protobuf::uint32 cavalrywounded() const;
  void set_cavalrywounded(::google::protobuf::uint32 value);

  // optional uint32 SwordShieldWounded = 23;
  void clear_swordshieldwounded();
  static const int kSwordShieldWoundedFieldNumber = 23;
  ::google::protobuf::uint32 swordshieldwounded() const;
  void set_swordshieldwounded(::google::protobuf::uint32 value);

  // optional uint32 CrossbowManWounded = 24;
  void clear_crossbowmanwounded();
  static const int kCrossbowManWoundedFieldNumber = 24;
  ::google::protobuf::uint32 crossbowmanwounded() const;
  void set_crossbowmanwounded(::google::protobuf::uint32 value);

  // optional uint32 ElephantWounded = 25;
  void clear_elephantwounded();
  static const int kElephantWoundedFieldNumber = 25;
  ::google::protobuf::uint32 elephantwounded() const;
  void set_elephantwounded(::google::protobuf::uint32 value);

  // optional uint32 Population = 26;
  void clear_population();
  static const int kPopulationFieldNumber = 26;
  ::google::protobuf::uint32 population() const;
  void set_population(::google::protobuf::uint32 value);

  // optional uint32 PopulationSpeed = 27;
  void clear_populationspeed();
  static const int kPopulationSpeedFieldNumber = 27;
  ::google::protobuf::uint32 populationspeed() const;
  void set_populationspeed(::google::protobuf::uint32 value);

  // optional uint32 Loyalty = 28;
  void clear_loyalty();
  static const int kLoyaltyFieldNumber = 28;
  ::google::protobuf::uint32 loyalty() const;
  void set_loyalty(::google::protobuf::uint32 value);

  // optional uint32 Durability = 29;
  void clear_durability();
  static const int kDurabilityFieldNumber = 29;
  ::google::protobuf::uint32 durability() const;
  void set_durability(::google::protobuf::uint32 value);

  // repeated .NetMsg.CityItemInfo itemInfo = 30;
  int iteminfo_size() const;
  void clear_iteminfo();
  static const int kItemInfoFieldNumber = 30;
  const ::NetMsg::CityItemInfo& iteminfo(int index) const;
  ::NetMsg::CityItemInfo* mutable_iteminfo(int index);
  ::NetMsg::CityItemInfo* add_iteminfo();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::CityItemInfo >*
      mutable_iteminfo();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::CityItemInfo >&
      iteminfo() const;

  // repeated .NetMsg.CityHeroInfo heroInfo = 31;
  int heroinfo_size() const;
  void clear_heroinfo();
  static const int kHeroInfoFieldNumber = 31;
  const ::NetMsg::CityHeroInfo& heroinfo(int index) const;
  ::NetMsg::CityHeroInfo* mutable_heroinfo(int index);
  ::NetMsg::CityHeroInfo* add_heroinfo();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::CityHeroInfo >*
      mutable_heroinfo();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::CityHeroInfo >&
      heroinfo() const;

  // @@protoc_insertion_point(class_scope:NetMsg.CityInfoAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > heroclass_;
  mutable int _heroclass_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::CityItemInfo > iteminfo_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::CityHeroInfo > heroinfo_;
  ::google::protobuf::uint32 cityid_;
  ::google::protobuf::uint32 governor_;
  ::google::protobuf::uint32 agriculture_;
  ::google::protobuf::uint32 business_;
  ::google::protobuf::uint32 military_;
  ::google::protobuf::uint32 force_;
  ::google::protobuf::uint32 money_;
  ::google::protobuf::uint32 provisions_;
  ::google::protobuf::uint32 moneydelta_;
  ::google::protobuf::uint32 provisionsdelta_;
  ::google::protobuf::uint32 culturedevelopment_;
  ::google::protobuf::uint32 reserver_;
  ::google::protobuf::uint32 infantry_;
  ::google::protobuf::uint32 archer_;
  ::google::protobuf::uint32 cavalry_;
  ::google::protobuf::uint32 swordshield_;
  ::google::protobuf::uint32 crossbowman_;
  ::google::protobuf::uint32 elephant_;
  ::google::protobuf::uint32 infantrywounded_;
  ::google::protobuf::uint32 archerwounded_;
  ::google::protobuf::uint32 cavalrywounded_;
  ::google::protobuf::uint32 swordshieldwounded_;
  ::google::protobuf::uint32 crossbowmanwounded_;
  ::google::protobuf::uint32 elephantwounded_;
  ::google::protobuf::uint32 population_;
  ::google::protobuf::uint32 populationspeed_;
  ::google::protobuf::uint32 loyalty_;
  ::google::protobuf::uint32 durability_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CityInfoAck> CityInfoAck_default_instance_;

// -------------------------------------------------------------------

class AwardItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.AwardItem) */ {
 public:
  AwardItem();
  virtual ~AwardItem();

  AwardItem(const AwardItem& from);

  inline AwardItem& operator=(const AwardItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AwardItem& default_instance();

  static const AwardItem* internal_default_instance();

  void Swap(AwardItem* other);

  // implements Message ----------------------------------------------

  inline AwardItem* New() const { return New(NULL); }

  AwardItem* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AwardItem& from);
  void MergeFrom(const AwardItem& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AwardItem* other);
  void UnsafeMergeFrom(const AwardItem& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // optional uint32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional uint32 num = 3;
  void clear_num();
  static const int kNumFieldNumber = 3;
  ::google::protobuf::uint32 num() const;
  void set_num(::google::protobuf::uint32 value);

  // repeated uint64 heroIds = 4;
  int heroids_size() const;
  void clear_heroids();
  static const int kHeroIdsFieldNumber = 4;
  ::google::protobuf::uint64 heroids(int index) const;
  void set_heroids(int index, ::google::protobuf::uint64 value);
  void add_heroids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      heroids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_heroids();

  // @@protoc_insertion_point(class_scope:NetMsg.AwardItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > heroids_;
  mutable int _heroids_cached_byte_size_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 num_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AwardItem> AwardItem_default_instance_;

// -------------------------------------------------------------------

class Award : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.Award) */ {
 public:
  Award();
  virtual ~Award();

  Award(const Award& from);

  inline Award& operator=(const Award& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Award& default_instance();

  static const Award* internal_default_instance();

  void Swap(Award* other);

  // implements Message ----------------------------------------------

  inline Award* New() const { return New(NULL); }

  Award* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Award& from);
  void MergeFrom(const Award& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Award* other);
  void UnsafeMergeFrom(const Award& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .NetMsg.AwardItem items = 1;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 1;
  const ::NetMsg::AwardItem& items(int index) const;
  ::NetMsg::AwardItem* mutable_items(int index);
  ::NetMsg::AwardItem* add_items();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::AwardItem >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::AwardItem >&
      items() const;

  // optional uint32 awardId = 2;
  void clear_awardid();
  static const int kAwardIdFieldNumber = 2;
  ::google::protobuf::uint32 awardid() const;
  void set_awardid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.Award)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::AwardItem > items_;
  ::google::protobuf::uint32 awardid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Award> Award_default_instance_;

// -------------------------------------------------------------------

class QuestConsAgriculture : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.QuestConsAgriculture) */ {
 public:
  QuestConsAgriculture();
  virtual ~QuestConsAgriculture();

  QuestConsAgriculture(const QuestConsAgriculture& from);

  inline QuestConsAgriculture& operator=(const QuestConsAgriculture& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestConsAgriculture& default_instance();

  static const QuestConsAgriculture* internal_default_instance();

  void Swap(QuestConsAgriculture* other);

  // implements Message ----------------------------------------------

  inline QuestConsAgriculture* New() const { return New(NULL); }

  QuestConsAgriculture* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestConsAgriculture& from);
  void MergeFrom(const QuestConsAgriculture& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QuestConsAgriculture* other);
  void UnsafeMergeFrom(const QuestConsAgriculture& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 title = 1;
  void clear_title();
  static const int kTitleFieldNumber = 1;
  ::google::protobuf::uint32 title() const;
  void set_title(::google::protobuf::uint32 value);

  // optional uint32 cityId = 2;
  void clear_cityid();
  static const int kCityIdFieldNumber = 2;
  ::google::protobuf::uint32 cityid() const;
  void set_cityid(::google::protobuf::uint32 value);

  // optional uint32 curTarget = 3;
  void clear_curtarget();
  static const int kCurTargetFieldNumber = 3;
  ::google::protobuf::uint32 curtarget() const;
  void set_curtarget(::google::protobuf::uint32 value);

  // optional uint32 target = 4;
  void clear_target();
  static const int kTargetFieldNumber = 4;
  ::google::protobuf::uint32 target() const;
  void set_target(::google::protobuf::uint32 value);

  // optional uint32 place = 5;
  void clear_place();
  static const int kPlaceFieldNumber = 5;
  ::google::protobuf::uint32 place() const;
  void set_place(::google::protobuf::uint32 value);

  // optional .NetMsg.Award award = 6;
  bool has_award() const;
  void clear_award();
  static const int kAwardFieldNumber = 6;
  const ::NetMsg::Award& award() const;
  ::NetMsg::Award* mutable_award();
  ::NetMsg::Award* release_award();
  void set_allocated_award(::NetMsg::Award* award);

  // @@protoc_insertion_point(class_scope:NetMsg.QuestConsAgriculture)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NetMsg::Award* award_;
  ::google::protobuf::uint32 title_;
  ::google::protobuf::uint32 cityid_;
  ::google::protobuf::uint32 curtarget_;
  ::google::protobuf::uint32 target_;
  ::google::protobuf::uint32 place_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<QuestConsAgriculture> QuestConsAgriculture_default_instance_;

// -------------------------------------------------------------------

class QuestConsBusiness : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.QuestConsBusiness) */ {
 public:
  QuestConsBusiness();
  virtual ~QuestConsBusiness();

  QuestConsBusiness(const QuestConsBusiness& from);

  inline QuestConsBusiness& operator=(const QuestConsBusiness& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestConsBusiness& default_instance();

  static const QuestConsBusiness* internal_default_instance();

  void Swap(QuestConsBusiness* other);

  // implements Message ----------------------------------------------

  inline QuestConsBusiness* New() const { return New(NULL); }

  QuestConsBusiness* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestConsBusiness& from);
  void MergeFrom(const QuestConsBusiness& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QuestConsBusiness* other);
  void UnsafeMergeFrom(const QuestConsBusiness& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 title = 1;
  void clear_title();
  static const int kTitleFieldNumber = 1;
  ::google::protobuf::uint32 title() const;
  void set_title(::google::protobuf::uint32 value);

  // optional uint32 cityId = 2;
  void clear_cityid();
  static const int kCityIdFieldNumber = 2;
  ::google::protobuf::uint32 cityid() const;
  void set_cityid(::google::protobuf::uint32 value);

  // optional uint32 curTarget = 3;
  void clear_curtarget();
  static const int kCurTargetFieldNumber = 3;
  ::google::protobuf::uint32 curtarget() const;
  void set_curtarget(::google::protobuf::uint32 value);

  // optional uint32 target = 4;
  void clear_target();
  static const int kTargetFieldNumber = 4;
  ::google::protobuf::uint32 target() const;
  void set_target(::google::protobuf::uint32 value);

  // optional uint32 place = 5;
  void clear_place();
  static const int kPlaceFieldNumber = 5;
  ::google::protobuf::uint32 place() const;
  void set_place(::google::protobuf::uint32 value);

  // optional .NetMsg.Award award = 6;
  bool has_award() const;
  void clear_award();
  static const int kAwardFieldNumber = 6;
  const ::NetMsg::Award& award() const;
  ::NetMsg::Award* mutable_award();
  ::NetMsg::Award* release_award();
  void set_allocated_award(::NetMsg::Award* award);

  // @@protoc_insertion_point(class_scope:NetMsg.QuestConsBusiness)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NetMsg::Award* award_;
  ::google::protobuf::uint32 title_;
  ::google::protobuf::uint32 cityid_;
  ::google::protobuf::uint32 curtarget_;
  ::google::protobuf::uint32 target_;
  ::google::protobuf::uint32 place_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<QuestConsBusiness> QuestConsBusiness_default_instance_;

// -------------------------------------------------------------------

class QuestConsMilitary : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.QuestConsMilitary) */ {
 public:
  QuestConsMilitary();
  virtual ~QuestConsMilitary();

  QuestConsMilitary(const QuestConsMilitary& from);

  inline QuestConsMilitary& operator=(const QuestConsMilitary& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestConsMilitary& default_instance();

  static const QuestConsMilitary* internal_default_instance();

  void Swap(QuestConsMilitary* other);

  // implements Message ----------------------------------------------

  inline QuestConsMilitary* New() const { return New(NULL); }

  QuestConsMilitary* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestConsMilitary& from);
  void MergeFrom(const QuestConsMilitary& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QuestConsMilitary* other);
  void UnsafeMergeFrom(const QuestConsMilitary& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 title = 1;
  void clear_title();
  static const int kTitleFieldNumber = 1;
  ::google::protobuf::uint32 title() const;
  void set_title(::google::protobuf::uint32 value);

  // optional uint32 cityId = 2;
  void clear_cityid();
  static const int kCityIdFieldNumber = 2;
  ::google::protobuf::uint32 cityid() const;
  void set_cityid(::google::protobuf::uint32 value);

  // optional uint32 curTarget = 3;
  void clear_curtarget();
  static const int kCurTargetFieldNumber = 3;
  ::google::protobuf::uint32 curtarget() const;
  void set_curtarget(::google::protobuf::uint32 value);

  // optional uint32 target = 4;
  void clear_target();
  static const int kTargetFieldNumber = 4;
  ::google::protobuf::uint32 target() const;
  void set_target(::google::protobuf::uint32 value);

  // optional uint32 place = 5;
  void clear_place();
  static const int kPlaceFieldNumber = 5;
  ::google::protobuf::uint32 place() const;
  void set_place(::google::protobuf::uint32 value);

  // optional .NetMsg.Award award = 6;
  bool has_award() const;
  void clear_award();
  static const int kAwardFieldNumber = 6;
  const ::NetMsg::Award& award() const;
  ::NetMsg::Award* mutable_award();
  ::NetMsg::Award* release_award();
  void set_allocated_award(::NetMsg::Award* award);

  // @@protoc_insertion_point(class_scope:NetMsg.QuestConsMilitary)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NetMsg::Award* award_;
  ::google::protobuf::uint32 title_;
  ::google::protobuf::uint32 cityid_;
  ::google::protobuf::uint32 curtarget_;
  ::google::protobuf::uint32 target_;
  ::google::protobuf::uint32 place_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<QuestConsMilitary> QuestConsMilitary_default_instance_;

// -------------------------------------------------------------------

class QuestBattle : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.QuestBattle) */ {
 public:
  QuestBattle();
  virtual ~QuestBattle();

  QuestBattle(const QuestBattle& from);

  inline QuestBattle& operator=(const QuestBattle& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestBattle& default_instance();

  static const QuestBattle* internal_default_instance();

  void Swap(QuestBattle* other);

  // implements Message ----------------------------------------------

  inline QuestBattle* New() const { return New(NULL); }

  QuestBattle* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestBattle& from);
  void MergeFrom(const QuestBattle& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QuestBattle* other);
  void UnsafeMergeFrom(const QuestBattle& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 enemyPath = 1;
  void clear_enemypath();
  static const int kEnemyPathFieldNumber = 1;
  ::google::protobuf::uint32 enemypath() const;
  void set_enemypath(::google::protobuf::uint32 value);

  // optional float percent = 2;
  void clear_percent();
  static const int kPercentFieldNumber = 2;
  float percent() const;
  void set_percent(float value);

  // optional uint64 battleId = 3;
  void clear_battleid();
  static const int kBattleIdFieldNumber = 3;
  ::google::protobuf::uint64 battleid() const;
  void set_battleid(::google::protobuf::uint64 value);

  // optional uint32 enemyTeam = 4;
  void clear_enemyteam();
  static const int kEnemyTeamFieldNumber = 4;
  ::google::protobuf::uint32 enemyteam() const;
  void set_enemyteam(::google::protobuf::uint32 value);

  // optional uint32 leftTime = 5;
  void clear_lefttime();
  static const int kLeftTimeFieldNumber = 5;
  ::google::protobuf::uint32 lefttime() const;
  void set_lefttime(::google::protobuf::uint32 value);

  // optional .NetMsg.Award award = 6;
  bool has_award() const;
  void clear_award();
  static const int kAwardFieldNumber = 6;
  const ::NetMsg::Award& award() const;
  ::NetMsg::Award* mutable_award();
  ::NetMsg::Award* release_award();
  void set_allocated_award(::NetMsg::Award* award);

  // @@protoc_insertion_point(class_scope:NetMsg.QuestBattle)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NetMsg::Award* award_;
  ::google::protobuf::uint32 enemypath_;
  float percent_;
  ::google::protobuf::uint64 battleid_;
  ::google::protobuf::uint32 enemyteam_;
  ::google::protobuf::uint32 lefttime_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<QuestBattle> QuestBattle_default_instance_;

// -------------------------------------------------------------------

class QuestVisit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.QuestVisit) */ {
 public:
  QuestVisit();
  virtual ~QuestVisit();

  QuestVisit(const QuestVisit& from);

  inline QuestVisit& operator=(const QuestVisit& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestVisit& default_instance();

  static const QuestVisit* internal_default_instance();

  void Swap(QuestVisit* other);

  // implements Message ----------------------------------------------

  inline QuestVisit* New() const { return New(NULL); }

  QuestVisit* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestVisit& from);
  void MergeFrom(const QuestVisit& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QuestVisit* other);
  void UnsafeMergeFrom(const QuestVisit& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 heroClass = 1;
  void clear_heroclass();
  static const int kHeroClassFieldNumber = 1;
  ::google::protobuf::uint32 heroclass() const;
  void set_heroclass(::google::protobuf::uint32 value);

  // optional uint32 city = 2;
  void clear_city();
  static const int kCityFieldNumber = 2;
  ::google::protobuf::uint32 city() const;
  void set_city(::google::protobuf::uint32 value);

  // optional uint32 place = 3;
  void clear_place();
  static const int kPlaceFieldNumber = 3;
  ::google::protobuf::uint32 place() const;
  void set_place(::google::protobuf::uint32 value);

  // optional .NetMsg.Award award = 4;
  bool has_award() const;
  void clear_award();
  static const int kAwardFieldNumber = 4;
  const ::NetMsg::Award& award() const;
  ::NetMsg::Award* mutable_award();
  ::NetMsg::Award* release_award();
  void set_allocated_award(::NetMsg::Award* award);

  // @@protoc_insertion_point(class_scope:NetMsg.QuestVisit)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NetMsg::Award* award_;
  ::google::protobuf::uint32 heroclass_;
  ::google::protobuf::uint32 city_;
  ::google::protobuf::uint32 place_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<QuestVisit> QuestVisit_default_instance_;

// -------------------------------------------------------------------

class QuestConscription : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.QuestConscription) */ {
 public:
  QuestConscription();
  virtual ~QuestConscription();

  QuestConscription(const QuestConscription& from);

  inline QuestConscription& operator=(const QuestConscription& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestConscription& default_instance();

  static const QuestConscription* internal_default_instance();

  void Swap(QuestConscription* other);

  // implements Message ----------------------------------------------

  inline QuestConscription* New() const { return New(NULL); }

  QuestConscription* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestConscription& from);
  void MergeFrom(const QuestConscription& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QuestConscription* other);
  void UnsafeMergeFrom(const QuestConscription& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 title = 1;
  void clear_title();
  static const int kTitleFieldNumber = 1;
  ::google::protobuf::uint32 title() const;
  void set_title(::google::protobuf::uint32 value);

  // optional uint32 cityId = 2;
  void clear_cityid();
  static const int kCityIdFieldNumber = 2;
  ::google::protobuf::uint32 cityid() const;
  void set_cityid(::google::protobuf::uint32 value);

  // optional uint32 curTarget = 3;
  void clear_curtarget();
  static const int kCurTargetFieldNumber = 3;
  ::google::protobuf::uint32 curtarget() const;
  void set_curtarget(::google::protobuf::uint32 value);

  // optional uint32 target = 4;
  void clear_target();
  static const int kTargetFieldNumber = 4;
  ::google::protobuf::uint32 target() const;
  void set_target(::google::protobuf::uint32 value);

  // optional uint32 place = 5;
  void clear_place();
  static const int kPlaceFieldNumber = 5;
  ::google::protobuf::uint32 place() const;
  void set_place(::google::protobuf::uint32 value);

  // optional .NetMsg.Award award = 6;
  bool has_award() const;
  void clear_award();
  static const int kAwardFieldNumber = 6;
  const ::NetMsg::Award& award() const;
  ::NetMsg::Award* mutable_award();
  ::NetMsg::Award* release_award();
  void set_allocated_award(::NetMsg::Award* award);

  // @@protoc_insertion_point(class_scope:NetMsg.QuestConscription)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NetMsg::Award* award_;
  ::google::protobuf::uint32 title_;
  ::google::protobuf::uint32 cityid_;
  ::google::protobuf::uint32 curtarget_;
  ::google::protobuf::uint32 target_;
  ::google::protobuf::uint32 place_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<QuestConscription> QuestConscription_default_instance_;

// -------------------------------------------------------------------

class QuestDiscovery : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.QuestDiscovery) */ {
 public:
  QuestDiscovery();
  virtual ~QuestDiscovery();

  QuestDiscovery(const QuestDiscovery& from);

  inline QuestDiscovery& operator=(const QuestDiscovery& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestDiscovery& default_instance();

  static const QuestDiscovery* internal_default_instance();

  void Swap(QuestDiscovery* other);

  // implements Message ----------------------------------------------

  inline QuestDiscovery* New() const { return New(NULL); }

  QuestDiscovery* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestDiscovery& from);
  void MergeFrom(const QuestDiscovery& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QuestDiscovery* other);
  void UnsafeMergeFrom(const QuestDiscovery& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 title = 1;
  void clear_title();
  static const int kTitleFieldNumber = 1;
  ::google::protobuf::uint32 title() const;
  void set_title(::google::protobuf::uint32 value);

  // optional uint32 city = 2;
  void clear_city();
  static const int kCityFieldNumber = 2;
  ::google::protobuf::uint32 city() const;
  void set_city(::google::protobuf::uint32 value);

  // optional uint32 place = 3;
  void clear_place();
  static const int kPlaceFieldNumber = 3;
  ::google::protobuf::uint32 place() const;
  void set_place(::google::protobuf::uint32 value);

  // optional uint32 enemyPath = 4;
  void clear_enemypath();
  static const int kEnemyPathFieldNumber = 4;
  ::google::protobuf::uint32 enemypath() const;
  void set_enemypath(::google::protobuf::uint32 value);

  // optional float percent = 5;
  void clear_percent();
  static const int kPercentFieldNumber = 5;
  float percent() const;
  void set_percent(float value);

  // optional .NetMsg.QuestDiscoveryFinishedType type = 6;
  void clear_type();
  static const int kTypeFieldNumber = 6;
  ::NetMsg::QuestDiscoveryFinishedType type() const;
  void set_type(::NetMsg::QuestDiscoveryFinishedType value);

  // optional uint32 item = 7;
  void clear_item();
  static const int kItemFieldNumber = 7;
  ::google::protobuf::uint32 item() const;
  void set_item(::google::protobuf::uint32 value);

  // optional uint32 hero = 8;
  void clear_hero();
  static const int kHeroFieldNumber = 8;
  ::google::protobuf::uint32 hero() const;
  void set_hero(::google::protobuf::uint32 value);

  // optional string name = 9;
  void clear_name();
  static const int kNameFieldNumber = 9;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 level = 10;
  void clear_level();
  static const int kLevelFieldNumber = 10;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // optional uint32 starLevel = 11;
  void clear_starlevel();
  static const int kStarLevelFieldNumber = 11;
  ::google::protobuf::uint32 starlevel() const;
  void set_starlevel(::google::protobuf::uint32 value);

  // optional .NetMsg.Award award = 12;
  bool has_award() const;
  void clear_award();
  static const int kAwardFieldNumber = 12;
  const ::NetMsg::Award& award() const;
  ::NetMsg::Award* mutable_award();
  ::NetMsg::Award* release_award();
  void set_allocated_award(::NetMsg::Award* award);

  // @@protoc_insertion_point(class_scope:NetMsg.QuestDiscovery)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::NetMsg::Award* award_;
  ::google::protobuf::uint32 title_;
  ::google::protobuf::uint32 city_;
  ::google::protobuf::uint32 place_;
  ::google::protobuf::uint32 enemypath_;
  float percent_;
  int type_;
  ::google::protobuf::uint32 item_;
  ::google::protobuf::uint32 hero_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 starlevel_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<QuestDiscovery> QuestDiscovery_default_instance_;

// -------------------------------------------------------------------

class QuestListAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.QuestListAck) */ {
 public:
  QuestListAck();
  virtual ~QuestListAck();

  QuestListAck(const QuestListAck& from);

  inline QuestListAck& operator=(const QuestListAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestListAck& default_instance();

  static const QuestListAck* internal_default_instance();

  void Swap(QuestListAck* other);

  // implements Message ----------------------------------------------

  inline QuestListAck* New() const { return New(NULL); }

  QuestListAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestListAck& from);
  void MergeFrom(const QuestListAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QuestListAck* other);
  void UnsafeMergeFrom(const QuestListAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 questList = 1;
  int questlist_size() const;
  void clear_questlist();
  static const int kQuestListFieldNumber = 1;
  ::google::protobuf::uint64 questlist(int index) const;
  void set_questlist(int index, ::google::protobuf::uint64 value);
  void add_questlist(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      questlist() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_questlist();

  // @@protoc_insertion_point(class_scope:NetMsg.QuestListAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > questlist_;
  mutable int _questlist_cached_byte_size_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<QuestListAck> QuestListAck_default_instance_;

// -------------------------------------------------------------------

class QuestData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.QuestData) */ {
 public:
  QuestData();
  virtual ~QuestData();

  QuestData(const QuestData& from);

  inline QuestData& operator=(const QuestData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestData& default_instance();

  enum InfoCase {
    kAgriculture = 1,
    kBusiness = 2,
    kConsMill = 3,
    kBattle = 4,
    kVisit = 5,
    kConscription = 6,
    kDiscovery = 7,
    INFO_NOT_SET = 0,
  };

  static const QuestData* internal_default_instance();

  void Swap(QuestData* other);

  // implements Message ----------------------------------------------

  inline QuestData* New() const { return New(NULL); }

  QuestData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestData& from);
  void MergeFrom(const QuestData& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QuestData* other);
  void UnsafeMergeFrom(const QuestData& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .NetMsg.QuestConsAgriculture agriculture = 1;
  bool has_agriculture() const;
  void clear_agriculture();
  static const int kAgricultureFieldNumber = 1;
  const ::NetMsg::QuestConsAgriculture& agriculture() const;
  ::NetMsg::QuestConsAgriculture* mutable_agriculture();
  ::NetMsg::QuestConsAgriculture* release_agriculture();
  void set_allocated_agriculture(::NetMsg::QuestConsAgriculture* agriculture);

  // optional .NetMsg.QuestConsBusiness business = 2;
  bool has_business() const;
  void clear_business();
  static const int kBusinessFieldNumber = 2;
  const ::NetMsg::QuestConsBusiness& business() const;
  ::NetMsg::QuestConsBusiness* mutable_business();
  ::NetMsg::QuestConsBusiness* release_business();
  void set_allocated_business(::NetMsg::QuestConsBusiness* business);

  // optional .NetMsg.QuestConsMilitary consMill = 3;
  bool has_consmill() const;
  void clear_consmill();
  static const int kConsMillFieldNumber = 3;
  const ::NetMsg::QuestConsMilitary& consmill() const;
  ::NetMsg::QuestConsMilitary* mutable_consmill();
  ::NetMsg::QuestConsMilitary* release_consmill();
  void set_allocated_consmill(::NetMsg::QuestConsMilitary* consmill);

  // optional .NetMsg.QuestBattle battle = 4;
  bool has_battle() const;
  void clear_battle();
  static const int kBattleFieldNumber = 4;
  const ::NetMsg::QuestBattle& battle() const;
  ::NetMsg::QuestBattle* mutable_battle();
  ::NetMsg::QuestBattle* release_battle();
  void set_allocated_battle(::NetMsg::QuestBattle* battle);

  // optional .NetMsg.QuestVisit visit = 5;
  bool has_visit() const;
  void clear_visit();
  static const int kVisitFieldNumber = 5;
  const ::NetMsg::QuestVisit& visit() const;
  ::NetMsg::QuestVisit* mutable_visit();
  ::NetMsg::QuestVisit* release_visit();
  void set_allocated_visit(::NetMsg::QuestVisit* visit);

  // optional .NetMsg.QuestConscription conscription = 6;
  bool has_conscription() const;
  void clear_conscription();
  static const int kConscriptionFieldNumber = 6;
  const ::NetMsg::QuestConscription& conscription() const;
  ::NetMsg::QuestConscription* mutable_conscription();
  ::NetMsg::QuestConscription* release_conscription();
  void set_allocated_conscription(::NetMsg::QuestConscription* conscription);

  // optional .NetMsg.QuestDiscovery discovery = 7;
  bool has_discovery() const;
  void clear_discovery();
  static const int kDiscoveryFieldNumber = 7;
  const ::NetMsg::QuestDiscovery& discovery() const;
  ::NetMsg::QuestDiscovery* mutable_discovery();
  ::NetMsg::QuestDiscovery* release_discovery();
  void set_allocated_discovery(::NetMsg::QuestDiscovery* discovery);

  // optional uint32 dialog = 30;
  void clear_dialog();
  static const int kDialogFieldNumber = 30;
  ::google::protobuf::uint32 dialog() const;
  void set_dialog(::google::protobuf::uint32 value);

  InfoCase info_case() const;
  // @@protoc_insertion_point(class_scope:NetMsg.QuestData)
 private:
  inline void set_has_agriculture();
  inline void set_has_business();
  inline void set_has_consmill();
  inline void set_has_battle();
  inline void set_has_visit();
  inline void set_has_conscription();
  inline void set_has_discovery();

  inline bool has_info() const;
  void clear_info();
  inline void clear_has_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 dialog_;
  union InfoUnion {
    InfoUnion() {}
    ::NetMsg::QuestConsAgriculture* agriculture_;
    ::NetMsg::QuestConsBusiness* business_;
    ::NetMsg::QuestConsMilitary* consmill_;
    ::NetMsg::QuestBattle* battle_;
    ::NetMsg::QuestVisit* visit_;
    ::NetMsg::QuestConscription* conscription_;
    ::NetMsg::QuestDiscovery* discovery_;
  } info_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<QuestData> QuestData_default_instance_;

// -------------------------------------------------------------------

class ReqQuestInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqQuestInfo) */ {
 public:
  ReqQuestInfo();
  virtual ~ReqQuestInfo();

  ReqQuestInfo(const ReqQuestInfo& from);

  inline ReqQuestInfo& operator=(const ReqQuestInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqQuestInfo& default_instance();

  static const ReqQuestInfo* internal_default_instance();

  void Swap(ReqQuestInfo* other);

  // implements Message ----------------------------------------------

  inline ReqQuestInfo* New() const { return New(NULL); }

  ReqQuestInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqQuestInfo& from);
  void MergeFrom(const ReqQuestInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqQuestInfo* other);
  void UnsafeMergeFrom(const ReqQuestInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint64 uid() const;
  void set_uid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqQuestInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 uid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqQuestInfo> ReqQuestInfo_default_instance_;

// -------------------------------------------------------------------

class QuestInfoAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.QuestInfoAck) */ {
 public:
  QuestInfoAck();
  virtual ~QuestInfoAck();

  QuestInfoAck(const QuestInfoAck& from);

  inline QuestInfoAck& operator=(const QuestInfoAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuestInfoAck& default_instance();

  static const QuestInfoAck* internal_default_instance();

  void Swap(QuestInfoAck* other);

  // implements Message ----------------------------------------------

  inline QuestInfoAck* New() const { return New(NULL); }

  QuestInfoAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuestInfoAck& from);
  void MergeFrom(const QuestInfoAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QuestInfoAck* other);
  void UnsafeMergeFrom(const QuestInfoAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint64 uid() const;
  void set_uid(::google::protobuf::uint64 value);

  // optional .NetMsg.QuestType type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::NetMsg::QuestType type() const;
  void set_type(::NetMsg::QuestType value);

  // optional .NetMsg.QuestData data = 3;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::NetMsg::QuestData& data() const;
  ::NetMsg::QuestData* mutable_data();
  ::NetMsg::QuestData* release_data();
  void set_allocated_data(::NetMsg::QuestData* data);

  // optional .NetMsg.QuestState state = 4;
  void clear_state();
  static const int kStateFieldNumber = 4;
  ::NetMsg::QuestState state() const;
  void set_state(::NetMsg::QuestState value);

  // @@protoc_insertion_point(class_scope:NetMsg.QuestInfoAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NetMsg::QuestData* data_;
  ::google::protobuf::uint64 uid_;
  int type_;
  int state_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<QuestInfoAck> QuestInfoAck_default_instance_;

// -------------------------------------------------------------------

class GiveAward : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.GiveAward) */ {
 public:
  GiveAward();
  virtual ~GiveAward();

  GiveAward(const GiveAward& from);

  inline GiveAward& operator=(const GiveAward& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GiveAward& default_instance();

  static const GiveAward* internal_default_instance();

  void Swap(GiveAward* other);

  // implements Message ----------------------------------------------

  inline GiveAward* New() const { return New(NULL); }

  GiveAward* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GiveAward& from);
  void MergeFrom(const GiveAward& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GiveAward* other);
  void UnsafeMergeFrom(const GiveAward& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .NetMsg.Award award = 1;
  bool has_award() const;
  void clear_award();
  static const int kAwardFieldNumber = 1;
  const ::NetMsg::Award& award() const;
  ::NetMsg::Award* mutable_award();
  ::NetMsg::Award* release_award();
  void set_allocated_award(::NetMsg::Award* award);

  // @@protoc_insertion_point(class_scope:NetMsg.GiveAward)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NetMsg::Award* award_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GiveAward> GiveAward_default_instance_;

// -------------------------------------------------------------------

class ReqDoQuest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqDoQuest) */ {
 public:
  ReqDoQuest();
  virtual ~ReqDoQuest();

  ReqDoQuest(const ReqDoQuest& from);

  inline ReqDoQuest& operator=(const ReqDoQuest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqDoQuest& default_instance();

  static const ReqDoQuest* internal_default_instance();

  void Swap(ReqDoQuest* other);

  // implements Message ----------------------------------------------

  inline ReqDoQuest* New() const { return New(NULL); }

  ReqDoQuest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqDoQuest& from);
  void MergeFrom(const ReqDoQuest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqDoQuest* other);
  void UnsafeMergeFrom(const ReqDoQuest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 questId = 1;
  void clear_questid();
  static const int kQuestIdFieldNumber = 1;
  ::google::protobuf::uint64 questid() const;
  void set_questid(::google::protobuf::uint64 value);

  // repeated uint64 heroIds = 2;
  int heroids_size() const;
  void clear_heroids();
  static const int kHeroIdsFieldNumber = 2;
  ::google::protobuf::uint64 heroids(int index) const;
  void set_heroids(int index, ::google::protobuf::uint64 value);
  void add_heroids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      heroids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_heroids();

  // @@protoc_insertion_point(class_scope:NetMsg.ReqDoQuest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > heroids_;
  mutable int _heroids_cached_byte_size_;
  ::google::protobuf::uint64 questid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqDoQuest> ReqDoQuest_default_instance_;

// -------------------------------------------------------------------

class DoQuestAward : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.DoQuestAward) */ {
 public:
  DoQuestAward();
  virtual ~DoQuestAward();

  DoQuestAward(const DoQuestAward& from);

  inline DoQuestAward& operator=(const DoQuestAward& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DoQuestAward& default_instance();

  static const DoQuestAward* internal_default_instance();

  void Swap(DoQuestAward* other);

  // implements Message ----------------------------------------------

  inline DoQuestAward* New() const { return New(NULL); }

  DoQuestAward* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DoQuestAward& from);
  void MergeFrom(const DoQuestAward& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DoQuestAward* other);
  void UnsafeMergeFrom(const DoQuestAward& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 heroId = 1;
  void clear_heroid();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::uint64 heroid() const;
  void set_heroid(::google::protobuf::uint64 value);

  // repeated uint32 awardType = 2;
  int awardtype_size() const;
  void clear_awardtype();
  static const int kAwardTypeFieldNumber = 2;
  ::google::protobuf::uint32 awardtype(int index) const;
  void set_awardtype(int index, ::google::protobuf::uint32 value);
  void add_awardtype(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      awardtype() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_awardtype();

  // repeated uint32 awardnum = 3;
  int awardnum_size() const;
  void clear_awardnum();
  static const int kAwardnumFieldNumber = 3;
  ::google::protobuf::uint32 awardnum(int index) const;
  void set_awardnum(int index, ::google::protobuf::uint32 value);
  void add_awardnum(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      awardnum() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_awardnum();

  // @@protoc_insertion_point(class_scope:NetMsg.DoQuestAward)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > awardtype_;
  mutable int _awardtype_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > awardnum_;
  mutable int _awardnum_cached_byte_size_;
  ::google::protobuf::uint64 heroid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DoQuestAward> DoQuestAward_default_instance_;

// -------------------------------------------------------------------

class DoQuestAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.DoQuestAck) */ {
 public:
  DoQuestAck();
  virtual ~DoQuestAck();

  DoQuestAck(const DoQuestAck& from);

  inline DoQuestAck& operator=(const DoQuestAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DoQuestAck& default_instance();

  static const DoQuestAck* internal_default_instance();

  void Swap(DoQuestAck* other);

  // implements Message ----------------------------------------------

  inline DoQuestAck* New() const { return New(NULL); }

  DoQuestAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DoQuestAck& from);
  void MergeFrom(const DoQuestAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DoQuestAck* other);
  void UnsafeMergeFrom(const DoQuestAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 questId = 1;
  void clear_questid();
  static const int kQuestIdFieldNumber = 1;
  ::google::protobuf::uint64 questid() const;
  void set_questid(::google::protobuf::uint64 value);

  // optional uint32 error = 2;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // optional uint32 effect = 3;
  void clear_effect();
  static const int kEffectFieldNumber = 3;
  ::google::protobuf::uint32 effect() const;
  void set_effect(::google::protobuf::uint32 value);

  // repeated .NetMsg.DoQuestAward award = 4;
  int award_size() const;
  void clear_award();
  static const int kAwardFieldNumber = 4;
  const ::NetMsg::DoQuestAward& award(int index) const;
  ::NetMsg::DoQuestAward* mutable_award(int index);
  ::NetMsg::DoQuestAward* add_award();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::DoQuestAward >*
      mutable_award();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::DoQuestAward >&
      award() const;

  // @@protoc_insertion_point(class_scope:NetMsg.DoQuestAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::DoQuestAward > award_;
  ::google::protobuf::uint64 questid_;
  ::google::protobuf::uint32 error_;
  ::google::protobuf::uint32 effect_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DoQuestAck> DoQuestAck_default_instance_;

// -------------------------------------------------------------------

class ReqSubmitQuest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqSubmitQuest) */ {
 public:
  ReqSubmitQuest();
  virtual ~ReqSubmitQuest();

  ReqSubmitQuest(const ReqSubmitQuest& from);

  inline ReqSubmitQuest& operator=(const ReqSubmitQuest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqSubmitQuest& default_instance();

  static const ReqSubmitQuest* internal_default_instance();

  void Swap(ReqSubmitQuest* other);

  // implements Message ----------------------------------------------

  inline ReqSubmitQuest* New() const { return New(NULL); }

  ReqSubmitQuest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqSubmitQuest& from);
  void MergeFrom(const ReqSubmitQuest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqSubmitQuest* other);
  void UnsafeMergeFrom(const ReqSubmitQuest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 questId = 1;
  void clear_questid();
  static const int kQuestIdFieldNumber = 1;
  ::google::protobuf::uint64 questid() const;
  void set_questid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqSubmitQuest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 questid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqSubmitQuest> ReqSubmitQuest_default_instance_;

// -------------------------------------------------------------------

class SubmitQuestAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.SubmitQuestAck) */ {
 public:
  SubmitQuestAck();
  virtual ~SubmitQuestAck();

  SubmitQuestAck(const SubmitQuestAck& from);

  inline SubmitQuestAck& operator=(const SubmitQuestAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SubmitQuestAck& default_instance();

  static const SubmitQuestAck* internal_default_instance();

  void Swap(SubmitQuestAck* other);

  // implements Message ----------------------------------------------

  inline SubmitQuestAck* New() const { return New(NULL); }

  SubmitQuestAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SubmitQuestAck& from);
  void MergeFrom(const SubmitQuestAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SubmitQuestAck* other);
  void UnsafeMergeFrom(const SubmitQuestAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 error = 1;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // optional uint64 questId = 2;
  void clear_questid();
  static const int kQuestIdFieldNumber = 2;
  ::google::protobuf::uint64 questid() const;
  void set_questid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:NetMsg.SubmitQuestAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 questid_;
  ::google::protobuf::uint32 error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SubmitQuestAck> SubmitQuestAck_default_instance_;

// -------------------------------------------------------------------

class ReqAcceptQuest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqAcceptQuest) */ {
 public:
  ReqAcceptQuest();
  virtual ~ReqAcceptQuest();

  ReqAcceptQuest(const ReqAcceptQuest& from);

  inline ReqAcceptQuest& operator=(const ReqAcceptQuest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqAcceptQuest& default_instance();

  static const ReqAcceptQuest* internal_default_instance();

  void Swap(ReqAcceptQuest* other);

  // implements Message ----------------------------------------------

  inline ReqAcceptQuest* New() const { return New(NULL); }

  ReqAcceptQuest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqAcceptQuest& from);
  void MergeFrom(const ReqAcceptQuest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqAcceptQuest* other);
  void UnsafeMergeFrom(const ReqAcceptQuest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 questId = 1;
  void clear_questid();
  static const int kQuestIdFieldNumber = 1;
  ::google::protobuf::uint64 questid() const;
  void set_questid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqAcceptQuest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 questid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqAcceptQuest> ReqAcceptQuest_default_instance_;

// -------------------------------------------------------------------

class AcceptQuestAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.AcceptQuestAck) */ {
 public:
  AcceptQuestAck();
  virtual ~AcceptQuestAck();

  AcceptQuestAck(const AcceptQuestAck& from);

  inline AcceptQuestAck& operator=(const AcceptQuestAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AcceptQuestAck& default_instance();

  static const AcceptQuestAck* internal_default_instance();

  void Swap(AcceptQuestAck* other);

  // implements Message ----------------------------------------------

  inline AcceptQuestAck* New() const { return New(NULL); }

  AcceptQuestAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AcceptQuestAck& from);
  void MergeFrom(const AcceptQuestAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AcceptQuestAck* other);
  void UnsafeMergeFrom(const AcceptQuestAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 error = 1;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // optional uint64 questId = 2;
  void clear_questid();
  static const int kQuestIdFieldNumber = 2;
  ::google::protobuf::uint64 questid() const;
  void set_questid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:NetMsg.AcceptQuestAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 questid_;
  ::google::protobuf::uint32 error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AcceptQuestAck> AcceptQuestAck_default_instance_;

// -------------------------------------------------------------------

class ReqAddHero : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqAddHero) */ {
 public:
  ReqAddHero();
  virtual ~ReqAddHero();

  ReqAddHero(const ReqAddHero& from);

  inline ReqAddHero& operator=(const ReqAddHero& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqAddHero& default_instance();

  static const ReqAddHero* internal_default_instance();

  void Swap(ReqAddHero* other);

  // implements Message ----------------------------------------------

  inline ReqAddHero* New() const { return New(NULL); }

  ReqAddHero* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqAddHero& from);
  void MergeFrom(const ReqAddHero& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqAddHero* other);
  void UnsafeMergeFrom(const ReqAddHero& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 heroId = 1;
  void clear_heroid();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::uint32 heroid() const;
  void set_heroid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqAddHero)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 heroid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqAddHero> ReqAddHero_default_instance_;

// -------------------------------------------------------------------

class AddHeroAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.AddHeroAck) */ {
 public:
  AddHeroAck();
  virtual ~AddHeroAck();

  AddHeroAck(const AddHeroAck& from);

  inline AddHeroAck& operator=(const AddHeroAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddHeroAck& default_instance();

  static const AddHeroAck* internal_default_instance();

  void Swap(AddHeroAck* other);

  // implements Message ----------------------------------------------

  inline AddHeroAck* New() const { return New(NULL); }

  AddHeroAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddHeroAck& from);
  void MergeFrom(const AddHeroAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AddHeroAck* other);
  void UnsafeMergeFrom(const AddHeroAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 error = 1;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // optional uint32 heroId = 2;
  void clear_heroid();
  static const int kHeroIdFieldNumber = 2;
  ::google::protobuf::uint32 heroid() const;
  void set_heroid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.AddHeroAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 error_;
  ::google::protobuf::uint32 heroid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AddHeroAck> AddHeroAck_default_instance_;

// -------------------------------------------------------------------

class ReqClearHeroCD : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqClearHeroCD) */ {
 public:
  ReqClearHeroCD();
  virtual ~ReqClearHeroCD();

  ReqClearHeroCD(const ReqClearHeroCD& from);

  inline ReqClearHeroCD& operator=(const ReqClearHeroCD& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqClearHeroCD& default_instance();

  static const ReqClearHeroCD* internal_default_instance();

  void Swap(ReqClearHeroCD* other);

  // implements Message ----------------------------------------------

  inline ReqClearHeroCD* New() const { return New(NULL); }

  ReqClearHeroCD* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqClearHeroCD& from);
  void MergeFrom(const ReqClearHeroCD& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqClearHeroCD* other);
  void UnsafeMergeFrom(const ReqClearHeroCD& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 heroId = 1;
  void clear_heroid();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::uint64 heroid() const;
  void set_heroid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqClearHeroCD)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 heroid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqClearHeroCD> ReqClearHeroCD_default_instance_;

// -------------------------------------------------------------------

class ClearHeroCDAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ClearHeroCDAck) */ {
 public:
  ClearHeroCDAck();
  virtual ~ClearHeroCDAck();

  ClearHeroCDAck(const ClearHeroCDAck& from);

  inline ClearHeroCDAck& operator=(const ClearHeroCDAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClearHeroCDAck& default_instance();

  static const ClearHeroCDAck* internal_default_instance();

  void Swap(ClearHeroCDAck* other);

  // implements Message ----------------------------------------------

  inline ClearHeroCDAck* New() const { return New(NULL); }

  ClearHeroCDAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClearHeroCDAck& from);
  void MergeFrom(const ClearHeroCDAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClearHeroCDAck* other);
  void UnsafeMergeFrom(const ClearHeroCDAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 error = 1;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // optional uint64 heroId = 2;
  void clear_heroid();
  static const int kHeroIdFieldNumber = 2;
  ::google::protobuf::uint64 heroid() const;
  void set_heroid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ClearHeroCDAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 heroid_;
  ::google::protobuf::uint32 error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ClearHeroCDAck> ClearHeroCDAck_default_instance_;

// -------------------------------------------------------------------

class RefreshQuestAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.RefreshQuestAck) */ {
 public:
  RefreshQuestAck();
  virtual ~RefreshQuestAck();

  RefreshQuestAck(const RefreshQuestAck& from);

  inline RefreshQuestAck& operator=(const RefreshQuestAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RefreshQuestAck& default_instance();

  static const RefreshQuestAck* internal_default_instance();

  void Swap(RefreshQuestAck* other);

  // implements Message ----------------------------------------------

  inline RefreshQuestAck* New() const { return New(NULL); }

  RefreshQuestAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RefreshQuestAck& from);
  void MergeFrom(const RefreshQuestAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RefreshQuestAck* other);
  void UnsafeMergeFrom(const RefreshQuestAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool success = 1;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:NetMsg.RefreshQuestAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool success_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RefreshQuestAck> RefreshQuestAck_default_instance_;

// -------------------------------------------------------------------

class BattleEnemy : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.BattleEnemy) */ {
 public:
  BattleEnemy();
  virtual ~BattleEnemy();

  BattleEnemy(const BattleEnemy& from);

  inline BattleEnemy& operator=(const BattleEnemy& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleEnemy& default_instance();

  static const BattleEnemy* internal_default_instance();

  void Swap(BattleEnemy* other);

  // implements Message ----------------------------------------------

  inline BattleEnemy* New() const { return New(NULL); }

  BattleEnemy* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleEnemy& from);
  void MergeFrom(const BattleEnemy& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BattleEnemy* other);
  void UnsafeMergeFrom(const BattleEnemy& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional uint32 star = 2;
  void clear_star();
  static const int kStarFieldNumber = 2;
  ::google::protobuf::uint32 star() const;
  void set_star(::google::protobuf::uint32 value);

  // optional uint32 promotion = 3;
  void clear_promotion();
  static const int kPromotionFieldNumber = 3;
  ::google::protobuf::uint32 promotion() const;
  void set_promotion(::google::protobuf::uint32 value);

  // optional uint32 level = 4;
  void clear_level();
  static const int kLevelFieldNumber = 4;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // optional uint32 formation = 5;
  void clear_formation();
  static const int kFormationFieldNumber = 5;
  ::google::protobuf::uint32 formation() const;
  void set_formation(::google::protobuf::uint32 value);

  // repeated uint32 skill = 6;
  int skill_size() const;
  void clear_skill();
  static const int kSkillFieldNumber = 6;
  ::google::protobuf::uint32 skill(int index) const;
  void set_skill(int index, ::google::protobuf::uint32 value);
  void add_skill(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      skill() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_skill();

  // repeated uint32 skillLevel = 7;
  int skilllevel_size() const;
  void clear_skilllevel();
  static const int kSkillLevelFieldNumber = 7;
  ::google::protobuf::uint32 skilllevel(int index) const;
  void set_skilllevel(int index, ::google::protobuf::uint32 value);
  void add_skilllevel(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      skilllevel() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_skilllevel();

  // optional float heroHp = 8;
  void clear_herohp();
  static const int kHeroHpFieldNumber = 8;
  float herohp() const;
  void set_herohp(float value);

  // optional float soldierHp = 9;
  void clear_soldierhp();
  static const int kSoldierHpFieldNumber = 9;
  float soldierhp() const;
  void set_soldierhp(float value);

  // @@protoc_insertion_point(class_scope:NetMsg.BattleEnemy)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skill_;
  mutable int _skill_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > skilllevel_;
  mutable int _skilllevel_cached_byte_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 star_;
  ::google::protobuf::uint32 promotion_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 formation_;
  float herohp_;
  float soldierhp_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BattleEnemy> BattleEnemy_default_instance_;

// -------------------------------------------------------------------

class ReqBattle : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqBattle) */ {
 public:
  ReqBattle();
  virtual ~ReqBattle();

  ReqBattle(const ReqBattle& from);

  inline ReqBattle& operator=(const ReqBattle& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqBattle& default_instance();

  static const ReqBattle* internal_default_instance();

  void Swap(ReqBattle* other);

  // implements Message ----------------------------------------------

  inline ReqBattle* New() const { return New(NULL); }

  ReqBattle* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqBattle& from);
  void MergeFrom(const ReqBattle& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqBattle* other);
  void UnsafeMergeFrom(const ReqBattle& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 battleId = 1;
  void clear_battleid();
  static const int kBattleIdFieldNumber = 1;
  ::google::protobuf::uint64 battleid() const;
  void set_battleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqBattle)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 battleid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqBattle> ReqBattle_default_instance_;

// -------------------------------------------------------------------

class BattleAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.BattleAck) */ {
 public:
  BattleAck();
  virtual ~BattleAck();

  BattleAck(const BattleAck& from);

  inline BattleAck& operator=(const BattleAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleAck& default_instance();

  static const BattleAck* internal_default_instance();

  void Swap(BattleAck* other);

  // implements Message ----------------------------------------------

  inline BattleAck* New() const { return New(NULL); }

  BattleAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleAck& from);
  void MergeFrom(const BattleAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BattleAck* other);
  void UnsafeMergeFrom(const BattleAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 battleId = 1;
  void clear_battleid();
  static const int kBattleIdFieldNumber = 1;
  ::google::protobuf::uint64 battleid() const;
  void set_battleid(::google::protobuf::uint64 value);

  // repeated .NetMsg.BattleEnemy enemys = 2;
  int enemys_size() const;
  void clear_enemys();
  static const int kEnemysFieldNumber = 2;
  const ::NetMsg::BattleEnemy& enemys(int index) const;
  ::NetMsg::BattleEnemy* mutable_enemys(int index);
  ::NetMsg::BattleEnemy* add_enemys();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::BattleEnemy >*
      mutable_enemys();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::BattleEnemy >&
      enemys() const;

  // optional uint32 teamId = 3;
  void clear_teamid();
  static const int kTeamIdFieldNumber = 3;
  ::google::protobuf::uint32 teamid() const;
  void set_teamid(::google::protobuf::uint32 value);

  // optional uint32 error = 4;
  void clear_error();
  static const int kErrorFieldNumber = 4;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.BattleAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::BattleEnemy > enemys_;
  ::google::protobuf::uint64 battleid_;
  ::google::protobuf::uint32 teamid_;
  ::google::protobuf::uint32 error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BattleAck> BattleAck_default_instance_;

// -------------------------------------------------------------------

class ReqPrepareBattle : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqPrepareBattle) */ {
 public:
  ReqPrepareBattle();
  virtual ~ReqPrepareBattle();

  ReqPrepareBattle(const ReqPrepareBattle& from);

  inline ReqPrepareBattle& operator=(const ReqPrepareBattle& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqPrepareBattle& default_instance();

  static const ReqPrepareBattle* internal_default_instance();

  void Swap(ReqPrepareBattle* other);

  // implements Message ----------------------------------------------

  inline ReqPrepareBattle* New() const { return New(NULL); }

  ReqPrepareBattle* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqPrepareBattle& from);
  void MergeFrom(const ReqPrepareBattle& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqPrepareBattle* other);
  void UnsafeMergeFrom(const ReqPrepareBattle& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 enemyTeam = 1;
  void clear_enemyteam();
  static const int kEnemyTeamFieldNumber = 1;
  ::google::protobuf::uint32 enemyteam() const;
  void set_enemyteam(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqPrepareBattle)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 enemyteam_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqPrepareBattle> ReqPrepareBattle_default_instance_;

// -------------------------------------------------------------------

class PrepareBattleAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.PrepareBattleAck) */ {
 public:
  PrepareBattleAck();
  virtual ~PrepareBattleAck();

  PrepareBattleAck(const PrepareBattleAck& from);

  inline PrepareBattleAck& operator=(const PrepareBattleAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PrepareBattleAck& default_instance();

  static const PrepareBattleAck* internal_default_instance();

  void Swap(PrepareBattleAck* other);

  // implements Message ----------------------------------------------

  inline PrepareBattleAck* New() const { return New(NULL); }

  PrepareBattleAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrepareBattleAck& from);
  void MergeFrom(const PrepareBattleAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PrepareBattleAck* other);
  void UnsafeMergeFrom(const PrepareBattleAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 battleId = 1;
  void clear_battleid();
  static const int kBattleIdFieldNumber = 1;
  ::google::protobuf::uint64 battleid() const;
  void set_battleid(::google::protobuf::uint64 value);

  // repeated .NetMsg.BattleEnemy enemys = 2;
  int enemys_size() const;
  void clear_enemys();
  static const int kEnemysFieldNumber = 2;
  const ::NetMsg::BattleEnemy& enemys(int index) const;
  ::NetMsg::BattleEnemy* mutable_enemys(int index);
  ::NetMsg::BattleEnemy* add_enemys();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::BattleEnemy >*
      mutable_enemys();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::BattleEnemy >&
      enemys() const;

  // @@protoc_insertion_point(class_scope:NetMsg.PrepareBattleAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::BattleEnemy > enemys_;
  ::google::protobuf::uint64 battleid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PrepareBattleAck> PrepareBattleAck_default_instance_;

// -------------------------------------------------------------------

class RecoverBattle : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.RecoverBattle) */ {
 public:
  RecoverBattle();
  virtual ~RecoverBattle();

  RecoverBattle(const RecoverBattle& from);

  inline RecoverBattle& operator=(const RecoverBattle& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RecoverBattle& default_instance();

  static const RecoverBattle* internal_default_instance();

  void Swap(RecoverBattle* other);

  // implements Message ----------------------------------------------

  inline RecoverBattle* New() const { return New(NULL); }

  RecoverBattle* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RecoverBattle& from);
  void MergeFrom(const RecoverBattle& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RecoverBattle* other);
  void UnsafeMergeFrom(const RecoverBattle& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 battleId = 1;
  void clear_battleid();
  static const int kBattleIdFieldNumber = 1;
  ::google::protobuf::uint64 battleid() const;
  void set_battleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:NetMsg.RecoverBattle)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 battleid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RecoverBattle> RecoverBattle_default_instance_;

// -------------------------------------------------------------------

class ReqBattleEnd : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqBattleEnd) */ {
 public:
  ReqBattleEnd();
  virtual ~ReqBattleEnd();

  ReqBattleEnd(const ReqBattleEnd& from);

  inline ReqBattleEnd& operator=(const ReqBattleEnd& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqBattleEnd& default_instance();

  static const ReqBattleEnd* internal_default_instance();

  void Swap(ReqBattleEnd* other);

  // implements Message ----------------------------------------------

  inline ReqBattleEnd* New() const { return New(NULL); }

  ReqBattleEnd* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqBattleEnd& from);
  void MergeFrom(const ReqBattleEnd& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqBattleEnd* other);
  void UnsafeMergeFrom(const ReqBattleEnd& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 battleId = 1;
  void clear_battleid();
  static const int kBattleIdFieldNumber = 1;
  ::google::protobuf::uint64 battleid() const;
  void set_battleid(::google::protobuf::uint64 value);

  // optional bool victory = 2;
  void clear_victory();
  static const int kVictoryFieldNumber = 2;
  bool victory() const;
  void set_victory(bool value);

  // repeated .NetMsg.BattleEnemy enemys = 3;
  int enemys_size() const;
  void clear_enemys();
  static const int kEnemysFieldNumber = 3;
  const ::NetMsg::BattleEnemy& enemys(int index) const;
  ::NetMsg::BattleEnemy* mutable_enemys(int index);
  ::NetMsg::BattleEnemy* add_enemys();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::BattleEnemy >*
      mutable_enemys();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::BattleEnemy >&
      enemys() const;

  // @@protoc_insertion_point(class_scope:NetMsg.ReqBattleEnd)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::BattleEnemy > enemys_;
  ::google::protobuf::uint64 battleid_;
  bool victory_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqBattleEnd> ReqBattleEnd_default_instance_;

// -------------------------------------------------------------------

class BattleEndAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.BattleEndAck) */ {
 public:
  BattleEndAck();
  virtual ~BattleEndAck();

  BattleEndAck(const BattleEndAck& from);

  inline BattleEndAck& operator=(const BattleEndAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleEndAck& default_instance();

  static const BattleEndAck* internal_default_instance();

  void Swap(BattleEndAck* other);

  // implements Message ----------------------------------------------

  inline BattleEndAck* New() const { return New(NULL); }

  BattleEndAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleEndAck& from);
  void MergeFrom(const BattleEndAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BattleEndAck* other);
  void UnsafeMergeFrom(const BattleEndAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 battleId = 1;
  void clear_battleid();
  static const int kBattleIdFieldNumber = 1;
  ::google::protobuf::uint64 battleid() const;
  void set_battleid(::google::protobuf::uint64 value);

  // optional bool victory = 2;
  void clear_victory();
  static const int kVictoryFieldNumber = 2;
  bool victory() const;
  void set_victory(bool value);

  // @@protoc_insertion_point(class_scope:NetMsg.BattleEndAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 battleid_;
  bool victory_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BattleEndAck> BattleEndAck_default_instance_;

// -------------------------------------------------------------------

class ReqHeroUseItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqHeroUseItem) */ {
 public:
  ReqHeroUseItem();
  virtual ~ReqHeroUseItem();

  ReqHeroUseItem(const ReqHeroUseItem& from);

  inline ReqHeroUseItem& operator=(const ReqHeroUseItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqHeroUseItem& default_instance();

  static const ReqHeroUseItem* internal_default_instance();

  void Swap(ReqHeroUseItem* other);

  // implements Message ----------------------------------------------

  inline ReqHeroUseItem* New() const { return New(NULL); }

  ReqHeroUseItem* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqHeroUseItem& from);
  void MergeFrom(const ReqHeroUseItem& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqHeroUseItem* other);
  void UnsafeMergeFrom(const ReqHeroUseItem& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 heroId = 1;
  void clear_heroid();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::uint64 heroid() const;
  void set_heroid(::google::protobuf::uint64 value);

  // optional uint64 itemId = 2;
  void clear_itemid();
  static const int kItemIdFieldNumber = 2;
  ::google::protobuf::uint64 itemid() const;
  void set_itemid(::google::protobuf::uint64 value);

  // optional uint32 num = 3;
  void clear_num();
  static const int kNumFieldNumber = 3;
  ::google::protobuf::uint32 num() const;
  void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqHeroUseItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 heroid_;
  ::google::protobuf::uint64 itemid_;
  ::google::protobuf::uint32 num_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqHeroUseItem> ReqHeroUseItem_default_instance_;

// -------------------------------------------------------------------

class HeroUserItemAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.HeroUserItemAck) */ {
 public:
  HeroUserItemAck();
  virtual ~HeroUserItemAck();

  HeroUserItemAck(const HeroUserItemAck& from);

  inline HeroUserItemAck& operator=(const HeroUserItemAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroUserItemAck& default_instance();

  static const HeroUserItemAck* internal_default_instance();

  void Swap(HeroUserItemAck* other);

  // implements Message ----------------------------------------------

  inline HeroUserItemAck* New() const { return New(NULL); }

  HeroUserItemAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroUserItemAck& from);
  void MergeFrom(const HeroUserItemAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HeroUserItemAck* other);
  void UnsafeMergeFrom(const HeroUserItemAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 heroId = 1;
  void clear_heroid();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::uint64 heroid() const;
  void set_heroid(::google::protobuf::uint64 value);

  // optional uint32 error = 2;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.HeroUserItemAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 heroid_;
  ::google::protobuf::uint32 error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<HeroUserItemAck> HeroUserItemAck_default_instance_;

// -------------------------------------------------------------------

class ReqUseItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqUseItem) */ {
 public:
  ReqUseItem();
  virtual ~ReqUseItem();

  ReqUseItem(const ReqUseItem& from);

  inline ReqUseItem& operator=(const ReqUseItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqUseItem& default_instance();

  static const ReqUseItem* internal_default_instance();

  void Swap(ReqUseItem* other);

  // implements Message ----------------------------------------------

  inline ReqUseItem* New() const { return New(NULL); }

  ReqUseItem* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqUseItem& from);
  void MergeFrom(const ReqUseItem& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqUseItem* other);
  void UnsafeMergeFrom(const ReqUseItem& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 itemId = 1;
  void clear_itemid();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::uint64 itemid() const;
  void set_itemid(::google::protobuf::uint64 value);

  // optional uint32 num = 2;
  void clear_num();
  static const int kNumFieldNumber = 2;
  ::google::protobuf::uint32 num() const;
  void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqUseItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 itemid_;
  ::google::protobuf::uint32 num_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqUseItem> ReqUseItem_default_instance_;

// -------------------------------------------------------------------

class UseItemAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.UseItemAck) */ {
 public:
  UseItemAck();
  virtual ~UseItemAck();

  UseItemAck(const UseItemAck& from);

  inline UseItemAck& operator=(const UseItemAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UseItemAck& default_instance();

  static const UseItemAck* internal_default_instance();

  void Swap(UseItemAck* other);

  // implements Message ----------------------------------------------

  inline UseItemAck* New() const { return New(NULL); }

  UseItemAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UseItemAck& from);
  void MergeFrom(const UseItemAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UseItemAck* other);
  void UnsafeMergeFrom(const UseItemAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 itemId = 1;
  void clear_itemid();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::uint64 itemid() const;
  void set_itemid(::google::protobuf::uint64 value);

  // optional uint32 error = 2;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.UseItemAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 itemid_;
  ::google::protobuf::uint32 error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UseItemAck> UseItemAck_default_instance_;

// -------------------------------------------------------------------

class ReqAddItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqAddItem) */ {
 public:
  ReqAddItem();
  virtual ~ReqAddItem();

  ReqAddItem(const ReqAddItem& from);

  inline ReqAddItem& operator=(const ReqAddItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqAddItem& default_instance();

  static const ReqAddItem* internal_default_instance();

  void Swap(ReqAddItem* other);

  // implements Message ----------------------------------------------

  inline ReqAddItem* New() const { return New(NULL); }

  ReqAddItem* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqAddItem& from);
  void MergeFrom(const ReqAddItem& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqAddItem* other);
  void UnsafeMergeFrom(const ReqAddItem& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 itemId = 1;
  void clear_itemid();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::uint32 itemid() const;
  void set_itemid(::google::protobuf::uint32 value);

  // optional uint32 num = 2;
  void clear_num();
  static const int kNumFieldNumber = 2;
  ::google::protobuf::uint32 num() const;
  void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqAddItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 num_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqAddItem> ReqAddItem_default_instance_;

// -------------------------------------------------------------------

class AddItemAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.AddItemAck) */ {
 public:
  AddItemAck();
  virtual ~AddItemAck();

  AddItemAck(const AddItemAck& from);

  inline AddItemAck& operator=(const AddItemAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddItemAck& default_instance();

  static const AddItemAck* internal_default_instance();

  void Swap(AddItemAck* other);

  // implements Message ----------------------------------------------

  inline AddItemAck* New() const { return New(NULL); }

  AddItemAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddItemAck& from);
  void MergeFrom(const AddItemAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AddItemAck* other);
  void UnsafeMergeFrom(const AddItemAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 itemId = 1;
  void clear_itemid();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::uint32 itemid() const;
  void set_itemid(::google::protobuf::uint32 value);

  // optional uint32 error = 2;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.AddItemAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AddItemAck> AddItemAck_default_instance_;

// -------------------------------------------------------------------

class AdvantureContinuousBattle : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.AdvantureContinuousBattle) */ {
 public:
  AdvantureContinuousBattle();
  virtual ~AdvantureContinuousBattle();

  AdvantureContinuousBattle(const AdvantureContinuousBattle& from);

  inline AdvantureContinuousBattle& operator=(const AdvantureContinuousBattle& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AdvantureContinuousBattle& default_instance();

  static const AdvantureContinuousBattle* internal_default_instance();

  void Swap(AdvantureContinuousBattle* other);

  // implements Message ----------------------------------------------

  inline AdvantureContinuousBattle* New() const { return New(NULL); }

  AdvantureContinuousBattle* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AdvantureContinuousBattle& from);
  void MergeFrom(const AdvantureContinuousBattle& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AdvantureContinuousBattle* other);
  void UnsafeMergeFrom(const AdvantureContinuousBattle& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 enemyPath = 1;
  void clear_enemypath();
  static const int kEnemyPathFieldNumber = 1;
  ::google::protobuf::uint32 enemypath() const;
  void set_enemypath(::google::protobuf::uint32 value);

  // optional float percent = 2;
  void clear_percent();
  static const int kPercentFieldNumber = 2;
  float percent() const;
  void set_percent(float value);

  // optional uint64 battleId = 3;
  void clear_battleid();
  static const int kBattleIdFieldNumber = 3;
  ::google::protobuf::uint64 battleid() const;
  void set_battleid(::google::protobuf::uint64 value);

  // optional uint32 enemyTeam = 4;
  void clear_enemyteam();
  static const int kEnemyTeamFieldNumber = 4;
  ::google::protobuf::uint32 enemyteam() const;
  void set_enemyteam(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.AdvantureContinuousBattle)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 enemypath_;
  float percent_;
  ::google::protobuf::uint64 battleid_;
  ::google::protobuf::uint32 enemyteam_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AdvantureContinuousBattle> AdvantureContinuousBattle_default_instance_;

// -------------------------------------------------------------------

class AdvantureEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.AdvantureEvent) */ {
 public:
  AdvantureEvent();
  virtual ~AdvantureEvent();

  AdvantureEvent(const AdvantureEvent& from);

  inline AdvantureEvent& operator=(const AdvantureEvent& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AdvantureEvent& default_instance();

  static const AdvantureEvent* internal_default_instance();

  void Swap(AdvantureEvent* other);

  // implements Message ----------------------------------------------

  inline AdvantureEvent* New() const { return New(NULL); }

  AdvantureEvent* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AdvantureEvent& from);
  void MergeFrom(const AdvantureEvent& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AdvantureEvent* other);
  void UnsafeMergeFrom(const AdvantureEvent& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional uint32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // optional uint32 time = 3;
  void clear_time();
  static const int kTimeFieldNumber = 3;
  ::google::protobuf::uint32 time() const;
  void set_time(::google::protobuf::uint32 value);

  // optional .NetMsg.Award award = 4;
  bool has_award() const;
  void clear_award();
  static const int kAwardFieldNumber = 4;
  const ::NetMsg::Award& award() const;
  ::NetMsg::Award* mutable_award();
  ::NetMsg::Award* release_award();
  void set_allocated_award(::NetMsg::Award* award);

  // optional uint32 createTime = 5;
  void clear_createtime();
  static const int kCreateTimeFieldNumber = 5;
  ::google::protobuf::uint32 createtime() const;
  void set_createtime(::google::protobuf::uint32 value);

  // optional .NetMsg.AdvantureContinuousBattle battle = 6;
  bool has_battle() const;
  void clear_battle();
  static const int kBattleFieldNumber = 6;
  const ::NetMsg::AdvantureContinuousBattle& battle() const;
  ::NetMsg::AdvantureContinuousBattle* mutable_battle();
  ::NetMsg::AdvantureContinuousBattle* release_battle();
  void set_allocated_battle(::NetMsg::AdvantureContinuousBattle* battle);

  // optional .NetMsg.AdvantureEventStatus status = 7;
  void clear_status();
  static const int kStatusFieldNumber = 7;
  ::NetMsg::AdvantureEventStatus status() const;
  void set_status(::NetMsg::AdvantureEventStatus value);

  // @@protoc_insertion_point(class_scope:NetMsg.AdvantureEvent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NetMsg::Award* award_;
  ::NetMsg::AdvantureContinuousBattle* battle_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 time_;
  ::google::protobuf::uint32 createtime_;
  int status_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AdvantureEvent> AdvantureEvent_default_instance_;

// -------------------------------------------------------------------

class AdvantureInfoAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.AdvantureInfoAck) */ {
 public:
  AdvantureInfoAck();
  virtual ~AdvantureInfoAck();

  AdvantureInfoAck(const AdvantureInfoAck& from);

  inline AdvantureInfoAck& operator=(const AdvantureInfoAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AdvantureInfoAck& default_instance();

  static const AdvantureInfoAck* internal_default_instance();

  void Swap(AdvantureInfoAck* other);

  // implements Message ----------------------------------------------

  inline AdvantureInfoAck* New() const { return New(NULL); }

  AdvantureInfoAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AdvantureInfoAck& from);
  void MergeFrom(const AdvantureInfoAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AdvantureInfoAck* other);
  void UnsafeMergeFrom(const AdvantureInfoAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 times = 1;
  void clear_times();
  static const int kTimesFieldNumber = 1;
  ::google::protobuf::uint32 times() const;
  void set_times(::google::protobuf::uint32 value);

  // optional uint32 timesMax = 2;
  void clear_timesmax();
  static const int kTimesMaxFieldNumber = 2;
  ::google::protobuf::uint32 timesmax() const;
  void set_timesmax(::google::protobuf::uint32 value);

  // optional uint32 nextTime = 3;
  void clear_nexttime();
  static const int kNextTimeFieldNumber = 3;
  ::google::protobuf::uint32 nexttime() const;
  void set_nexttime(::google::protobuf::uint32 value);

  // repeated .NetMsg.AdvantureEvent events = 4;
  int events_size() const;
  void clear_events();
  static const int kEventsFieldNumber = 4;
  const ::NetMsg::AdvantureEvent& events(int index) const;
  ::NetMsg::AdvantureEvent* mutable_events(int index);
  ::NetMsg::AdvantureEvent* add_events();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::AdvantureEvent >*
      mutable_events();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::AdvantureEvent >&
      events() const;

  // optional uint32 updateTime = 5;
  void clear_updatetime();
  static const int kUpdateTimeFieldNumber = 5;
  ::google::protobuf::uint32 updatetime() const;
  void set_updatetime(::google::protobuf::uint32 value);

  // optional uint32 doTimes = 6;
  void clear_dotimes();
  static const int kDoTimesFieldNumber = 6;
  ::google::protobuf::uint32 dotimes() const;
  void set_dotimes(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.AdvantureInfoAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::AdvantureEvent > events_;
  ::google::protobuf::uint32 times_;
  ::google::protobuf::uint32 timesmax_;
  ::google::protobuf::uint32 nexttime_;
  ::google::protobuf::uint32 updatetime_;
  ::google::protobuf::uint32 dotimes_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AdvantureInfoAck> AdvantureInfoAck_default_instance_;

// -------------------------------------------------------------------

class AdvantureAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.AdvantureAck) */ {
 public:
  AdvantureAck();
  virtual ~AdvantureAck();

  AdvantureAck(const AdvantureAck& from);

  inline AdvantureAck& operator=(const AdvantureAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AdvantureAck& default_instance();

  static const AdvantureAck* internal_default_instance();

  void Swap(AdvantureAck* other);

  // implements Message ----------------------------------------------

  inline AdvantureAck* New() const { return New(NULL); }

  AdvantureAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AdvantureAck& from);
  void MergeFrom(const AdvantureAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AdvantureAck* other);
  void UnsafeMergeFrom(const AdvantureAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 times = 1;
  void clear_times();
  static const int kTimesFieldNumber = 1;
  ::google::protobuf::uint32 times() const;
  void set_times(::google::protobuf::uint32 value);

  // optional uint32 nextTime = 2;
  void clear_nexttime();
  static const int kNextTimeFieldNumber = 2;
  ::google::protobuf::uint32 nexttime() const;
  void set_nexttime(::google::protobuf::uint32 value);

  // optional uint32 gold = 3;
  void clear_gold();
  static const int kGoldFieldNumber = 3;
  ::google::protobuf::uint32 gold() const;
  void set_gold(::google::protobuf::uint32 value);

  // optional uint32 exp = 4;
  void clear_exp();
  static const int kExpFieldNumber = 4;
  ::google::protobuf::uint32 exp() const;
  void set_exp(::google::protobuf::uint32 value);

  // optional uint32 crit = 5;
  void clear_crit();
  static const int kCritFieldNumber = 5;
  ::google::protobuf::uint32 crit() const;
  void set_crit(::google::protobuf::uint32 value);

  // optional .NetMsg.AdvantureEvent event = 6;
  bool has_event() const;
  void clear_event();
  static const int kEventFieldNumber = 6;
  const ::NetMsg::AdvantureEvent& event() const;
  ::NetMsg::AdvantureEvent* mutable_event();
  ::NetMsg::AdvantureEvent* release_event();
  void set_allocated_event(::NetMsg::AdvantureEvent* event);

  // @@protoc_insertion_point(class_scope:NetMsg.AdvantureAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NetMsg::AdvantureEvent* event_;
  ::google::protobuf::uint32 times_;
  ::google::protobuf::uint32 nexttime_;
  ::google::protobuf::uint32 gold_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 crit_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AdvantureAck> AdvantureAck_default_instance_;

// -------------------------------------------------------------------

class ReqAdvantureEventDone : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqAdvantureEventDone) */ {
 public:
  ReqAdvantureEventDone();
  virtual ~ReqAdvantureEventDone();

  ReqAdvantureEventDone(const ReqAdvantureEventDone& from);

  inline ReqAdvantureEventDone& operator=(const ReqAdvantureEventDone& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqAdvantureEventDone& default_instance();

  static const ReqAdvantureEventDone* internal_default_instance();

  void Swap(ReqAdvantureEventDone* other);

  // implements Message ----------------------------------------------

  inline ReqAdvantureEventDone* New() const { return New(NULL); }

  ReqAdvantureEventDone* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqAdvantureEventDone& from);
  void MergeFrom(const ReqAdvantureEventDone& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqAdvantureEventDone* other);
  void UnsafeMergeFrom(const ReqAdvantureEventDone& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqAdvantureEventDone)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqAdvantureEventDone> ReqAdvantureEventDone_default_instance_;

// -------------------------------------------------------------------

class AdvantureEventDoneAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.AdvantureEventDoneAck) */ {
 public:
  AdvantureEventDoneAck();
  virtual ~AdvantureEventDoneAck();

  AdvantureEventDoneAck(const AdvantureEventDoneAck& from);

  inline AdvantureEventDoneAck& operator=(const AdvantureEventDoneAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AdvantureEventDoneAck& default_instance();

  static const AdvantureEventDoneAck* internal_default_instance();

  void Swap(AdvantureEventDoneAck* other);

  // implements Message ----------------------------------------------

  inline AdvantureEventDoneAck* New() const { return New(NULL); }

  AdvantureEventDoneAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AdvantureEventDoneAck& from);
  void MergeFrom(const AdvantureEventDoneAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AdvantureEventDoneAck* other);
  void UnsafeMergeFrom(const AdvantureEventDoneAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional uint32 error = 2;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.AdvantureEventDoneAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AdvantureEventDoneAck> AdvantureEventDoneAck_default_instance_;

// -------------------------------------------------------------------

class HeroFriendship : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.HeroFriendship) */ {
 public:
  HeroFriendship();
  virtual ~HeroFriendship();

  HeroFriendship(const HeroFriendship& from);

  inline HeroFriendship& operator=(const HeroFriendship& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroFriendship& default_instance();

  static const HeroFriendship* internal_default_instance();

  void Swap(HeroFriendship* other);

  // implements Message ----------------------------------------------

  inline HeroFriendship* New() const { return New(NULL); }

  HeroFriendship* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroFriendship& from);
  void MergeFrom(const HeroFriendship& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HeroFriendship* other);
  void UnsafeMergeFrom(const HeroFriendship& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 heroClass = 1;
  void clear_heroclass();
  static const int kHeroClassFieldNumber = 1;
  ::google::protobuf::uint32 heroclass() const;
  void set_heroclass(::google::protobuf::uint32 value);

  // optional uint32 friendshipExp = 2;
  void clear_friendshipexp();
  static const int kFriendshipExpFieldNumber = 2;
  ::google::protobuf::uint32 friendshipexp() const;
  void set_friendshipexp(::google::protobuf::uint32 value);

  // optional uint32 friendshipLv = 3;
  void clear_friendshiplv();
  static const int kFriendshipLvFieldNumber = 3;
  ::google::protobuf::uint32 friendshiplv() const;
  void set_friendshiplv(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.HeroFriendship)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 heroclass_;
  ::google::protobuf::uint32 friendshipexp_;
  ::google::protobuf::uint32 friendshiplv_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<HeroFriendship> HeroFriendship_default_instance_;

// -------------------------------------------------------------------

class HeroFriendshipAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.HeroFriendshipAck) */ {
 public:
  HeroFriendshipAck();
  virtual ~HeroFriendshipAck();

  HeroFriendshipAck(const HeroFriendshipAck& from);

  inline HeroFriendshipAck& operator=(const HeroFriendshipAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroFriendshipAck& default_instance();

  static const HeroFriendshipAck* internal_default_instance();

  void Swap(HeroFriendshipAck* other);

  // implements Message ----------------------------------------------

  inline HeroFriendshipAck* New() const { return New(NULL); }

  HeroFriendshipAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroFriendshipAck& from);
  void MergeFrom(const HeroFriendshipAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HeroFriendshipAck* other);
  void UnsafeMergeFrom(const HeroFriendshipAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .NetMsg.HeroFriendship heroFri = 1;
  int herofri_size() const;
  void clear_herofri();
  static const int kHeroFriFieldNumber = 1;
  const ::NetMsg::HeroFriendship& herofri(int index) const;
  ::NetMsg::HeroFriendship* mutable_herofri(int index);
  ::NetMsg::HeroFriendship* add_herofri();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::HeroFriendship >*
      mutable_herofri();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::HeroFriendship >&
      herofri() const;

  // @@protoc_insertion_point(class_scope:NetMsg.HeroFriendshipAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::HeroFriendship > herofri_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<HeroFriendshipAck> HeroFriendshipAck_default_instance_;

// -------------------------------------------------------------------

class HeroGeneralSoul : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.HeroGeneralSoul) */ {
 public:
  HeroGeneralSoul();
  virtual ~HeroGeneralSoul();

  HeroGeneralSoul(const HeroGeneralSoul& from);

  inline HeroGeneralSoul& operator=(const HeroGeneralSoul& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroGeneralSoul& default_instance();

  static const HeroGeneralSoul* internal_default_instance();

  void Swap(HeroGeneralSoul* other);

  // implements Message ----------------------------------------------

  inline HeroGeneralSoul* New() const { return New(NULL); }

  HeroGeneralSoul* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroGeneralSoul& from);
  void MergeFrom(const HeroGeneralSoul& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HeroGeneralSoul* other);
  void UnsafeMergeFrom(const HeroGeneralSoul& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 heroClass = 1;
  void clear_heroclass();
  static const int kHeroClassFieldNumber = 1;
  ::google::protobuf::uint32 heroclass() const;
  void set_heroclass(::google::protobuf::uint32 value);

  // optional uint32 num = 2;
  void clear_num();
  static const int kNumFieldNumber = 2;
  ::google::protobuf::uint32 num() const;
  void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.HeroGeneralSoul)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 heroclass_;
  ::google::protobuf::uint32 num_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<HeroGeneralSoul> HeroGeneralSoul_default_instance_;

// -------------------------------------------------------------------

class HeroGeneralSoulAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.HeroGeneralSoulAck) */ {
 public:
  HeroGeneralSoulAck();
  virtual ~HeroGeneralSoulAck();

  HeroGeneralSoulAck(const HeroGeneralSoulAck& from);

  inline HeroGeneralSoulAck& operator=(const HeroGeneralSoulAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroGeneralSoulAck& default_instance();

  static const HeroGeneralSoulAck* internal_default_instance();

  void Swap(HeroGeneralSoulAck* other);

  // implements Message ----------------------------------------------

  inline HeroGeneralSoulAck* New() const { return New(NULL); }

  HeroGeneralSoulAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroGeneralSoulAck& from);
  void MergeFrom(const HeroGeneralSoulAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HeroGeneralSoulAck* other);
  void UnsafeMergeFrom(const HeroGeneralSoulAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .NetMsg.HeroGeneralSoul heroSoul = 1;
  int herosoul_size() const;
  void clear_herosoul();
  static const int kHeroSoulFieldNumber = 1;
  const ::NetMsg::HeroGeneralSoul& herosoul(int index) const;
  ::NetMsg::HeroGeneralSoul* mutable_herosoul(int index);
  ::NetMsg::HeroGeneralSoul* add_herosoul();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::HeroGeneralSoul >*
      mutable_herosoul();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::HeroGeneralSoul >&
      herosoul() const;

  // @@protoc_insertion_point(class_scope:NetMsg.HeroGeneralSoulAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::HeroGeneralSoul > herosoul_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<HeroGeneralSoulAck> HeroGeneralSoulAck_default_instance_;

// -------------------------------------------------------------------

class UserLearnVsCDInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.UserLearnVsCDInfo) */ {
 public:
  UserLearnVsCDInfo();
  virtual ~UserLearnVsCDInfo();

  UserLearnVsCDInfo(const UserLearnVsCDInfo& from);

  inline UserLearnVsCDInfo& operator=(const UserLearnVsCDInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserLearnVsCDInfo& default_instance();

  static const UserLearnVsCDInfo* internal_default_instance();

  void Swap(UserLearnVsCDInfo* other);

  // implements Message ----------------------------------------------

  inline UserLearnVsCDInfo* New() const { return New(NULL); }

  UserLearnVsCDInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserLearnVsCDInfo& from);
  void MergeFrom(const UserLearnVsCDInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserLearnVsCDInfo* other);
  void UnsafeMergeFrom(const UserLearnVsCDInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 heroClass = 1;
  void clear_heroclass();
  static const int kHeroClassFieldNumber = 1;
  ::google::protobuf::uint32 heroclass() const;
  void set_heroclass(::google::protobuf::uint32 value);

  // optional uint32 UserLearnVsCD = 2;
  void clear_userlearnvscd();
  static const int kUserLearnVsCDFieldNumber = 2;
  ::google::protobuf::uint32 userlearnvscd() const;
  void set_userlearnvscd(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.UserLearnVsCDInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 heroclass_;
  ::google::protobuf::uint32 userlearnvscd_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UserLearnVsCDInfo> UserLearnVsCDInfo_default_instance_;

// -------------------------------------------------------------------

class UserLearnVsCDAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.UserLearnVsCDAck) */ {
 public:
  UserLearnVsCDAck();
  virtual ~UserLearnVsCDAck();

  UserLearnVsCDAck(const UserLearnVsCDAck& from);

  inline UserLearnVsCDAck& operator=(const UserLearnVsCDAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserLearnVsCDAck& default_instance();

  static const UserLearnVsCDAck* internal_default_instance();

  void Swap(UserLearnVsCDAck* other);

  // implements Message ----------------------------------------------

  inline UserLearnVsCDAck* New() const { return New(NULL); }

  UserLearnVsCDAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserLearnVsCDAck& from);
  void MergeFrom(const UserLearnVsCDAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserLearnVsCDAck* other);
  void UnsafeMergeFrom(const UserLearnVsCDAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .NetMsg.UserLearnVsCDInfo cdInfo = 1;
  int cdinfo_size() const;
  void clear_cdinfo();
  static const int kCdInfoFieldNumber = 1;
  const ::NetMsg::UserLearnVsCDInfo& cdinfo(int index) const;
  ::NetMsg::UserLearnVsCDInfo* mutable_cdinfo(int index);
  ::NetMsg::UserLearnVsCDInfo* add_cdinfo();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::UserLearnVsCDInfo >*
      mutable_cdinfo();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::UserLearnVsCDInfo >&
      cdinfo() const;

  // @@protoc_insertion_point(class_scope:NetMsg.UserLearnVsCDAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::UserLearnVsCDInfo > cdinfo_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UserLearnVsCDAck> UserLearnVsCDAck_default_instance_;

// -------------------------------------------------------------------

class ReqGiveHeroGift : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqGiveHeroGift) */ {
 public:
  ReqGiveHeroGift();
  virtual ~ReqGiveHeroGift();

  ReqGiveHeroGift(const ReqGiveHeroGift& from);

  inline ReqGiveHeroGift& operator=(const ReqGiveHeroGift& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqGiveHeroGift& default_instance();

  static const ReqGiveHeroGift* internal_default_instance();

  void Swap(ReqGiveHeroGift* other);

  // implements Message ----------------------------------------------

  inline ReqGiveHeroGift* New() const { return New(NULL); }

  ReqGiveHeroGift* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqGiveHeroGift& from);
  void MergeFrom(const ReqGiveHeroGift& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqGiveHeroGift* other);
  void UnsafeMergeFrom(const ReqGiveHeroGift& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 heroClass = 1;
  void clear_heroclass();
  static const int kHeroClassFieldNumber = 1;
  ::google::protobuf::uint32 heroclass() const;
  void set_heroclass(::google::protobuf::uint32 value);

  // optional uint64 itemId = 2;
  void clear_itemid();
  static const int kItemIdFieldNumber = 2;
  ::google::protobuf::uint64 itemid() const;
  void set_itemid(::google::protobuf::uint64 value);

  // optional uint32 itemNum = 3;
  void clear_itemnum();
  static const int kItemNumFieldNumber = 3;
  ::google::protobuf::uint32 itemnum() const;
  void set_itemnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqGiveHeroGift)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 itemid_;
  ::google::protobuf::uint32 heroclass_;
  ::google::protobuf::uint32 itemnum_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqGiveHeroGift> ReqGiveHeroGift_default_instance_;

// -------------------------------------------------------------------

class GiveHeroGiftAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.GiveHeroGiftAck) */ {
 public:
  GiveHeroGiftAck();
  virtual ~GiveHeroGiftAck();

  GiveHeroGiftAck(const GiveHeroGiftAck& from);

  inline GiveHeroGiftAck& operator=(const GiveHeroGiftAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GiveHeroGiftAck& default_instance();

  static const GiveHeroGiftAck* internal_default_instance();

  void Swap(GiveHeroGiftAck* other);

  // implements Message ----------------------------------------------

  inline GiveHeroGiftAck* New() const { return New(NULL); }

  GiveHeroGiftAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GiveHeroGiftAck& from);
  void MergeFrom(const GiveHeroGiftAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GiveHeroGiftAck* other);
  void UnsafeMergeFrom(const GiveHeroGiftAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 itemId = 1;
  void clear_itemid();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::uint64 itemid() const;
  void set_itemid(::google::protobuf::uint64 value);

  // optional uint32 error = 2;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.GiveHeroGiftAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 itemid_;
  ::google::protobuf::uint32 error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GiveHeroGiftAck> GiveHeroGiftAck_default_instance_;

// -------------------------------------------------------------------

class ReqGeneralSoulExchangeHero : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqGeneralSoulExchangeHero) */ {
 public:
  ReqGeneralSoulExchangeHero();
  virtual ~ReqGeneralSoulExchangeHero();

  ReqGeneralSoulExchangeHero(const ReqGeneralSoulExchangeHero& from);

  inline ReqGeneralSoulExchangeHero& operator=(const ReqGeneralSoulExchangeHero& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqGeneralSoulExchangeHero& default_instance();

  static const ReqGeneralSoulExchangeHero* internal_default_instance();

  void Swap(ReqGeneralSoulExchangeHero* other);

  // implements Message ----------------------------------------------

  inline ReqGeneralSoulExchangeHero* New() const { return New(NULL); }

  ReqGeneralSoulExchangeHero* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqGeneralSoulExchangeHero& from);
  void MergeFrom(const ReqGeneralSoulExchangeHero& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqGeneralSoulExchangeHero* other);
  void UnsafeMergeFrom(const ReqGeneralSoulExchangeHero& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 heroId = 1;
  void clear_heroid();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::uint32 heroid() const;
  void set_heroid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqGeneralSoulExchangeHero)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 heroid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqGeneralSoulExchangeHero> ReqGeneralSoulExchangeHero_default_instance_;

// -------------------------------------------------------------------

class GeneralSoulExchangeHeroAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.GeneralSoulExchangeHeroAck) */ {
 public:
  GeneralSoulExchangeHeroAck();
  virtual ~GeneralSoulExchangeHeroAck();

  GeneralSoulExchangeHeroAck(const GeneralSoulExchangeHeroAck& from);

  inline GeneralSoulExchangeHeroAck& operator=(const GeneralSoulExchangeHeroAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GeneralSoulExchangeHeroAck& default_instance();

  static const GeneralSoulExchangeHeroAck* internal_default_instance();

  void Swap(GeneralSoulExchangeHeroAck* other);

  // implements Message ----------------------------------------------

  inline GeneralSoulExchangeHeroAck* New() const { return New(NULL); }

  GeneralSoulExchangeHeroAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GeneralSoulExchangeHeroAck& from);
  void MergeFrom(const GeneralSoulExchangeHeroAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GeneralSoulExchangeHeroAck* other);
  void UnsafeMergeFrom(const GeneralSoulExchangeHeroAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 error = 1;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // optional uint32 heroId = 2;
  void clear_heroid();
  static const int kHeroIdFieldNumber = 2;
  ::google::protobuf::uint32 heroid() const;
  void set_heroid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.GeneralSoulExchangeHeroAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 error_;
  ::google::protobuf::uint32 heroid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GeneralSoulExchangeHeroAck> GeneralSoulExchangeHeroAck_default_instance_;

// -------------------------------------------------------------------

class ReqShopItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqShopItem) */ {
 public:
  ReqShopItem();
  virtual ~ReqShopItem();

  ReqShopItem(const ReqShopItem& from);

  inline ReqShopItem& operator=(const ReqShopItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqShopItem& default_instance();

  static const ReqShopItem* internal_default_instance();

  void Swap(ReqShopItem* other);

  // implements Message ----------------------------------------------

  inline ReqShopItem* New() const { return New(NULL); }

  ReqShopItem* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqShopItem& from);
  void MergeFrom(const ReqShopItem& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqShopItem* other);
  void UnsafeMergeFrom(const ReqShopItem& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 shopId = 1;
  void clear_shopid();
  static const int kShopIdFieldNumber = 1;
  ::google::protobuf::uint32 shopid() const;
  void set_shopid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqShopItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 shopid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqShopItem> ReqShopItem_default_instance_;

// -------------------------------------------------------------------

class ShopItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ShopItem) */ {
 public:
  ShopItem();
  virtual ~ShopItem();

  ShopItem(const ShopItem& from);

  inline ShopItem& operator=(const ShopItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShopItem& default_instance();

  static const ShopItem* internal_default_instance();

  void Swap(ShopItem* other);

  // implements Message ----------------------------------------------

  inline ShopItem* New() const { return New(NULL); }

  ShopItem* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShopItem& from);
  void MergeFrom(const ShopItem& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ShopItem* other);
  void UnsafeMergeFrom(const ShopItem& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 itemId = 1;
  void clear_itemid();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::uint32 itemid() const;
  void set_itemid(::google::protobuf::uint32 value);

  // optional uint32 itemNum = 2;
  void clear_itemnum();
  static const int kItemNumFieldNumber = 2;
  ::google::protobuf::uint32 itemnum() const;
  void set_itemnum(::google::protobuf::uint32 value);

  // optional uint32 currencyType = 3;
  void clear_currencytype();
  static const int kCurrencyTypeFieldNumber = 3;
  ::google::protobuf::uint32 currencytype() const;
  void set_currencytype(::google::protobuf::uint32 value);

  // optional uint32 price = 4;
  void clear_price();
  static const int kPriceFieldNumber = 4;
  ::google::protobuf::uint32 price() const;
  void set_price(::google::protobuf::uint32 value);

  // optional uint32 buyTimes = 5;
  void clear_buytimes();
  static const int kBuyTimesFieldNumber = 5;
  ::google::protobuf::uint32 buytimes() const;
  void set_buytimes(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ShopItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 itemnum_;
  ::google::protobuf::uint32 currencytype_;
  ::google::protobuf::uint32 price_;
  ::google::protobuf::uint32 buytimes_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ShopItem> ShopItem_default_instance_;

// -------------------------------------------------------------------

class ShopItemAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ShopItemAck) */ {
 public:
  ShopItemAck();
  virtual ~ShopItemAck();

  ShopItemAck(const ShopItemAck& from);

  inline ShopItemAck& operator=(const ShopItemAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShopItemAck& default_instance();

  static const ShopItemAck* internal_default_instance();

  void Swap(ShopItemAck* other);

  // implements Message ----------------------------------------------

  inline ShopItemAck* New() const { return New(NULL); }

  ShopItemAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShopItemAck& from);
  void MergeFrom(const ShopItemAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ShopItemAck* other);
  void UnsafeMergeFrom(const ShopItemAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 shopId = 1;
  void clear_shopid();
  static const int kShopIdFieldNumber = 1;
  ::google::protobuf::uint32 shopid() const;
  void set_shopid(::google::protobuf::uint32 value);

  // optional uint32 refreshTime = 2;
  void clear_refreshtime();
  static const int kRefreshTimeFieldNumber = 2;
  ::google::protobuf::uint32 refreshtime() const;
  void set_refreshtime(::google::protobuf::uint32 value);

  // repeated .NetMsg.ShopItem items = 3;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 3;
  const ::NetMsg::ShopItem& items(int index) const;
  ::NetMsg::ShopItem* mutable_items(int index);
  ::NetMsg::ShopItem* add_items();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::ShopItem >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::ShopItem >&
      items() const;

  // @@protoc_insertion_point(class_scope:NetMsg.ShopItemAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::ShopItem > items_;
  ::google::protobuf::uint32 shopid_;
  ::google::protobuf::uint32 refreshtime_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ShopItemAck> ShopItemAck_default_instance_;

// -------------------------------------------------------------------

class ReqBuyShop : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqBuyShop) */ {
 public:
  ReqBuyShop();
  virtual ~ReqBuyShop();

  ReqBuyShop(const ReqBuyShop& from);

  inline ReqBuyShop& operator=(const ReqBuyShop& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqBuyShop& default_instance();

  static const ReqBuyShop* internal_default_instance();

  void Swap(ReqBuyShop* other);

  // implements Message ----------------------------------------------

  inline ReqBuyShop* New() const { return New(NULL); }

  ReqBuyShop* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqBuyShop& from);
  void MergeFrom(const ReqBuyShop& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqBuyShop* other);
  void UnsafeMergeFrom(const ReqBuyShop& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 shopId = 1;
  void clear_shopid();
  static const int kShopIdFieldNumber = 1;
  ::google::protobuf::uint32 shopid() const;
  void set_shopid(::google::protobuf::uint32 value);

  // optional uint32 shopPos = 2;
  void clear_shoppos();
  static const int kShopPosFieldNumber = 2;
  ::google::protobuf::uint32 shoppos() const;
  void set_shoppos(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqBuyShop)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 shopid_;
  ::google::protobuf::uint32 shoppos_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqBuyShop> ReqBuyShop_default_instance_;

// -------------------------------------------------------------------

class BuyShopAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.BuyShopAck) */ {
 public:
  BuyShopAck();
  virtual ~BuyShopAck();

  BuyShopAck(const BuyShopAck& from);

  inline BuyShopAck& operator=(const BuyShopAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuyShopAck& default_instance();

  static const BuyShopAck* internal_default_instance();

  void Swap(BuyShopAck* other);

  // implements Message ----------------------------------------------

  inline BuyShopAck* New() const { return New(NULL); }

  BuyShopAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuyShopAck& from);
  void MergeFrom(const BuyShopAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BuyShopAck* other);
  void UnsafeMergeFrom(const BuyShopAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 shopId = 1;
  void clear_shopid();
  static const int kShopIdFieldNumber = 1;
  ::google::protobuf::uint32 shopid() const;
  void set_shopid(::google::protobuf::uint32 value);

  // optional uint32 shopPos = 2;
  void clear_shoppos();
  static const int kShopPosFieldNumber = 2;
  ::google::protobuf::uint32 shoppos() const;
  void set_shoppos(::google::protobuf::uint32 value);

  // optional uint32 error = 3;
  void clear_error();
  static const int kErrorFieldNumber = 3;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.BuyShopAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 shopid_;
  ::google::protobuf::uint32 shoppos_;
  ::google::protobuf::uint32 error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BuyShopAck> BuyShopAck_default_instance_;

// -------------------------------------------------------------------

class ReqRefreshShop : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqRefreshShop) */ {
 public:
  ReqRefreshShop();
  virtual ~ReqRefreshShop();

  ReqRefreshShop(const ReqRefreshShop& from);

  inline ReqRefreshShop& operator=(const ReqRefreshShop& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqRefreshShop& default_instance();

  static const ReqRefreshShop* internal_default_instance();

  void Swap(ReqRefreshShop* other);

  // implements Message ----------------------------------------------

  inline ReqRefreshShop* New() const { return New(NULL); }

  ReqRefreshShop* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqRefreshShop& from);
  void MergeFrom(const ReqRefreshShop& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqRefreshShop* other);
  void UnsafeMergeFrom(const ReqRefreshShop& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:NetMsg.ReqRefreshShop)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqRefreshShop> ReqRefreshShop_default_instance_;

// -------------------------------------------------------------------

class RefreshShopAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.RefreshShopAck) */ {
 public:
  RefreshShopAck();
  virtual ~RefreshShopAck();

  RefreshShopAck(const RefreshShopAck& from);

  inline RefreshShopAck& operator=(const RefreshShopAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RefreshShopAck& default_instance();

  static const RefreshShopAck* internal_default_instance();

  void Swap(RefreshShopAck* other);

  // implements Message ----------------------------------------------

  inline RefreshShopAck* New() const { return New(NULL); }

  RefreshShopAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RefreshShopAck& from);
  void MergeFrom(const RefreshShopAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RefreshShopAck* other);
  void UnsafeMergeFrom(const RefreshShopAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:NetMsg.RefreshShopAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RefreshShopAck> RefreshShopAck_default_instance_;

// -------------------------------------------------------------------

class ReqEvolveHero : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqEvolveHero) */ {
 public:
  ReqEvolveHero();
  virtual ~ReqEvolveHero();

  ReqEvolveHero(const ReqEvolveHero& from);

  inline ReqEvolveHero& operator=(const ReqEvolveHero& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqEvolveHero& default_instance();

  static const ReqEvolveHero* internal_default_instance();

  void Swap(ReqEvolveHero* other);

  // implements Message ----------------------------------------------

  inline ReqEvolveHero* New() const { return New(NULL); }

  ReqEvolveHero* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqEvolveHero& from);
  void MergeFrom(const ReqEvolveHero& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqEvolveHero* other);
  void UnsafeMergeFrom(const ReqEvolveHero& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 heroId = 1;
  void clear_heroid();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::uint64 heroid() const;
  void set_heroid(::google::protobuf::uint64 value);

  // optional uint64 eatHeroId = 2;
  void clear_eatheroid();
  static const int kEatHeroIdFieldNumber = 2;
  ::google::protobuf::uint64 eatheroid() const;
  void set_eatheroid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqEvolveHero)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 heroid_;
  ::google::protobuf::uint64 eatheroid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqEvolveHero> ReqEvolveHero_default_instance_;

// -------------------------------------------------------------------

class EvolveHeroAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.EvolveHeroAck) */ {
 public:
  EvolveHeroAck();
  virtual ~EvolveHeroAck();

  EvolveHeroAck(const EvolveHeroAck& from);

  inline EvolveHeroAck& operator=(const EvolveHeroAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EvolveHeroAck& default_instance();

  static const EvolveHeroAck* internal_default_instance();

  void Swap(EvolveHeroAck* other);

  // implements Message ----------------------------------------------

  inline EvolveHeroAck* New() const { return New(NULL); }

  EvolveHeroAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EvolveHeroAck& from);
  void MergeFrom(const EvolveHeroAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EvolveHeroAck* other);
  void UnsafeMergeFrom(const EvolveHeroAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 heroId = 1;
  void clear_heroid();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::uint64 heroid() const;
  void set_heroid(::google::protobuf::uint64 value);

  // optional uint32 error = 2;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.EvolveHeroAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 heroid_;
  ::google::protobuf::uint32 error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<EvolveHeroAck> EvolveHeroAck_default_instance_;

// -------------------------------------------------------------------

class ReqAdvancementRank : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqAdvancementRank) */ {
 public:
  ReqAdvancementRank();
  virtual ~ReqAdvancementRank();

  ReqAdvancementRank(const ReqAdvancementRank& from);

  inline ReqAdvancementRank& operator=(const ReqAdvancementRank& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqAdvancementRank& default_instance();

  static const ReqAdvancementRank* internal_default_instance();

  void Swap(ReqAdvancementRank* other);

  // implements Message ----------------------------------------------

  inline ReqAdvancementRank* New() const { return New(NULL); }

  ReqAdvancementRank* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqAdvancementRank& from);
  void MergeFrom(const ReqAdvancementRank& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqAdvancementRank* other);
  void UnsafeMergeFrom(const ReqAdvancementRank& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rank = 1;
  void clear_rank();
  static const int kRankFieldNumber = 1;
  ::google::protobuf::uint32 rank() const;
  void set_rank(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqAdvancementRank)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 rank_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqAdvancementRank> ReqAdvancementRank_default_instance_;

// -------------------------------------------------------------------

class AdvancementRankAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.AdvancementRankAck) */ {
 public:
  AdvancementRankAck();
  virtual ~AdvancementRankAck();

  AdvancementRankAck(const AdvancementRankAck& from);

  inline AdvancementRankAck& operator=(const AdvancementRankAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AdvancementRankAck& default_instance();

  static const AdvancementRankAck* internal_default_instance();

  void Swap(AdvancementRankAck* other);

  // implements Message ----------------------------------------------

  inline AdvancementRankAck* New() const { return New(NULL); }

  AdvancementRankAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AdvancementRankAck& from);
  void MergeFrom(const AdvancementRankAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AdvancementRankAck* other);
  void UnsafeMergeFrom(const AdvancementRankAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rank = 1;
  void clear_rank();
  static const int kRankFieldNumber = 1;
  ::google::protobuf::uint32 rank() const;
  void set_rank(::google::protobuf::uint32 value);

  // optional uint32 error = 2;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.AdvancementRankAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AdvancementRankAck> AdvancementRankAck_default_instance_;

// -------------------------------------------------------------------

class ReqRankTitle : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqRankTitle) */ {
 public:
  ReqRankTitle();
  virtual ~ReqRankTitle();

  ReqRankTitle(const ReqRankTitle& from);

  inline ReqRankTitle& operator=(const ReqRankTitle& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqRankTitle& default_instance();

  static const ReqRankTitle* internal_default_instance();

  void Swap(ReqRankTitle* other);

  // implements Message ----------------------------------------------

  inline ReqRankTitle* New() const { return New(NULL); }

  ReqRankTitle* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqRankTitle& from);
  void MergeFrom(const ReqRankTitle& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqRankTitle* other);
  void UnsafeMergeFrom(const ReqRankTitle& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rank = 1;
  void clear_rank();
  static const int kRankFieldNumber = 1;
  ::google::protobuf::uint32 rank() const;
  void set_rank(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqRankTitle)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 rank_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqRankTitle> ReqRankTitle_default_instance_;

// -------------------------------------------------------------------

class RankTitlePlayer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.RankTitlePlayer) */ {
 public:
  RankTitlePlayer();
  virtual ~RankTitlePlayer();

  RankTitlePlayer(const RankTitlePlayer& from);

  inline RankTitlePlayer& operator=(const RankTitlePlayer& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RankTitlePlayer& default_instance();

  static const RankTitlePlayer* internal_default_instance();

  void Swap(RankTitlePlayer* other);

  // implements Message ----------------------------------------------

  inline RankTitlePlayer* New() const { return New(NULL); }

  RankTitlePlayer* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RankTitlePlayer& from);
  void MergeFrom(const RankTitlePlayer& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RankTitlePlayer* other);
  void UnsafeMergeFrom(const RankTitlePlayer& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 title = 1;
  void clear_title();
  static const int kTitleFieldNumber = 1;
  ::google::protobuf::uint32 title() const;
  void set_title(::google::protobuf::uint32 value);

  // optional uint32 playerNum = 2;
  void clear_playernum();
  static const int kPlayerNumFieldNumber = 2;
  ::google::protobuf::uint32 playernum() const;
  void set_playernum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.RankTitlePlayer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 title_;
  ::google::protobuf::uint32 playernum_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RankTitlePlayer> RankTitlePlayer_default_instance_;

// -------------------------------------------------------------------

class RankTitleAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.RankTitleAck) */ {
 public:
  RankTitleAck();
  virtual ~RankTitleAck();

  RankTitleAck(const RankTitleAck& from);

  inline RankTitleAck& operator=(const RankTitleAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RankTitleAck& default_instance();

  static const RankTitleAck* internal_default_instance();

  void Swap(RankTitleAck* other);

  // implements Message ----------------------------------------------

  inline RankTitleAck* New() const { return New(NULL); }

  RankTitleAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RankTitleAck& from);
  void MergeFrom(const RankTitleAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RankTitleAck* other);
  void UnsafeMergeFrom(const RankTitleAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rank = 1;
  void clear_rank();
  static const int kRankFieldNumber = 1;
  ::google::protobuf::uint32 rank() const;
  void set_rank(::google::protobuf::uint32 value);

  // repeated .NetMsg.RankTitlePlayer players = 2;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 2;
  const ::NetMsg::RankTitlePlayer& players(int index) const;
  ::NetMsg::RankTitlePlayer* mutable_players(int index);
  ::NetMsg::RankTitlePlayer* add_players();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::RankTitlePlayer >*
      mutable_players();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::RankTitlePlayer >&
      players() const;

  // @@protoc_insertion_point(class_scope:NetMsg.RankTitleAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::RankTitlePlayer > players_;
  ::google::protobuf::uint32 rank_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RankTitleAck> RankTitleAck_default_instance_;

// -------------------------------------------------------------------

class ReqTitleInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqTitleInfo) */ {
 public:
  ReqTitleInfo();
  virtual ~ReqTitleInfo();

  ReqTitleInfo(const ReqTitleInfo& from);

  inline ReqTitleInfo& operator=(const ReqTitleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqTitleInfo& default_instance();

  static const ReqTitleInfo* internal_default_instance();

  void Swap(ReqTitleInfo* other);

  // implements Message ----------------------------------------------

  inline ReqTitleInfo* New() const { return New(NULL); }

  ReqTitleInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqTitleInfo& from);
  void MergeFrom(const ReqTitleInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqTitleInfo* other);
  void UnsafeMergeFrom(const ReqTitleInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 title = 1;
  void clear_title();
  static const int kTitleFieldNumber = 1;
  ::google::protobuf::uint32 title() const;
  void set_title(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqTitleInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 title_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqTitleInfo> ReqTitleInfo_default_instance_;

// -------------------------------------------------------------------

class TitleInfoPlayer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.TitleInfoPlayer) */ {
 public:
  TitleInfoPlayer();
  virtual ~TitleInfoPlayer();

  TitleInfoPlayer(const TitleInfoPlayer& from);

  inline TitleInfoPlayer& operator=(const TitleInfoPlayer& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TitleInfoPlayer& default_instance();

  static const TitleInfoPlayer* internal_default_instance();

  void Swap(TitleInfoPlayer* other);

  // implements Message ----------------------------------------------

  inline TitleInfoPlayer* New() const { return New(NULL); }

  TitleInfoPlayer* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TitleInfoPlayer& from);
  void MergeFrom(const TitleInfoPlayer& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TitleInfoPlayer* other);
  void UnsafeMergeFrom(const TitleInfoPlayer& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:NetMsg.TitleInfoPlayer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TitleInfoPlayer> TitleInfoPlayer_default_instance_;

// -------------------------------------------------------------------

class TitleInfoAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.TitleInfoAck) */ {
 public:
  TitleInfoAck();
  virtual ~TitleInfoAck();

  TitleInfoAck(const TitleInfoAck& from);

  inline TitleInfoAck& operator=(const TitleInfoAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TitleInfoAck& default_instance();

  static const TitleInfoAck* internal_default_instance();

  void Swap(TitleInfoAck* other);

  // implements Message ----------------------------------------------

  inline TitleInfoAck* New() const { return New(NULL); }

  TitleInfoAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TitleInfoAck& from);
  void MergeFrom(const TitleInfoAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TitleInfoAck* other);
  void UnsafeMergeFrom(const TitleInfoAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 title = 1;
  void clear_title();
  static const int kTitleFieldNumber = 1;
  ::google::protobuf::uint32 title() const;
  void set_title(::google::protobuf::uint32 value);

  // optional uint32 leftTime = 2;
  void clear_lefttime();
  static const int kLeftTimeFieldNumber = 2;
  ::google::protobuf::uint32 lefttime() const;
  void set_lefttime(::google::protobuf::uint32 value);

  // optional uint32 curPlayerNum = 3;
  void clear_curplayernum();
  static const int kCurPlayerNumFieldNumber = 3;
  ::google::protobuf::uint32 curplayernum() const;
  void set_curplayernum(::google::protobuf::uint32 value);

  // repeated .NetMsg.TitleInfoPlayer players = 4;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 4;
  const ::NetMsg::TitleInfoPlayer& players(int index) const;
  ::NetMsg::TitleInfoPlayer* mutable_players(int index);
  ::NetMsg::TitleInfoPlayer* add_players();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::TitleInfoPlayer >*
      mutable_players();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::TitleInfoPlayer >&
      players() const;

  // optional bool meIsElection = 5;
  void clear_meiselection();
  static const int kMeIsElectionFieldNumber = 5;
  bool meiselection() const;
  void set_meiselection(bool value);

  // optional uint32 electionData = 6;
  void clear_electiondata();
  static const int kElectionDataFieldNumber = 6;
  ::google::protobuf::uint32 electiondata() const;
  void set_electiondata(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.TitleInfoAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::TitleInfoPlayer > players_;
  ::google::protobuf::uint32 title_;
  ::google::protobuf::uint32 lefttime_;
  ::google::protobuf::uint32 curplayernum_;
  bool meiselection_;
  ::google::protobuf::uint32 electiondata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TitleInfoAck> TitleInfoAck_default_instance_;

// -------------------------------------------------------------------

class ReqElectionTitle : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqElectionTitle) */ {
 public:
  ReqElectionTitle();
  virtual ~ReqElectionTitle();

  ReqElectionTitle(const ReqElectionTitle& from);

  inline ReqElectionTitle& operator=(const ReqElectionTitle& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqElectionTitle& default_instance();

  static const ReqElectionTitle* internal_default_instance();

  void Swap(ReqElectionTitle* other);

  // implements Message ----------------------------------------------

  inline ReqElectionTitle* New() const { return New(NULL); }

  ReqElectionTitle* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqElectionTitle& from);
  void MergeFrom(const ReqElectionTitle& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqElectionTitle* other);
  void UnsafeMergeFrom(const ReqElectionTitle& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 title = 1;
  void clear_title();
  static const int kTitleFieldNumber = 1;
  ::google::protobuf::uint32 title() const;
  void set_title(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqElectionTitle)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 title_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqElectionTitle> ReqElectionTitle_default_instance_;

// -------------------------------------------------------------------

class ElectionTitleAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ElectionTitleAck) */ {
 public:
  ElectionTitleAck();
  virtual ~ElectionTitleAck();

  ElectionTitleAck(const ElectionTitleAck& from);

  inline ElectionTitleAck& operator=(const ElectionTitleAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ElectionTitleAck& default_instance();

  static const ElectionTitleAck* internal_default_instance();

  void Swap(ElectionTitleAck* other);

  // implements Message ----------------------------------------------

  inline ElectionTitleAck* New() const { return New(NULL); }

  ElectionTitleAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ElectionTitleAck& from);
  void MergeFrom(const ElectionTitleAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ElectionTitleAck* other);
  void UnsafeMergeFrom(const ElectionTitleAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 title = 1;
  void clear_title();
  static const int kTitleFieldNumber = 1;
  ::google::protobuf::uint32 title() const;
  void set_title(::google::protobuf::uint32 value);

  // optional uint32 error = 2;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // optional uint32 playerNum = 3;
  void clear_playernum();
  static const int kPlayerNumFieldNumber = 3;
  ::google::protobuf::uint32 playernum() const;
  void set_playernum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ElectionTitleAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 title_;
  ::google::protobuf::uint32 error_;
  ::google::protobuf::uint32 playernum_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ElectionTitleAck> ElectionTitleAck_default_instance_;

// -------------------------------------------------------------------

class HeroClassSkill : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.HeroClassSkill) */ {
 public:
  HeroClassSkill();
  virtual ~HeroClassSkill();

  HeroClassSkill(const HeroClassSkill& from);

  inline HeroClassSkill& operator=(const HeroClassSkill& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroClassSkill& default_instance();

  static const HeroClassSkill* internal_default_instance();

  void Swap(HeroClassSkill* other);

  // implements Message ----------------------------------------------

  inline HeroClassSkill* New() const { return New(NULL); }

  HeroClassSkill* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroClassSkill& from);
  void MergeFrom(const HeroClassSkill& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HeroClassSkill* other);
  void UnsafeMergeFrom(const HeroClassSkill& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 skillId = 1;
  void clear_skillid();
  static const int kSkillIdFieldNumber = 1;
  ::google::protobuf::uint32 skillid() const;
  void set_skillid(::google::protobuf::uint32 value);

  // optional uint32 skillLv = 2;
  void clear_skilllv();
  static const int kSkillLvFieldNumber = 2;
  ::google::protobuf::uint32 skilllv() const;
  void set_skilllv(::google::protobuf::uint32 value);

  // optional uint32 exp = 3;
  void clear_exp();
  static const int kExpFieldNumber = 3;
  ::google::protobuf::uint32 exp() const;
  void set_exp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.HeroClassSkill)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 skillid_;
  ::google::protobuf::uint32 skilllv_;
  ::google::protobuf::uint32 exp_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<HeroClassSkill> HeroClassSkill_default_instance_;

// -------------------------------------------------------------------

class HeroClassInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.HeroClassInfo) */ {
 public:
  HeroClassInfo();
  virtual ~HeroClassInfo();

  HeroClassInfo(const HeroClassInfo& from);

  inline HeroClassInfo& operator=(const HeroClassInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroClassInfo& default_instance();

  static const HeroClassInfo* internal_default_instance();

  void Swap(HeroClassInfo* other);

  // implements Message ----------------------------------------------

  inline HeroClassInfo* New() const { return New(NULL); }

  HeroClassInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroClassInfo& from);
  void MergeFrom(const HeroClassInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HeroClassInfo* other);
  void UnsafeMergeFrom(const HeroClassInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 classId = 1;
  void clear_classid();
  static const int kClassIdFieldNumber = 1;
  ::google::protobuf::uint32 classid() const;
  void set_classid(::google::protobuf::uint32 value);

  // optional uint32 force = 2;
  void clear_force();
  static const int kForceFieldNumber = 2;
  ::google::protobuf::uint32 force() const;
  void set_force(::google::protobuf::uint32 value);

  // optional .NetMsg.HeroAttr star = 3;
  bool has_star() const;
  void clear_star();
  static const int kStarFieldNumber = 3;
  const ::NetMsg::HeroAttr& star() const;
  ::NetMsg::HeroAttr* mutable_star();
  ::NetMsg::HeroAttr* release_star();
  void set_allocated_star(::NetMsg::HeroAttr* star);

  // optional .NetMsg.HeroAttr strength = 4;
  bool has_strength() const;
  void clear_strength();
  static const int kStrengthFieldNumber = 4;
  const ::NetMsg::HeroAttr& strength() const;
  ::NetMsg::HeroAttr* mutable_strength();
  ::NetMsg::HeroAttr* release_strength();
  void set_allocated_strength(::NetMsg::HeroAttr* strength);

  // optional .NetMsg.HeroAttr leadership = 5;
  bool has_leadership() const;
  void clear_leadership();
  static const int kLeadershipFieldNumber = 5;
  const ::NetMsg::HeroAttr& leadership() const;
  ::NetMsg::HeroAttr* mutable_leadership();
  ::NetMsg::HeroAttr* release_leadership();
  void set_allocated_leadership(::NetMsg::HeroAttr* leadership);

  // optional .NetMsg.HeroAttr wisdom = 6;
  bool has_wisdom() const;
  void clear_wisdom();
  static const int kWisdomFieldNumber = 6;
  const ::NetMsg::HeroAttr& wisdom() const;
  ::NetMsg::HeroAttr* mutable_wisdom();
  ::NetMsg::HeroAttr* release_wisdom();
  void set_allocated_wisdom(::NetMsg::HeroAttr* wisdom);

  // optional .NetMsg.HeroAttr charm = 7;
  bool has_charm() const;
  void clear_charm();
  static const int kCharmFieldNumber = 7;
  const ::NetMsg::HeroAttr& charm() const;
  ::NetMsg::HeroAttr* mutable_charm();
  ::NetMsg::HeroAttr* release_charm();
  void set_allocated_charm(::NetMsg::HeroAttr* charm);

  // optional .NetMsg.HeroAttr luck = 8;
  bool has_luck() const;
  void clear_luck();
  static const int kLuckFieldNumber = 8;
  const ::NetMsg::HeroAttr& luck() const;
  ::NetMsg::HeroAttr* mutable_luck();
  ::NetMsg::HeroAttr* release_luck();
  void set_allocated_luck(::NetMsg::HeroAttr* luck);

  // repeated .NetMsg.HeroClassSkill skills = 9;
  int skills_size() const;
  void clear_skills();
  static const int kSkillsFieldNumber = 9;
  const ::NetMsg::HeroClassSkill& skills(int index) const;
  ::NetMsg::HeroClassSkill* mutable_skills(int index);
  ::NetMsg::HeroClassSkill* add_skills();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::HeroClassSkill >*
      mutable_skills();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::HeroClassSkill >&
      skills() const;

  // @@protoc_insertion_point(class_scope:NetMsg.HeroClassInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::HeroClassSkill > skills_;
  ::NetMsg::HeroAttr* star_;
  ::NetMsg::HeroAttr* strength_;
  ::NetMsg::HeroAttr* leadership_;
  ::NetMsg::HeroAttr* wisdom_;
  ::NetMsg::HeroAttr* charm_;
  ::NetMsg::HeroAttr* luck_;
  ::google::protobuf::uint32 classid_;
  ::google::protobuf::uint32 force_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<HeroClassInfo> HeroClassInfo_default_instance_;

// -------------------------------------------------------------------

class ReqHeroClass : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqHeroClass) */ {
 public:
  ReqHeroClass();
  virtual ~ReqHeroClass();

  ReqHeroClass(const ReqHeroClass& from);

  inline ReqHeroClass& operator=(const ReqHeroClass& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqHeroClass& default_instance();

  static const ReqHeroClass* internal_default_instance();

  void Swap(ReqHeroClass* other);

  // implements Message ----------------------------------------------

  inline ReqHeroClass* New() const { return New(NULL); }

  ReqHeroClass* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqHeroClass& from);
  void MergeFrom(const ReqHeroClass& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqHeroClass* other);
  void UnsafeMergeFrom(const ReqHeroClass& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 classId = 1;
  void clear_classid();
  static const int kClassIdFieldNumber = 1;
  ::google::protobuf::uint32 classid() const;
  void set_classid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqHeroClass)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 classid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqHeroClass> ReqHeroClass_default_instance_;

// -------------------------------------------------------------------

class HeroClassAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.HeroClassAck) */ {
 public:
  HeroClassAck();
  virtual ~HeroClassAck();

  HeroClassAck(const HeroClassAck& from);

  inline HeroClassAck& operator=(const HeroClassAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroClassAck& default_instance();

  static const HeroClassAck* internal_default_instance();

  void Swap(HeroClassAck* other);

  // implements Message ----------------------------------------------

  inline HeroClassAck* New() const { return New(NULL); }

  HeroClassAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroClassAck& from);
  void MergeFrom(const HeroClassAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HeroClassAck* other);
  void UnsafeMergeFrom(const HeroClassAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .NetMsg.HeroClassInfo hero = 1;
  bool has_hero() const;
  void clear_hero();
  static const int kHeroFieldNumber = 1;
  const ::NetMsg::HeroClassInfo& hero() const;
  ::NetMsg::HeroClassInfo* mutable_hero();
  ::NetMsg::HeroClassInfo* release_hero();
  void set_allocated_hero(::NetMsg::HeroClassInfo* hero);

  // @@protoc_insertion_point(class_scope:NetMsg.HeroClassAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NetMsg::HeroClassInfo* hero_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<HeroClassAck> HeroClassAck_default_instance_;

// -------------------------------------------------------------------

class ReqStudySkill : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqStudySkill) */ {
 public:
  ReqStudySkill();
  virtual ~ReqStudySkill();

  ReqStudySkill(const ReqStudySkill& from);

  inline ReqStudySkill& operator=(const ReqStudySkill& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqStudySkill& default_instance();

  static const ReqStudySkill* internal_default_instance();

  void Swap(ReqStudySkill* other);

  // implements Message ----------------------------------------------

  inline ReqStudySkill* New() const { return New(NULL); }

  ReqStudySkill* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqStudySkill& from);
  void MergeFrom(const ReqStudySkill& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqStudySkill* other);
  void UnsafeMergeFrom(const ReqStudySkill& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 heroId = 1;
  void clear_heroid();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::uint64 heroid() const;
  void set_heroid(::google::protobuf::uint64 value);

  // optional uint32 heroClass = 2;
  void clear_heroclass();
  static const int kHeroClassFieldNumber = 2;
  ::google::protobuf::uint32 heroclass() const;
  void set_heroclass(::google::protobuf::uint32 value);

  // optional uint32 skillId = 3;
  void clear_skillid();
  static const int kSkillIdFieldNumber = 3;
  ::google::protobuf::uint32 skillid() const;
  void set_skillid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqStudySkill)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 heroid_;
  ::google::protobuf::uint32 heroclass_;
  ::google::protobuf::uint32 skillid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqStudySkill> ReqStudySkill_default_instance_;

// -------------------------------------------------------------------

class StudySkillAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.StudySkillAck) */ {
 public:
  StudySkillAck();
  virtual ~StudySkillAck();

  StudySkillAck(const StudySkillAck& from);

  inline StudySkillAck& operator=(const StudySkillAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StudySkillAck& default_instance();

  static const StudySkillAck* internal_default_instance();

  void Swap(StudySkillAck* other);

  // implements Message ----------------------------------------------

  inline StudySkillAck* New() const { return New(NULL); }

  StudySkillAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StudySkillAck& from);
  void MergeFrom(const StudySkillAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StudySkillAck* other);
  void UnsafeMergeFrom(const StudySkillAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 heroId = 1;
  void clear_heroid();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::uint64 heroid() const;
  void set_heroid(::google::protobuf::uint64 value);

  // optional uint32 heroClass = 2;
  void clear_heroclass();
  static const int kHeroClassFieldNumber = 2;
  ::google::protobuf::uint32 heroclass() const;
  void set_heroclass(::google::protobuf::uint32 value);

  // optional uint32 skillId = 3;
  void clear_skillid();
  static const int kSkillIdFieldNumber = 3;
  ::google::protobuf::uint32 skillid() const;
  void set_skillid(::google::protobuf::uint32 value);

  // optional uint32 exp = 4;
  void clear_exp();
  static const int kExpFieldNumber = 4;
  ::google::protobuf::uint32 exp() const;
  void set_exp(::google::protobuf::uint32 value);

  // optional uint32 crit = 5;
  void clear_crit();
  static const int kCritFieldNumber = 5;
  ::google::protobuf::uint32 crit() const;
  void set_crit(::google::protobuf::uint32 value);

  // optional uint32 error = 6;
  void clear_error();
  static const int kErrorFieldNumber = 6;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.StudySkillAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 heroid_;
  ::google::protobuf::uint32 heroclass_;
  ::google::protobuf::uint32 skillid_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 crit_;
  ::google::protobuf::uint32 error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<StudySkillAck> StudySkillAck_default_instance_;

// -------------------------------------------------------------------

class ReqStudyProperty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqStudyProperty) */ {
 public:
  ReqStudyProperty();
  virtual ~ReqStudyProperty();

  ReqStudyProperty(const ReqStudyProperty& from);

  inline ReqStudyProperty& operator=(const ReqStudyProperty& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqStudyProperty& default_instance();

  static const ReqStudyProperty* internal_default_instance();

  void Swap(ReqStudyProperty* other);

  // implements Message ----------------------------------------------

  inline ReqStudyProperty* New() const { return New(NULL); }

  ReqStudyProperty* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqStudyProperty& from);
  void MergeFrom(const ReqStudyProperty& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqStudyProperty* other);
  void UnsafeMergeFrom(const ReqStudyProperty& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 heroId = 1;
  void clear_heroid();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::uint64 heroid() const;
  void set_heroid(::google::protobuf::uint64 value);

  // optional uint32 heroClass = 2;
  void clear_heroclass();
  static const int kHeroClassFieldNumber = 2;
  ::google::protobuf::uint32 heroclass() const;
  void set_heroclass(::google::protobuf::uint32 value);

  // optional .NetMsg.HeroPropertyType type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::NetMsg::HeroPropertyType type() const;
  void set_type(::NetMsg::HeroPropertyType value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqStudyProperty)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 heroid_;
  ::google::protobuf::uint32 heroclass_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqStudyProperty> ReqStudyProperty_default_instance_;

// -------------------------------------------------------------------

class StudyPropertyAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.StudyPropertyAck) */ {
 public:
  StudyPropertyAck();
  virtual ~StudyPropertyAck();

  StudyPropertyAck(const StudyPropertyAck& from);

  inline StudyPropertyAck& operator=(const StudyPropertyAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StudyPropertyAck& default_instance();

  static const StudyPropertyAck* internal_default_instance();

  void Swap(StudyPropertyAck* other);

  // implements Message ----------------------------------------------

  inline StudyPropertyAck* New() const { return New(NULL); }

  StudyPropertyAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StudyPropertyAck& from);
  void MergeFrom(const StudyPropertyAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StudyPropertyAck* other);
  void UnsafeMergeFrom(const StudyPropertyAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 heroId = 1;
  void clear_heroid();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::uint64 heroid() const;
  void set_heroid(::google::protobuf::uint64 value);

  // optional uint32 heroClass = 2;
  void clear_heroclass();
  static const int kHeroClassFieldNumber = 2;
  ::google::protobuf::uint32 heroclass() const;
  void set_heroclass(::google::protobuf::uint32 value);

  // optional .NetMsg.HeroPropertyType type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::NetMsg::HeroPropertyType type() const;
  void set_type(::NetMsg::HeroPropertyType value);

  // optional uint32 property = 4;
  void clear_property();
  static const int kPropertyFieldNumber = 4;
  ::google::protobuf::uint32 property() const;
  void set_property(::google::protobuf::uint32 value);

  // optional uint32 crit = 5;
  void clear_crit();
  static const int kCritFieldNumber = 5;
  ::google::protobuf::uint32 crit() const;
  void set_crit(::google::protobuf::uint32 value);

  // optional uint32 error = 6;
  void clear_error();
  static const int kErrorFieldNumber = 6;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.StudyPropertyAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 heroid_;
  ::google::protobuf::uint32 heroclass_;
  int type_;
  ::google::protobuf::uint32 property_;
  ::google::protobuf::uint32 crit_;
  ::google::protobuf::uint32 error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<StudyPropertyAck> StudyPropertyAck_default_instance_;

// -------------------------------------------------------------------

class ReqRaffleHero : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqRaffleHero) */ {
 public:
  ReqRaffleHero();
  virtual ~ReqRaffleHero();

  ReqRaffleHero(const ReqRaffleHero& from);

  inline ReqRaffleHero& operator=(const ReqRaffleHero& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqRaffleHero& default_instance();

  static const ReqRaffleHero* internal_default_instance();

  void Swap(ReqRaffleHero* other);

  // implements Message ----------------------------------------------

  inline ReqRaffleHero* New() const { return New(NULL); }

  ReqRaffleHero* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqRaffleHero& from);
  void MergeFrom(const ReqRaffleHero& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqRaffleHero* other);
  void UnsafeMergeFrom(const ReqRaffleHero& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional uint32 num = 2;
  void clear_num();
  static const int kNumFieldNumber = 2;
  ::google::protobuf::uint32 num() const;
  void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqRaffleHero)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 num_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqRaffleHero> ReqRaffleHero_default_instance_;

// -------------------------------------------------------------------

class RaffleHeroAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.RaffleHeroAck) */ {
 public:
  RaffleHeroAck();
  virtual ~RaffleHeroAck();

  RaffleHeroAck(const RaffleHeroAck& from);

  inline RaffleHeroAck& operator=(const RaffleHeroAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RaffleHeroAck& default_instance();

  static const RaffleHeroAck* internal_default_instance();

  void Swap(RaffleHeroAck* other);

  // implements Message ----------------------------------------------

  inline RaffleHeroAck* New() const { return New(NULL); }

  RaffleHeroAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RaffleHeroAck& from);
  void MergeFrom(const RaffleHeroAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RaffleHeroAck* other);
  void UnsafeMergeFrom(const RaffleHeroAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 heroUId = 1;
  int herouid_size() const;
  void clear_herouid();
  static const int kHeroUIdFieldNumber = 1;
  ::google::protobuf::uint64 herouid(int index) const;
  void set_herouid(int index, ::google::protobuf::uint64 value);
  void add_herouid(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      herouid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_herouid();

  // optional uint32 error = 2;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.RaffleHeroAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > herouid_;
  mutable int _herouid_cached_byte_size_;
  ::google::protobuf::uint32 error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RaffleHeroAck> RaffleHeroAck_default_instance_;

// -------------------------------------------------------------------

class ReqRaffleHeroTimes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqRaffleHeroTimes) */ {
 public:
  ReqRaffleHeroTimes();
  virtual ~ReqRaffleHeroTimes();

  ReqRaffleHeroTimes(const ReqRaffleHeroTimes& from);

  inline ReqRaffleHeroTimes& operator=(const ReqRaffleHeroTimes& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqRaffleHeroTimes& default_instance();

  static const ReqRaffleHeroTimes* internal_default_instance();

  void Swap(ReqRaffleHeroTimes* other);

  // implements Message ----------------------------------------------

  inline ReqRaffleHeroTimes* New() const { return New(NULL); }

  ReqRaffleHeroTimes* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqRaffleHeroTimes& from);
  void MergeFrom(const ReqRaffleHeroTimes& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqRaffleHeroTimes* other);
  void UnsafeMergeFrom(const ReqRaffleHeroTimes& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqRaffleHeroTimes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqRaffleHeroTimes> ReqRaffleHeroTimes_default_instance_;

// -------------------------------------------------------------------

class RaffleHeroTimesAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.RaffleHeroTimesAck) */ {
 public:
  RaffleHeroTimesAck();
  virtual ~RaffleHeroTimesAck();

  RaffleHeroTimesAck(const RaffleHeroTimesAck& from);

  inline RaffleHeroTimesAck& operator=(const RaffleHeroTimesAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RaffleHeroTimesAck& default_instance();

  static const RaffleHeroTimesAck* internal_default_instance();

  void Swap(RaffleHeroTimesAck* other);

  // implements Message ----------------------------------------------

  inline RaffleHeroTimesAck* New() const { return New(NULL); }

  RaffleHeroTimesAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RaffleHeroTimesAck& from);
  void MergeFrom(const RaffleHeroTimesAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RaffleHeroTimesAck* other);
  void UnsafeMergeFrom(const RaffleHeroTimesAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional uint32 times = 2;
  void clear_times();
  static const int kTimesFieldNumber = 2;
  ::google::protobuf::uint32 times() const;
  void set_times(::google::protobuf::uint32 value);

  // optional uint32 oneRaffTime = 3;
  void clear_onerafftime();
  static const int kOneRaffTimeFieldNumber = 3;
  ::google::protobuf::uint32 onerafftime() const;
  void set_onerafftime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.RaffleHeroTimesAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 times_;
  ::google::protobuf::uint32 onerafftime_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RaffleHeroTimesAck> RaffleHeroTimesAck_default_instance_;

// -------------------------------------------------------------------

class ReqAddMoney : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqAddMoney) */ {
 public:
  ReqAddMoney();
  virtual ~ReqAddMoney();

  ReqAddMoney(const ReqAddMoney& from);

  inline ReqAddMoney& operator=(const ReqAddMoney& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqAddMoney& default_instance();

  static const ReqAddMoney* internal_default_instance();

  void Swap(ReqAddMoney* other);

  // implements Message ----------------------------------------------

  inline ReqAddMoney* New() const { return New(NULL); }

  ReqAddMoney* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqAddMoney& from);
  void MergeFrom(const ReqAddMoney& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqAddMoney* other);
  void UnsafeMergeFrom(const ReqAddMoney& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional int32 add = 2;
  void clear_add();
  static const int kAddFieldNumber = 2;
  ::google::protobuf::int32 add() const;
  void set_add(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqAddMoney)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 add_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqAddMoney> ReqAddMoney_default_instance_;

// -------------------------------------------------------------------

class AddMoneyAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.AddMoneyAck) */ {
 public:
  AddMoneyAck();
  virtual ~AddMoneyAck();

  AddMoneyAck(const AddMoneyAck& from);

  inline AddMoneyAck& operator=(const AddMoneyAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddMoneyAck& default_instance();

  static const AddMoneyAck* internal_default_instance();

  void Swap(AddMoneyAck* other);

  // implements Message ----------------------------------------------

  inline AddMoneyAck* New() const { return New(NULL); }

  AddMoneyAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddMoneyAck& from);
  void MergeFrom(const AddMoneyAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AddMoneyAck* other);
  void UnsafeMergeFrom(const AddMoneyAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional int32 add = 2;
  void clear_add();
  static const int kAddFieldNumber = 2;
  ::google::protobuf::int32 add() const;
  void set_add(::google::protobuf::int32 value);

  // optional uint32 error = 3;
  void clear_error();
  static const int kErrorFieldNumber = 3;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.AddMoneyAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 add_;
  ::google::protobuf::uint32 error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AddMoneyAck> AddMoneyAck_default_instance_;

// -------------------------------------------------------------------

class ReqLevelUpCamp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqLevelUpCamp) */ {
 public:
  ReqLevelUpCamp();
  virtual ~ReqLevelUpCamp();

  ReqLevelUpCamp(const ReqLevelUpCamp& from);

  inline ReqLevelUpCamp& operator=(const ReqLevelUpCamp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqLevelUpCamp& default_instance();

  static const ReqLevelUpCamp* internal_default_instance();

  void Swap(ReqLevelUpCamp* other);

  // implements Message ----------------------------------------------

  inline ReqLevelUpCamp* New() const { return New(NULL); }

  ReqLevelUpCamp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqLevelUpCamp& from);
  void MergeFrom(const ReqLevelUpCamp& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqLevelUpCamp* other);
  void UnsafeMergeFrom(const ReqLevelUpCamp& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .NetMsg.CampType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::NetMsg::CampType type() const;
  void set_type(::NetMsg::CampType value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqLevelUpCamp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqLevelUpCamp> ReqLevelUpCamp_default_instance_;

// -------------------------------------------------------------------

class LevelUpCampAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.LevelUpCampAck) */ {
 public:
  LevelUpCampAck();
  virtual ~LevelUpCampAck();

  LevelUpCampAck(const LevelUpCampAck& from);

  inline LevelUpCampAck& operator=(const LevelUpCampAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LevelUpCampAck& default_instance();

  static const LevelUpCampAck* internal_default_instance();

  void Swap(LevelUpCampAck* other);

  // implements Message ----------------------------------------------

  inline LevelUpCampAck* New() const { return New(NULL); }

  LevelUpCampAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LevelUpCampAck& from);
  void MergeFrom(const LevelUpCampAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LevelUpCampAck* other);
  void UnsafeMergeFrom(const LevelUpCampAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .NetMsg.CampType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::NetMsg::CampType type() const;
  void set_type(::NetMsg::CampType value);

  // optional uint32 error = 3;
  void clear_error();
  static const int kErrorFieldNumber = 3;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.LevelUpCampAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int type_;
  ::google::protobuf::uint32 error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<LevelUpCampAck> LevelUpCampAck_default_instance_;

// -------------------------------------------------------------------

class ReqClearCampCD : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqClearCampCD) */ {
 public:
  ReqClearCampCD();
  virtual ~ReqClearCampCD();

  ReqClearCampCD(const ReqClearCampCD& from);

  inline ReqClearCampCD& operator=(const ReqClearCampCD& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqClearCampCD& default_instance();

  static const ReqClearCampCD* internal_default_instance();

  void Swap(ReqClearCampCD* other);

  // implements Message ----------------------------------------------

  inline ReqClearCampCD* New() const { return New(NULL); }

  ReqClearCampCD* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqClearCampCD& from);
  void MergeFrom(const ReqClearCampCD& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqClearCampCD* other);
  void UnsafeMergeFrom(const ReqClearCampCD& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .NetMsg.CampType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::NetMsg::CampType type() const;
  void set_type(::NetMsg::CampType value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqClearCampCD)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqClearCampCD> ReqClearCampCD_default_instance_;

// -------------------------------------------------------------------

class ClearCampCDAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ClearCampCDAck) */ {
 public:
  ClearCampCDAck();
  virtual ~ClearCampCDAck();

  ClearCampCDAck(const ClearCampCDAck& from);

  inline ClearCampCDAck& operator=(const ClearCampCDAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClearCampCDAck& default_instance();

  static const ClearCampCDAck* internal_default_instance();

  void Swap(ClearCampCDAck* other);

  // implements Message ----------------------------------------------

  inline ClearCampCDAck* New() const { return New(NULL); }

  ClearCampCDAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClearCampCDAck& from);
  void MergeFrom(const ClearCampCDAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClearCampCDAck* other);
  void UnsafeMergeFrom(const ClearCampCDAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .NetMsg.CampType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::NetMsg::CampType type() const;
  void set_type(::NetMsg::CampType value);

  // optional uint32 error = 2;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ClearCampCDAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int type_;
  ::google::protobuf::uint32 error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ClearCampCDAck> ClearCampCDAck_default_instance_;

// -------------------------------------------------------------------

class ReqCampState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqCampState) */ {
 public:
  ReqCampState();
  virtual ~ReqCampState();

  ReqCampState(const ReqCampState& from);

  inline ReqCampState& operator=(const ReqCampState& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqCampState& default_instance();

  static const ReqCampState* internal_default_instance();

  void Swap(ReqCampState* other);

  // implements Message ----------------------------------------------

  inline ReqCampState* New() const { return New(NULL); }

  ReqCampState* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqCampState& from);
  void MergeFrom(const ReqCampState& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqCampState* other);
  void UnsafeMergeFrom(const ReqCampState& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .NetMsg.CampType types = 1;
  int types_size() const;
  void clear_types();
  static const int kTypesFieldNumber = 1;
  ::NetMsg::CampType types(int index) const;
  void set_types(int index, ::NetMsg::CampType value);
  void add_types(::NetMsg::CampType value);
  const ::google::protobuf::RepeatedField<int>& types() const;
  ::google::protobuf::RepeatedField<int>* mutable_types();

  // @@protoc_insertion_point(class_scope:NetMsg.ReqCampState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField<int> types_;
  mutable int _types_cached_byte_size_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqCampState> ReqCampState_default_instance_;

// -------------------------------------------------------------------

class CampState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.CampState) */ {
 public:
  CampState();
  virtual ~CampState();

  CampState(const CampState& from);

  inline CampState& operator=(const CampState& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CampState& default_instance();

  static const CampState* internal_default_instance();

  void Swap(CampState* other);

  // implements Message ----------------------------------------------

  inline CampState* New() const { return New(NULL); }

  CampState* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CampState& from);
  void MergeFrom(const CampState& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CampState* other);
  void UnsafeMergeFrom(const CampState& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .NetMsg.CampType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::NetMsg::CampType type() const;
  void set_type(::NetMsg::CampType value);

  // optional uint32 level = 2;
  void clear_level();
  static const int kLevelFieldNumber = 2;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // optional uint32 outputData = 3;
  void clear_outputdata();
  static const int kOutputDataFieldNumber = 3;
  ::google::protobuf::uint32 outputdata() const;
  void set_outputdata(::google::protobuf::uint32 value);

  // optional uint32 leftTime = 4;
  void clear_lefttime();
  static const int kLeftTimeFieldNumber = 4;
  ::google::protobuf::uint32 lefttime() const;
  void set_lefttime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.CampState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int type_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 outputdata_;
  ::google::protobuf::uint32 lefttime_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CampState> CampState_default_instance_;

// -------------------------------------------------------------------

class CampStateAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.CampStateAck) */ {
 public:
  CampStateAck();
  virtual ~CampStateAck();

  CampStateAck(const CampStateAck& from);

  inline CampStateAck& operator=(const CampStateAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CampStateAck& default_instance();

  static const CampStateAck* internal_default_instance();

  void Swap(CampStateAck* other);

  // implements Message ----------------------------------------------

  inline CampStateAck* New() const { return New(NULL); }

  CampStateAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CampStateAck& from);
  void MergeFrom(const CampStateAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CampStateAck* other);
  void UnsafeMergeFrom(const CampStateAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .NetMsg.CampState states = 1;
  int states_size() const;
  void clear_states();
  static const int kStatesFieldNumber = 1;
  const ::NetMsg::CampState& states(int index) const;
  ::NetMsg::CampState* mutable_states(int index);
  ::NetMsg::CampState* add_states();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::CampState >*
      mutable_states();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::CampState >&
      states() const;

  // @@protoc_insertion_point(class_scope:NetMsg.CampStateAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::CampState > states_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CampStateAck> CampStateAck_default_instance_;

// -------------------------------------------------------------------

class ReqGetCampOut : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqGetCampOut) */ {
 public:
  ReqGetCampOut();
  virtual ~ReqGetCampOut();

  ReqGetCampOut(const ReqGetCampOut& from);

  inline ReqGetCampOut& operator=(const ReqGetCampOut& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqGetCampOut& default_instance();

  static const ReqGetCampOut* internal_default_instance();

  void Swap(ReqGetCampOut* other);

  // implements Message ----------------------------------------------

  inline ReqGetCampOut* New() const { return New(NULL); }

  ReqGetCampOut* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqGetCampOut& from);
  void MergeFrom(const ReqGetCampOut& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqGetCampOut* other);
  void UnsafeMergeFrom(const ReqGetCampOut& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .NetMsg.CampType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::NetMsg::CampType type() const;
  void set_type(::NetMsg::CampType value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqGetCampOut)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqGetCampOut> ReqGetCampOut_default_instance_;

// -------------------------------------------------------------------

class GetCampOutAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.GetCampOutAck) */ {
 public:
  GetCampOutAck();
  virtual ~GetCampOutAck();

  GetCampOutAck(const GetCampOutAck& from);

  inline GetCampOutAck& operator=(const GetCampOutAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCampOutAck& default_instance();

  static const GetCampOutAck* internal_default_instance();

  void Swap(GetCampOutAck* other);

  // implements Message ----------------------------------------------

  inline GetCampOutAck* New() const { return New(NULL); }

  GetCampOutAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetCampOutAck& from);
  void MergeFrom(const GetCampOutAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetCampOutAck* other);
  void UnsafeMergeFrom(const GetCampOutAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .NetMsg.CampType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::NetMsg::CampType type() const;
  void set_type(::NetMsg::CampType value);

  // optional uint32 output = 2;
  void clear_output();
  static const int kOutputFieldNumber = 2;
  ::google::protobuf::uint32 output() const;
  void set_output(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.GetCampOutAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int type_;
  ::google::protobuf::uint32 output_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GetCampOutAck> GetCampOutAck_default_instance_;

// -------------------------------------------------------------------

class CycleBattleAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.CycleBattleAck) */ {
 public:
  CycleBattleAck();
  virtual ~CycleBattleAck();

  CycleBattleAck(const CycleBattleAck& from);

  inline CycleBattleAck& operator=(const CycleBattleAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CycleBattleAck& default_instance();

  static const CycleBattleAck* internal_default_instance();

  void Swap(CycleBattleAck* other);

  // implements Message ----------------------------------------------

  inline CycleBattleAck* New() const { return New(NULL); }

  CycleBattleAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CycleBattleAck& from);
  void MergeFrom(const CycleBattleAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CycleBattleAck* other);
  void UnsafeMergeFrom(const CycleBattleAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 maxDifficulty = 1;
  void clear_maxdifficulty();
  static const int kMaxDifficultyFieldNumber = 1;
  ::google::protobuf::uint32 maxdifficulty() const;
  void set_maxdifficulty(::google::protobuf::uint32 value);

  // optional uint32 curDifficulty = 2;
  void clear_curdifficulty();
  static const int kCurDifficultyFieldNumber = 2;
  ::google::protobuf::uint32 curdifficulty() const;
  void set_curdifficulty(::google::protobuf::uint32 value);

  // optional uint32 curRound = 3;
  void clear_curround();
  static const int kCurRoundFieldNumber = 3;
  ::google::protobuf::uint32 curround() const;
  void set_curround(::google::protobuf::uint32 value);

  // optional uint32 leftUnlockTimes = 4;
  void clear_leftunlocktimes();
  static const int kLeftUnlockTimesFieldNumber = 4;
  ::google::protobuf::uint32 leftunlocktimes() const;
  void set_leftunlocktimes(::google::protobuf::uint32 value);

  // optional uint32 leftTime = 5;
  void clear_lefttime();
  static const int kLeftTimeFieldNumber = 5;
  ::google::protobuf::uint32 lefttime() const;
  void set_lefttime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.CycleBattleAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 maxdifficulty_;
  ::google::protobuf::uint32 curdifficulty_;
  ::google::protobuf::uint32 curround_;
  ::google::protobuf::uint32 leftunlocktimes_;
  ::google::protobuf::uint32 lefttime_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CycleBattleAck> CycleBattleAck_default_instance_;

// -------------------------------------------------------------------

class RefresshCycleAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.RefresshCycleAck) */ {
 public:
  RefresshCycleAck();
  virtual ~RefresshCycleAck();

  RefresshCycleAck(const RefresshCycleAck& from);

  inline RefresshCycleAck& operator=(const RefresshCycleAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RefresshCycleAck& default_instance();

  static const RefresshCycleAck* internal_default_instance();

  void Swap(RefresshCycleAck* other);

  // implements Message ----------------------------------------------

  inline RefresshCycleAck* New() const { return New(NULL); }

  RefresshCycleAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RefresshCycleAck& from);
  void MergeFrom(const RefresshCycleAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RefresshCycleAck* other);
  void UnsafeMergeFrom(const RefresshCycleAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 error = 1;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.RefresshCycleAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RefresshCycleAck> RefresshCycleAck_default_instance_;

// -------------------------------------------------------------------

class ReqSelectCycleDiff : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqSelectCycleDiff) */ {
 public:
  ReqSelectCycleDiff();
  virtual ~ReqSelectCycleDiff();

  ReqSelectCycleDiff(const ReqSelectCycleDiff& from);

  inline ReqSelectCycleDiff& operator=(const ReqSelectCycleDiff& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqSelectCycleDiff& default_instance();

  static const ReqSelectCycleDiff* internal_default_instance();

  void Swap(ReqSelectCycleDiff* other);

  // implements Message ----------------------------------------------

  inline ReqSelectCycleDiff* New() const { return New(NULL); }

  ReqSelectCycleDiff* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqSelectCycleDiff& from);
  void MergeFrom(const ReqSelectCycleDiff& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqSelectCycleDiff* other);
  void UnsafeMergeFrom(const ReqSelectCycleDiff& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 difficulty = 1;
  void clear_difficulty();
  static const int kDifficultyFieldNumber = 1;
  ::google::protobuf::uint32 difficulty() const;
  void set_difficulty(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqSelectCycleDiff)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 difficulty_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqSelectCycleDiff> ReqSelectCycleDiff_default_instance_;

// -------------------------------------------------------------------

class SelectCycleDiffAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.SelectCycleDiffAck) */ {
 public:
  SelectCycleDiffAck();
  virtual ~SelectCycleDiffAck();

  SelectCycleDiffAck(const SelectCycleDiffAck& from);

  inline SelectCycleDiffAck& operator=(const SelectCycleDiffAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SelectCycleDiffAck& default_instance();

  static const SelectCycleDiffAck* internal_default_instance();

  void Swap(SelectCycleDiffAck* other);

  // implements Message ----------------------------------------------

  inline SelectCycleDiffAck* New() const { return New(NULL); }

  SelectCycleDiffAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SelectCycleDiffAck& from);
  void MergeFrom(const SelectCycleDiffAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SelectCycleDiffAck* other);
  void UnsafeMergeFrom(const SelectCycleDiffAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 difficulty = 1;
  void clear_difficulty();
  static const int kDifficultyFieldNumber = 1;
  ::google::protobuf::uint32 difficulty() const;
  void set_difficulty(::google::protobuf::uint32 value);

  // optional uint32 error = 2;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.SelectCycleDiffAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 difficulty_;
  ::google::protobuf::uint32 error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SelectCycleDiffAck> SelectCycleDiffAck_default_instance_;

// -------------------------------------------------------------------

class CycleBattleInfoAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.CycleBattleInfoAck) */ {
 public:
  CycleBattleInfoAck();
  virtual ~CycleBattleInfoAck();

  CycleBattleInfoAck(const CycleBattleInfoAck& from);

  inline CycleBattleInfoAck& operator=(const CycleBattleInfoAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CycleBattleInfoAck& default_instance();

  static const CycleBattleInfoAck* internal_default_instance();

  void Swap(CycleBattleInfoAck* other);

  // implements Message ----------------------------------------------

  inline CycleBattleInfoAck* New() const { return New(NULL); }

  CycleBattleInfoAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CycleBattleInfoAck& from);
  void MergeFrom(const CycleBattleInfoAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CycleBattleInfoAck* other);
  void UnsafeMergeFrom(const CycleBattleInfoAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 enemyPath = 1;
  void clear_enemypath();
  static const int kEnemyPathFieldNumber = 1;
  ::google::protobuf::uint32 enemypath() const;
  void set_enemypath(::google::protobuf::uint32 value);

  // optional float percent = 2;
  void clear_percent();
  static const int kPercentFieldNumber = 2;
  float percent() const;
  void set_percent(float value);

  // optional uint64 battleId = 3;
  void clear_battleid();
  static const int kBattleIdFieldNumber = 3;
  ::google::protobuf::uint64 battleid() const;
  void set_battleid(::google::protobuf::uint64 value);

  // optional uint32 enemyTeam = 4;
  void clear_enemyteam();
  static const int kEnemyTeamFieldNumber = 4;
  ::google::protobuf::uint32 enemyteam() const;
  void set_enemyteam(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.CycleBattleInfoAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 enemypath_;
  float percent_;
  ::google::protobuf::uint64 battleid_;
  ::google::protobuf::uint32 enemyteam_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CycleBattleInfoAck> CycleBattleInfoAck_default_instance_;

// -------------------------------------------------------------------

class AdvantureEventStatusChange : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.AdvantureEventStatusChange) */ {
 public:
  AdvantureEventStatusChange();
  virtual ~AdvantureEventStatusChange();

  AdvantureEventStatusChange(const AdvantureEventStatusChange& from);

  inline AdvantureEventStatusChange& operator=(const AdvantureEventStatusChange& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AdvantureEventStatusChange& default_instance();

  static const AdvantureEventStatusChange* internal_default_instance();

  void Swap(AdvantureEventStatusChange* other);

  // implements Message ----------------------------------------------

  inline AdvantureEventStatusChange* New() const { return New(NULL); }

  AdvantureEventStatusChange* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AdvantureEventStatusChange& from);
  void MergeFrom(const AdvantureEventStatusChange& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AdvantureEventStatusChange* other);
  void UnsafeMergeFrom(const AdvantureEventStatusChange& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 advEventId = 1;
  void clear_adveventid();
  static const int kAdvEventIdFieldNumber = 1;
  ::google::protobuf::uint32 adveventid() const;
  void set_adveventid(::google::protobuf::uint32 value);

  // optional .NetMsg.AdvantureEventStatus advEventStatus = 2;
  void clear_adveventstatus();
  static const int kAdvEventStatusFieldNumber = 2;
  ::NetMsg::AdvantureEventStatus adveventstatus() const;
  void set_adveventstatus(::NetMsg::AdvantureEventStatus value);

  // @@protoc_insertion_point(class_scope:NetMsg.AdvantureEventStatusChange)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 adveventid_;
  int adveventstatus_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AdvantureEventStatusChange> AdvantureEventStatusChange_default_instance_;

// -------------------------------------------------------------------

class ReqRecruitHero : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqRecruitHero) */ {
 public:
  ReqRecruitHero();
  virtual ~ReqRecruitHero();

  ReqRecruitHero(const ReqRecruitHero& from);

  inline ReqRecruitHero& operator=(const ReqRecruitHero& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqRecruitHero& default_instance();

  static const ReqRecruitHero* internal_default_instance();

  void Swap(ReqRecruitHero* other);

  // implements Message ----------------------------------------------

  inline ReqRecruitHero* New() const { return New(NULL); }

  ReqRecruitHero* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqRecruitHero& from);
  void MergeFrom(const ReqRecruitHero& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqRecruitHero* other);
  void UnsafeMergeFrom(const ReqRecruitHero& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 recruitId = 1;
  void clear_recruitid();
  static const int kRecruitIdFieldNumber = 1;
  ::google::protobuf::uint32 recruitid() const;
  void set_recruitid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqRecruitHero)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 recruitid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqRecruitHero> ReqRecruitHero_default_instance_;

// -------------------------------------------------------------------

class RecruitHeroAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.RecruitHeroAck) */ {
 public:
  RecruitHeroAck();
  virtual ~RecruitHeroAck();

  RecruitHeroAck(const RecruitHeroAck& from);

  inline RecruitHeroAck& operator=(const RecruitHeroAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RecruitHeroAck& default_instance();

  static const RecruitHeroAck* internal_default_instance();

  void Swap(RecruitHeroAck* other);

  // implements Message ----------------------------------------------

  inline RecruitHeroAck* New() const { return New(NULL); }

  RecruitHeroAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RecruitHeroAck& from);
  void MergeFrom(const RecruitHeroAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RecruitHeroAck* other);
  void UnsafeMergeFrom(const RecruitHeroAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 recruitId = 1;
  void clear_recruitid();
  static const int kRecruitIdFieldNumber = 1;
  ::google::protobuf::uint32 recruitid() const;
  void set_recruitid(::google::protobuf::uint32 value);

  // optional uint32 error = 2;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.RecruitHeroAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 recruitid_;
  ::google::protobuf::uint32 error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RecruitHeroAck> RecruitHeroAck_default_instance_;

// -------------------------------------------------------------------

class ReqRecruitedHero : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqRecruitedHero) */ {
 public:
  ReqRecruitedHero();
  virtual ~ReqRecruitedHero();

  ReqRecruitedHero(const ReqRecruitedHero& from);

  inline ReqRecruitedHero& operator=(const ReqRecruitedHero& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqRecruitedHero& default_instance();

  static const ReqRecruitedHero* internal_default_instance();

  void Swap(ReqRecruitedHero* other);

  // implements Message ----------------------------------------------

  inline ReqRecruitedHero* New() const { return New(NULL); }

  ReqRecruitedHero* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqRecruitedHero& from);
  void MergeFrom(const ReqRecruitedHero& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqRecruitedHero* other);
  void UnsafeMergeFrom(const ReqRecruitedHero& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 recruitIds = 1;
  int recruitids_size() const;
  void clear_recruitids();
  static const int kRecruitIdsFieldNumber = 1;
  ::google::protobuf::uint32 recruitids(int index) const;
  void set_recruitids(int index, ::google::protobuf::uint32 value);
  void add_recruitids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      recruitids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_recruitids();

  // @@protoc_insertion_point(class_scope:NetMsg.ReqRecruitedHero)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > recruitids_;
  mutable int _recruitids_cached_byte_size_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqRecruitedHero> ReqRecruitedHero_default_instance_;

// -------------------------------------------------------------------

class RecruitedHeroAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.RecruitedHeroAck) */ {
 public:
  RecruitedHeroAck();
  virtual ~RecruitedHeroAck();

  RecruitedHeroAck(const RecruitedHeroAck& from);

  inline RecruitedHeroAck& operator=(const RecruitedHeroAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RecruitedHeroAck& default_instance();

  static const RecruitedHeroAck* internal_default_instance();

  void Swap(RecruitedHeroAck* other);

  // implements Message ----------------------------------------------

  inline RecruitedHeroAck* New() const { return New(NULL); }

  RecruitedHeroAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RecruitedHeroAck& from);
  void MergeFrom(const RecruitedHeroAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RecruitedHeroAck* other);
  void UnsafeMergeFrom(const RecruitedHeroAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 recruitId = 1;
  int recruitid_size() const;
  void clear_recruitid();
  static const int kRecruitIdFieldNumber = 1;
  ::google::protobuf::uint32 recruitid(int index) const;
  void set_recruitid(int index, ::google::protobuf::uint32 value);
  void add_recruitid(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      recruitid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_recruitid();

  // repeated bool recruited = 2;
  int recruited_size() const;
  void clear_recruited();
  static const int kRecruitedFieldNumber = 2;
  bool recruited(int index) const;
  void set_recruited(int index, bool value);
  void add_recruited(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      recruited() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_recruited();

  // @@protoc_insertion_point(class_scope:NetMsg.RecruitedHeroAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > recruitid_;
  mutable int _recruitid_cached_byte_size_;
  ::google::protobuf::RepeatedField< bool > recruited_;
  mutable int _recruited_cached_byte_size_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RecruitedHeroAck> RecruitedHeroAck_default_instance_;

// -------------------------------------------------------------------

class ReqVSBattleBegin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqVSBattleBegin) */ {
 public:
  ReqVSBattleBegin();
  virtual ~ReqVSBattleBegin();

  ReqVSBattleBegin(const ReqVSBattleBegin& from);

  inline ReqVSBattleBegin& operator=(const ReqVSBattleBegin& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqVSBattleBegin& default_instance();

  static const ReqVSBattleBegin* internal_default_instance();

  void Swap(ReqVSBattleBegin* other);

  // implements Message ----------------------------------------------

  inline ReqVSBattleBegin* New() const { return New(NULL); }

  ReqVSBattleBegin* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqVSBattleBegin& from);
  void MergeFrom(const ReqVSBattleBegin& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqVSBattleBegin* other);
  void UnsafeMergeFrom(const ReqVSBattleBegin& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // optional uint32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional uint64 heroId = 3;
  void clear_heroid();
  static const int kHeroIdFieldNumber = 3;
  ::google::protobuf::uint64 heroid() const;
  void set_heroid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqVSBattleBegin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint64 heroid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqVSBattleBegin> ReqVSBattleBegin_default_instance_;

// -------------------------------------------------------------------

class VSBattleEnemy : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.VSBattleEnemy) */ {
 public:
  VSBattleEnemy();
  virtual ~VSBattleEnemy();

  VSBattleEnemy(const VSBattleEnemy& from);

  inline VSBattleEnemy& operator=(const VSBattleEnemy& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VSBattleEnemy& default_instance();

  static const VSBattleEnemy* internal_default_instance();

  void Swap(VSBattleEnemy* other);

  // implements Message ----------------------------------------------

  inline VSBattleEnemy* New() const { return New(NULL); }

  VSBattleEnemy* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VSBattleEnemy& from);
  void MergeFrom(const VSBattleEnemy& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(VSBattleEnemy* other);
  void UnsafeMergeFrom(const VSBattleEnemy& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional uint32 star = 2;
  void clear_star();
  static const int kStarFieldNumber = 2;
  ::google::protobuf::uint32 star() const;
  void set_star(::google::protobuf::uint32 value);

  // optional uint32 nuqi = 3;
  void clear_nuqi();
  static const int kNuqiFieldNumber = 3;
  ::google::protobuf::uint32 nuqi() const;
  void set_nuqi(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.VSBattleEnemy)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 star_;
  ::google::protobuf::uint32 nuqi_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<VSBattleEnemy> VSBattleEnemy_default_instance_;

// -------------------------------------------------------------------

class VSBattleBeginAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.VSBattleBeginAck) */ {
 public:
  VSBattleBeginAck();
  virtual ~VSBattleBeginAck();

  VSBattleBeginAck(const VSBattleBeginAck& from);

  inline VSBattleBeginAck& operator=(const VSBattleBeginAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VSBattleBeginAck& default_instance();

  static const VSBattleBeginAck* internal_default_instance();

  void Swap(VSBattleBeginAck* other);

  // implements Message ----------------------------------------------

  inline VSBattleBeginAck* New() const { return New(NULL); }

  VSBattleBeginAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VSBattleBeginAck& from);
  void MergeFrom(const VSBattleBeginAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(VSBattleBeginAck* other);
  void UnsafeMergeFrom(const VSBattleBeginAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 battleId = 1;
  void clear_battleid();
  static const int kBattleIdFieldNumber = 1;
  ::google::protobuf::uint64 battleid() const;
  void set_battleid(::google::protobuf::uint64 value);

  // optional uint32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // optional uint32 id = 3;
  void clear_id();
  static const int kIdFieldNumber = 3;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // repeated .NetMsg.VSBattleEnemy enemys = 4;
  int enemys_size() const;
  void clear_enemys();
  static const int kEnemysFieldNumber = 4;
  const ::NetMsg::VSBattleEnemy& enemys(int index) const;
  ::NetMsg::VSBattleEnemy* mutable_enemys(int index);
  ::NetMsg::VSBattleEnemy* add_enemys();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::VSBattleEnemy >*
      mutable_enemys();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::VSBattleEnemy >&
      enemys() const;

  // optional uint32 error = 5;
  void clear_error();
  static const int kErrorFieldNumber = 5;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.VSBattleBeginAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::VSBattleEnemy > enemys_;
  ::google::protobuf::uint64 battleid_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<VSBattleBeginAck> VSBattleBeginAck_default_instance_;

// -------------------------------------------------------------------

class ReqVSBattleReady : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqVSBattleReady) */ {
 public:
  ReqVSBattleReady();
  virtual ~ReqVSBattleReady();

  ReqVSBattleReady(const ReqVSBattleReady& from);

  inline ReqVSBattleReady& operator=(const ReqVSBattleReady& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqVSBattleReady& default_instance();

  static const ReqVSBattleReady* internal_default_instance();

  void Swap(ReqVSBattleReady* other);

  // implements Message ----------------------------------------------

  inline ReqVSBattleReady* New() const { return New(NULL); }

  ReqVSBattleReady* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqVSBattleReady& from);
  void MergeFrom(const ReqVSBattleReady& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqVSBattleReady* other);
  void UnsafeMergeFrom(const ReqVSBattleReady& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 battleId = 1;
  void clear_battleid();
  static const int kBattleIdFieldNumber = 1;
  ::google::protobuf::uint64 battleid() const;
  void set_battleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqVSBattleReady)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 battleid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqVSBattleReady> ReqVSBattleReady_default_instance_;

// -------------------------------------------------------------------

class VSBattleReadyAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.VSBattleReadyAck) */ {
 public:
  VSBattleReadyAck();
  virtual ~VSBattleReadyAck();

  VSBattleReadyAck(const VSBattleReadyAck& from);

  inline VSBattleReadyAck& operator=(const VSBattleReadyAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VSBattleReadyAck& default_instance();

  static const VSBattleReadyAck* internal_default_instance();

  void Swap(VSBattleReadyAck* other);

  // implements Message ----------------------------------------------

  inline VSBattleReadyAck* New() const { return New(NULL); }

  VSBattleReadyAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VSBattleReadyAck& from);
  void MergeFrom(const VSBattleReadyAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(VSBattleReadyAck* other);
  void UnsafeMergeFrom(const VSBattleReadyAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 battleId = 1;
  void clear_battleid();
  static const int kBattleIdFieldNumber = 1;
  ::google::protobuf::uint64 battleid() const;
  void set_battleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:NetMsg.VSBattleReadyAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 battleid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<VSBattleReadyAck> VSBattleReadyAck_default_instance_;

// -------------------------------------------------------------------

class ReqVSBattleOpt : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqVSBattleOpt) */ {
 public:
  ReqVSBattleOpt();
  virtual ~ReqVSBattleOpt();

  ReqVSBattleOpt(const ReqVSBattleOpt& from);

  inline ReqVSBattleOpt& operator=(const ReqVSBattleOpt& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqVSBattleOpt& default_instance();

  static const ReqVSBattleOpt* internal_default_instance();

  void Swap(ReqVSBattleOpt* other);

  // implements Message ----------------------------------------------

  inline ReqVSBattleOpt* New() const { return New(NULL); }

  ReqVSBattleOpt* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqVSBattleOpt& from);
  void MergeFrom(const ReqVSBattleOpt& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqVSBattleOpt* other);
  void UnsafeMergeFrom(const ReqVSBattleOpt& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 battleId = 1;
  void clear_battleid();
  static const int kBattleIdFieldNumber = 1;
  ::google::protobuf::uint64 battleid() const;
  void set_battleid(::google::protobuf::uint64 value);

  // optional uint32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // optional uint32 turn = 3;
  void clear_turn();
  static const int kTurnFieldNumber = 3;
  ::google::protobuf::uint32 turn() const;
  void set_turn(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqVSBattleOpt)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 battleid_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 turn_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqVSBattleOpt> ReqVSBattleOpt_default_instance_;

// -------------------------------------------------------------------

class VSBattleOptAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.VSBattleOptAck) */ {
 public:
  VSBattleOptAck();
  virtual ~VSBattleOptAck();

  VSBattleOptAck(const VSBattleOptAck& from);

  inline VSBattleOptAck& operator=(const VSBattleOptAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VSBattleOptAck& default_instance();

  static const VSBattleOptAck* internal_default_instance();

  void Swap(VSBattleOptAck* other);

  // implements Message ----------------------------------------------

  inline VSBattleOptAck* New() const { return New(NULL); }

  VSBattleOptAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VSBattleOptAck& from);
  void MergeFrom(const VSBattleOptAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(VSBattleOptAck* other);
  void UnsafeMergeFrom(const VSBattleOptAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 battleId = 1;
  void clear_battleid();
  static const int kBattleIdFieldNumber = 1;
  ::google::protobuf::uint64 battleid() const;
  void set_battleid(::google::protobuf::uint64 value);

  // optional uint32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // optional uint32 turn = 3;
  void clear_turn();
  static const int kTurnFieldNumber = 3;
  ::google::protobuf::uint32 turn() const;
  void set_turn(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.VSBattleOptAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 battleid_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 turn_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<VSBattleOptAck> VSBattleOptAck_default_instance_;

// -------------------------------------------------------------------

class VSBattleUnitState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.VSBattleUnitState) */ {
 public:
  VSBattleUnitState();
  virtual ~VSBattleUnitState();

  VSBattleUnitState(const VSBattleUnitState& from);

  inline VSBattleUnitState& operator=(const VSBattleUnitState& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VSBattleUnitState& default_instance();

  static const VSBattleUnitState* internal_default_instance();

  void Swap(VSBattleUnitState* other);

  // implements Message ----------------------------------------------

  inline VSBattleUnitState* New() const { return New(NULL); }

  VSBattleUnitState* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VSBattleUnitState& from);
  void MergeFrom(const VSBattleUnitState& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(VSBattleUnitState* other);
  void UnsafeMergeFrom(const VSBattleUnitState& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 battleId = 1;
  void clear_battleid();
  static const int kBattleIdFieldNumber = 1;
  ::google::protobuf::uint64 battleid() const;
  void set_battleid(::google::protobuf::uint64 value);

  // optional uint32 hp = 2;
  void clear_hp();
  static const int kHpFieldNumber = 2;
  ::google::protobuf::uint32 hp() const;
  void set_hp(::google::protobuf::uint32 value);

  // optional uint32 nuqi = 3;
  void clear_nuqi();
  static const int kNuqiFieldNumber = 3;
  ::google::protobuf::uint32 nuqi() const;
  void set_nuqi(::google::protobuf::uint32 value);

  // optional uint32 optType = 4;
  void clear_opttype();
  static const int kOptTypeFieldNumber = 4;
  ::google::protobuf::uint32 opttype() const;
  void set_opttype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.VSBattleUnitState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 battleid_;
  ::google::protobuf::uint32 hp_;
  ::google::protobuf::uint32 nuqi_;
  ::google::protobuf::uint32 opttype_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<VSBattleUnitState> VSBattleUnitState_default_instance_;

// -------------------------------------------------------------------

class VSBattleTurn : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.VSBattleTurn) */ {
 public:
  VSBattleTurn();
  virtual ~VSBattleTurn();

  VSBattleTurn(const VSBattleTurn& from);

  inline VSBattleTurn& operator=(const VSBattleTurn& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VSBattleTurn& default_instance();

  static const VSBattleTurn* internal_default_instance();

  void Swap(VSBattleTurn* other);

  // implements Message ----------------------------------------------

  inline VSBattleTurn* New() const { return New(NULL); }

  VSBattleTurn* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VSBattleTurn& from);
  void MergeFrom(const VSBattleTurn& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(VSBattleTurn* other);
  void UnsafeMergeFrom(const VSBattleTurn& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 battleId = 1;
  void clear_battleid();
  static const int kBattleIdFieldNumber = 1;
  ::google::protobuf::uint64 battleid() const;
  void set_battleid(::google::protobuf::uint64 value);

  // optional .NetMsg.VSBattleUnitState meState = 2;
  bool has_mestate() const;
  void clear_mestate();
  static const int kMeStateFieldNumber = 2;
  const ::NetMsg::VSBattleUnitState& mestate() const;
  ::NetMsg::VSBattleUnitState* mutable_mestate();
  ::NetMsg::VSBattleUnitState* release_mestate();
  void set_allocated_mestate(::NetMsg::VSBattleUnitState* mestate);

  // optional .NetMsg.VSBattleUnitState otherState = 3;
  bool has_otherstate() const;
  void clear_otherstate();
  static const int kOtherStateFieldNumber = 3;
  const ::NetMsg::VSBattleUnitState& otherstate() const;
  ::NetMsg::VSBattleUnitState* mutable_otherstate();
  ::NetMsg::VSBattleUnitState* release_otherstate();
  void set_allocated_otherstate(::NetMsg::VSBattleUnitState* otherstate);

  // @@protoc_insertion_point(class_scope:NetMsg.VSBattleTurn)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NetMsg::VSBattleUnitState* mestate_;
  ::NetMsg::VSBattleUnitState* otherstate_;
  ::google::protobuf::uint64 battleid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<VSBattleTurn> VSBattleTurn_default_instance_;

// -------------------------------------------------------------------

class VSBattleEnd : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.VSBattleEnd) */ {
 public:
  VSBattleEnd();
  virtual ~VSBattleEnd();

  VSBattleEnd(const VSBattleEnd& from);

  inline VSBattleEnd& operator=(const VSBattleEnd& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VSBattleEnd& default_instance();

  static const VSBattleEnd* internal_default_instance();

  void Swap(VSBattleEnd* other);

  // implements Message ----------------------------------------------

  inline VSBattleEnd* New() const { return New(NULL); }

  VSBattleEnd* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VSBattleEnd& from);
  void MergeFrom(const VSBattleEnd& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(VSBattleEnd* other);
  void UnsafeMergeFrom(const VSBattleEnd& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 battleId = 1;
  void clear_battleid();
  static const int kBattleIdFieldNumber = 1;
  ::google::protobuf::uint64 battleid() const;
  void set_battleid(::google::protobuf::uint64 value);

  // optional uint32 victory = 2;
  void clear_victory();
  static const int kVictoryFieldNumber = 2;
  ::google::protobuf::uint32 victory() const;
  void set_victory(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.VSBattleEnd)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 battleid_;
  ::google::protobuf::uint32 victory_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<VSBattleEnd> VSBattleEnd_default_instance_;

// -------------------------------------------------------------------

class ReqBioHeroInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqBioHeroInfo) */ {
 public:
  ReqBioHeroInfo();
  virtual ~ReqBioHeroInfo();

  ReqBioHeroInfo(const ReqBioHeroInfo& from);

  inline ReqBioHeroInfo& operator=(const ReqBioHeroInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqBioHeroInfo& default_instance();

  static const ReqBioHeroInfo* internal_default_instance();

  void Swap(ReqBioHeroInfo* other);

  // implements Message ----------------------------------------------

  inline ReqBioHeroInfo* New() const { return New(NULL); }

  ReqBioHeroInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqBioHeroInfo& from);
  void MergeFrom(const ReqBioHeroInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqBioHeroInfo* other);
  void UnsafeMergeFrom(const ReqBioHeroInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 heroClass = 1;
  void clear_heroclass();
  static const int kHeroClassFieldNumber = 1;
  ::google::protobuf::uint32 heroclass() const;
  void set_heroclass(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqBioHeroInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 heroclass_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqBioHeroInfo> ReqBioHeroInfo_default_instance_;

// -------------------------------------------------------------------

class BioHeroStepData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.BioHeroStepData) */ {
 public:
  BioHeroStepData();
  virtual ~BioHeroStepData();

  BioHeroStepData(const BioHeroStepData& from);

  inline BioHeroStepData& operator=(const BioHeroStepData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BioHeroStepData& default_instance();

  static const BioHeroStepData* internal_default_instance();

  void Swap(BioHeroStepData* other);

  // implements Message ----------------------------------------------

  inline BioHeroStepData* New() const { return New(NULL); }

  BioHeroStepData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BioHeroStepData& from);
  void MergeFrom(const BioHeroStepData& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BioHeroStepData* other);
  void UnsafeMergeFrom(const BioHeroStepData& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional bool lock = 2;
  void clear_lock();
  static const int kLockFieldNumber = 2;
  bool lock() const;
  void set_lock(bool value);

  // repeated uint32 branchesComplete = 3;
  int branchescomplete_size() const;
  void clear_branchescomplete();
  static const int kBranchesCompleteFieldNumber = 3;
  ::google::protobuf::uint32 branchescomplete(int index) const;
  void set_branchescomplete(int index, ::google::protobuf::uint32 value);
  void add_branchescomplete(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      branchescomplete() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_branchescomplete();

  // @@protoc_insertion_point(class_scope:NetMsg.BioHeroStepData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > branchescomplete_;
  mutable int _branchescomplete_cached_byte_size_;
  ::google::protobuf::uint32 id_;
  bool lock_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BioHeroStepData> BioHeroStepData_default_instance_;

// -------------------------------------------------------------------

class BioHeroInfoAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.BioHeroInfoAck) */ {
 public:
  BioHeroInfoAck();
  virtual ~BioHeroInfoAck();

  BioHeroInfoAck(const BioHeroInfoAck& from);

  inline BioHeroInfoAck& operator=(const BioHeroInfoAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BioHeroInfoAck& default_instance();

  static const BioHeroInfoAck* internal_default_instance();

  void Swap(BioHeroInfoAck* other);

  // implements Message ----------------------------------------------

  inline BioHeroInfoAck* New() const { return New(NULL); }

  BioHeroInfoAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BioHeroInfoAck& from);
  void MergeFrom(const BioHeroInfoAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BioHeroInfoAck* other);
  void UnsafeMergeFrom(const BioHeroInfoAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 heroClass = 2;
  void clear_heroclass();
  static const int kHeroClassFieldNumber = 2;
  ::google::protobuf::uint32 heroclass() const;
  void set_heroclass(::google::protobuf::uint32 value);

  // repeated .NetMsg.BioHeroStepData steps = 1;
  int steps_size() const;
  void clear_steps();
  static const int kStepsFieldNumber = 1;
  const ::NetMsg::BioHeroStepData& steps(int index) const;
  ::NetMsg::BioHeroStepData* mutable_steps(int index);
  ::NetMsg::BioHeroStepData* add_steps();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::BioHeroStepData >*
      mutable_steps();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::BioHeroStepData >&
      steps() const;

  // @@protoc_insertion_point(class_scope:NetMsg.BioHeroInfoAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::BioHeroStepData > steps_;
  ::google::protobuf::uint32 heroclass_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BioHeroInfoAck> BioHeroInfoAck_default_instance_;

// -------------------------------------------------------------------

class ReqBioHeroStepDone : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqBioHeroStepDone) */ {
 public:
  ReqBioHeroStepDone();
  virtual ~ReqBioHeroStepDone();

  ReqBioHeroStepDone(const ReqBioHeroStepDone& from);

  inline ReqBioHeroStepDone& operator=(const ReqBioHeroStepDone& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqBioHeroStepDone& default_instance();

  static const ReqBioHeroStepDone* internal_default_instance();

  void Swap(ReqBioHeroStepDone* other);

  // implements Message ----------------------------------------------

  inline ReqBioHeroStepDone* New() const { return New(NULL); }

  ReqBioHeroStepDone* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqBioHeroStepDone& from);
  void MergeFrom(const ReqBioHeroStepDone& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqBioHeroStepDone* other);
  void UnsafeMergeFrom(const ReqBioHeroStepDone& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 heroClass = 1;
  void clear_heroclass();
  static const int kHeroClassFieldNumber = 1;
  ::google::protobuf::uint32 heroclass() const;
  void set_heroclass(::google::protobuf::uint32 value);

  // optional uint32 stepId = 2;
  void clear_stepid();
  static const int kStepIdFieldNumber = 2;
  ::google::protobuf::uint32 stepid() const;
  void set_stepid(::google::protobuf::uint32 value);

  // optional uint32 branchId = 3;
  void clear_branchid();
  static const int kBranchIdFieldNumber = 3;
  ::google::protobuf::uint32 branchid() const;
  void set_branchid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqBioHeroStepDone)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 heroclass_;
  ::google::protobuf::uint32 stepid_;
  ::google::protobuf::uint32 branchid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqBioHeroStepDone> ReqBioHeroStepDone_default_instance_;

// -------------------------------------------------------------------

class BioHeroStepDoneAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.BioHeroStepDoneAck) */ {
 public:
  BioHeroStepDoneAck();
  virtual ~BioHeroStepDoneAck();

  BioHeroStepDoneAck(const BioHeroStepDoneAck& from);

  inline BioHeroStepDoneAck& operator=(const BioHeroStepDoneAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BioHeroStepDoneAck& default_instance();

  static const BioHeroStepDoneAck* internal_default_instance();

  void Swap(BioHeroStepDoneAck* other);

  // implements Message ----------------------------------------------

  inline BioHeroStepDoneAck* New() const { return New(NULL); }

  BioHeroStepDoneAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BioHeroStepDoneAck& from);
  void MergeFrom(const BioHeroStepDoneAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BioHeroStepDoneAck* other);
  void UnsafeMergeFrom(const BioHeroStepDoneAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 heroClass = 1;
  void clear_heroclass();
  static const int kHeroClassFieldNumber = 1;
  ::google::protobuf::uint32 heroclass() const;
  void set_heroclass(::google::protobuf::uint32 value);

  // optional uint32 stepId = 2;
  void clear_stepid();
  static const int kStepIdFieldNumber = 2;
  ::google::protobuf::uint32 stepid() const;
  void set_stepid(::google::protobuf::uint32 value);

  // repeated uint32 unlockStepIds = 4;
  int unlockstepids_size() const;
  void clear_unlockstepids();
  static const int kUnlockStepIdsFieldNumber = 4;
  ::google::protobuf::uint32 unlockstepids(int index) const;
  void set_unlockstepids(int index, ::google::protobuf::uint32 value);
  void add_unlockstepids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      unlockstepids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_unlockstepids();

  // @@protoc_insertion_point(class_scope:NetMsg.BioHeroStepDoneAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > unlockstepids_;
  mutable int _unlockstepids_cached_byte_size_;
  ::google::protobuf::uint32 heroclass_;
  ::google::protobuf::uint32 stepid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BioHeroStepDoneAck> BioHeroStepDoneAck_default_instance_;

// -------------------------------------------------------------------

class ReqAddFriend : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqAddFriend) */ {
 public:
  ReqAddFriend();
  virtual ~ReqAddFriend();

  ReqAddFriend(const ReqAddFriend& from);

  inline ReqAddFriend& operator=(const ReqAddFriend& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqAddFriend& default_instance();

  static const ReqAddFriend* internal_default_instance();

  void Swap(ReqAddFriend* other);

  // implements Message ----------------------------------------------

  inline ReqAddFriend* New() const { return New(NULL); }

  ReqAddFriend* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqAddFriend& from);
  void MergeFrom(const ReqAddFriend& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqAddFriend* other);
  void UnsafeMergeFrom(const ReqAddFriend& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userId = 1;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqAddFriend)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 userid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqAddFriend> ReqAddFriend_default_instance_;

// -------------------------------------------------------------------

class ReqRemoveFriend : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqRemoveFriend) */ {
 public:
  ReqRemoveFriend();
  virtual ~ReqRemoveFriend();

  ReqRemoveFriend(const ReqRemoveFriend& from);

  inline ReqRemoveFriend& operator=(const ReqRemoveFriend& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqRemoveFriend& default_instance();

  static const ReqRemoveFriend* internal_default_instance();

  void Swap(ReqRemoveFriend* other);

  // implements Message ----------------------------------------------

  inline ReqRemoveFriend* New() const { return New(NULL); }

  ReqRemoveFriend* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqRemoveFriend& from);
  void MergeFrom(const ReqRemoveFriend& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqRemoveFriend* other);
  void UnsafeMergeFrom(const ReqRemoveFriend& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userId = 1;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqRemoveFriend)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 userid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqRemoveFriend> ReqRemoveFriend_default_instance_;

// -------------------------------------------------------------------

class RemoveFriendAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.RemoveFriendAck) */ {
 public:
  RemoveFriendAck();
  virtual ~RemoveFriendAck();

  RemoveFriendAck(const RemoveFriendAck& from);

  inline RemoveFriendAck& operator=(const RemoveFriendAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveFriendAck& default_instance();

  static const RemoveFriendAck* internal_default_instance();

  void Swap(RemoveFriendAck* other);

  // implements Message ----------------------------------------------

  inline RemoveFriendAck* New() const { return New(NULL); }

  RemoveFriendAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RemoveFriendAck& from);
  void MergeFrom(const RemoveFriendAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RemoveFriendAck* other);
  void UnsafeMergeFrom(const RemoveFriendAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userId = 1;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.RemoveFriendAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 userid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RemoveFriendAck> RemoveFriendAck_default_instance_;

// -------------------------------------------------------------------

class ReqTopList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqTopList) */ {
 public:
  ReqTopList();
  virtual ~ReqTopList();

  ReqTopList(const ReqTopList& from);

  inline ReqTopList& operator=(const ReqTopList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqTopList& default_instance();

  static const ReqTopList* internal_default_instance();

  void Swap(ReqTopList* other);

  // implements Message ----------------------------------------------

  inline ReqTopList* New() const { return New(NULL); }

  ReqTopList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqTopList& from);
  void MergeFrom(const ReqTopList& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqTopList* other);
  void UnsafeMergeFrom(const ReqTopList& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .NetMsg.TopListType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::NetMsg::TopListType type() const;
  void set_type(::NetMsg::TopListType value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqTopList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqTopList> ReqTopList_default_instance_;

// -------------------------------------------------------------------

class TopListAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.TopListAck) */ {
 public:
  TopListAck();
  virtual ~TopListAck();

  TopListAck(const TopListAck& from);

  inline TopListAck& operator=(const TopListAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TopListAck& default_instance();

  static const TopListAck* internal_default_instance();

  void Swap(TopListAck* other);

  // implements Message ----------------------------------------------

  inline TopListAck* New() const { return New(NULL); }

  TopListAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TopListAck& from);
  void MergeFrom(const TopListAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TopListAck* other);
  void UnsafeMergeFrom(const TopListAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .NetMsg.TopListType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::NetMsg::TopListType type() const;
  void set_type(::NetMsg::TopListType value);

  // repeated .NetMsg.TopListData topData = 2;
  int topdata_size() const;
  void clear_topdata();
  static const int kTopDataFieldNumber = 2;
  const ::NetMsg::TopListData& topdata(int index) const;
  ::NetMsg::TopListData* mutable_topdata(int index);
  ::NetMsg::TopListData* add_topdata();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::TopListData >*
      mutable_topdata();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::TopListData >&
      topdata() const;

  // optional uint32 myRanking = 3;
  void clear_myranking();
  static const int kMyRankingFieldNumber = 3;
  ::google::protobuf::uint32 myranking() const;
  void set_myranking(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.TopListAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::TopListData > topdata_;
  int type_;
  ::google::protobuf::uint32 myranking_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TopListAck> TopListAck_default_instance_;

// -------------------------------------------------------------------

class TopListData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.TopListData) */ {
 public:
  TopListData();
  virtual ~TopListData();

  TopListData(const TopListData& from);

  inline TopListData& operator=(const TopListData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TopListData& default_instance();

  enum InfoCase {
    kSortReputation = 1,
    kSortMilitary = 2,
    kSortLevel = 3,
    INFO_NOT_SET = 0,
  };

  static const TopListData* internal_default_instance();

  void Swap(TopListData* other);

  // implements Message ----------------------------------------------

  inline TopListData* New() const { return New(NULL); }

  TopListData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TopListData& from);
  void MergeFrom(const TopListData& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TopListData* other);
  void UnsafeMergeFrom(const TopListData& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .NetMsg.SortReputationData sortReputation = 1;
  bool has_sortreputation() const;
  void clear_sortreputation();
  static const int kSortReputationFieldNumber = 1;
  const ::NetMsg::SortReputationData& sortreputation() const;
  ::NetMsg::SortReputationData* mutable_sortreputation();
  ::NetMsg::SortReputationData* release_sortreputation();
  void set_allocated_sortreputation(::NetMsg::SortReputationData* sortreputation);

  // optional .NetMsg.SortMilitaryData sortMilitary = 2;
  bool has_sortmilitary() const;
  void clear_sortmilitary();
  static const int kSortMilitaryFieldNumber = 2;
  const ::NetMsg::SortMilitaryData& sortmilitary() const;
  ::NetMsg::SortMilitaryData* mutable_sortmilitary();
  ::NetMsg::SortMilitaryData* release_sortmilitary();
  void set_allocated_sortmilitary(::NetMsg::SortMilitaryData* sortmilitary);

  // optional .NetMsg.SortLevelData sortLevel = 3;
  bool has_sortlevel() const;
  void clear_sortlevel();
  static const int kSortLevelFieldNumber = 3;
  const ::NetMsg::SortLevelData& sortlevel() const;
  ::NetMsg::SortLevelData* mutable_sortlevel();
  ::NetMsg::SortLevelData* release_sortlevel();
  void set_allocated_sortlevel(::NetMsg::SortLevelData* sortlevel);

  InfoCase info_case() const;
  // @@protoc_insertion_point(class_scope:NetMsg.TopListData)
 private:
  inline void set_has_sortreputation();
  inline void set_has_sortmilitary();
  inline void set_has_sortlevel();

  inline bool has_info() const;
  void clear_info();
  inline void clear_has_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union InfoUnion {
    InfoUnion() {}
    ::NetMsg::SortReputationData* sortreputation_;
    ::NetMsg::SortMilitaryData* sortmilitary_;
    ::NetMsg::SortLevelData* sortlevel_;
  } info_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TopListData> TopListData_default_instance_;

// -------------------------------------------------------------------

class SortReputationData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.SortReputationData) */ {
 public:
  SortReputationData();
  virtual ~SortReputationData();

  SortReputationData(const SortReputationData& from);

  inline SortReputationData& operator=(const SortReputationData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SortReputationData& default_instance();

  static const SortReputationData* internal_default_instance();

  void Swap(SortReputationData* other);

  // implements Message ----------------------------------------------

  inline SortReputationData* New() const { return New(NULL); }

  SortReputationData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SortReputationData& from);
  void MergeFrom(const SortReputationData& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SortReputationData* other);
  void UnsafeMergeFrom(const SortReputationData& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userID = 1;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 sortID = 2;
  void clear_sortid();
  static const int kSortIDFieldNumber = 2;
  ::google::protobuf::uint32 sortid() const;
  void set_sortid(::google::protobuf::uint32 value);

  // optional string playerName = 3;
  void clear_playername();
  static const int kPlayerNameFieldNumber = 3;
  const ::std::string& playername() const;
  void set_playername(const ::std::string& value);
  void set_playername(const char* value);
  void set_playername(const char* value, size_t size);
  ::std::string* mutable_playername();
  ::std::string* release_playername();
  void set_allocated_playername(::std::string* playername);

  // optional uint32 force = 4;
  void clear_force();
  static const int kForceFieldNumber = 4;
  ::google::protobuf::uint32 force() const;
  void set_force(::google::protobuf::uint32 value);

  // optional uint32 level = 5;
  void clear_level();
  static const int kLevelFieldNumber = 5;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // optional uint32 title = 6;
  void clear_title();
  static const int kTitleFieldNumber = 6;
  ::google::protobuf::uint32 title() const;
  void set_title(::google::protobuf::uint32 value);

  // optional uint32 reputation = 7;
  void clear_reputation();
  static const int kReputationFieldNumber = 7;
  ::google::protobuf::uint32 reputation() const;
  void set_reputation(::google::protobuf::uint32 value);

  // optional uint32 icon = 8;
  void clear_icon();
  static const int kIconFieldNumber = 8;
  ::google::protobuf::uint32 icon() const;
  void set_icon(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.SortReputationData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr playername_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 sortid_;
  ::google::protobuf::uint32 force_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 title_;
  ::google::protobuf::uint32 reputation_;
  ::google::protobuf::uint32 icon_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SortReputationData> SortReputationData_default_instance_;

// -------------------------------------------------------------------

class SortMilitaryData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.SortMilitaryData) */ {
 public:
  SortMilitaryData();
  virtual ~SortMilitaryData();

  SortMilitaryData(const SortMilitaryData& from);

  inline SortMilitaryData& operator=(const SortMilitaryData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SortMilitaryData& default_instance();

  static const SortMilitaryData* internal_default_instance();

  void Swap(SortMilitaryData* other);

  // implements Message ----------------------------------------------

  inline SortMilitaryData* New() const { return New(NULL); }

  SortMilitaryData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SortMilitaryData& from);
  void MergeFrom(const SortMilitaryData& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SortMilitaryData* other);
  void UnsafeMergeFrom(const SortMilitaryData& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userID = 1;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 sortID = 2;
  void clear_sortid();
  static const int kSortIDFieldNumber = 2;
  ::google::protobuf::uint32 sortid() const;
  void set_sortid(::google::protobuf::uint32 value);

  // optional string playerName = 3;
  void clear_playername();
  static const int kPlayerNameFieldNumber = 3;
  const ::std::string& playername() const;
  void set_playername(const ::std::string& value);
  void set_playername(const char* value);
  void set_playername(const char* value, size_t size);
  ::std::string* mutable_playername();
  ::std::string* release_playername();
  void set_allocated_playername(::std::string* playername);

  // optional uint32 force = 4;
  void clear_force();
  static const int kForceFieldNumber = 4;
  ::google::protobuf::uint32 force() const;
  void set_force(::google::protobuf::uint32 value);

  // optional uint32 level = 5;
  void clear_level();
  static const int kLevelFieldNumber = 5;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // optional uint32 title = 6;
  void clear_title();
  static const int kTitleFieldNumber = 6;
  ::google::protobuf::uint32 title() const;
  void set_title(::google::protobuf::uint32 value);

  // optional uint32 military = 7;
  void clear_military();
  static const int kMilitaryFieldNumber = 7;
  ::google::protobuf::uint32 military() const;
  void set_military(::google::protobuf::uint32 value);

  // optional uint32 icon = 8;
  void clear_icon();
  static const int kIconFieldNumber = 8;
  ::google::protobuf::uint32 icon() const;
  void set_icon(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.SortMilitaryData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr playername_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 sortid_;
  ::google::protobuf::uint32 force_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 title_;
  ::google::protobuf::uint32 military_;
  ::google::protobuf::uint32 icon_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SortMilitaryData> SortMilitaryData_default_instance_;

// -------------------------------------------------------------------

class SortLevelData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.SortLevelData) */ {
 public:
  SortLevelData();
  virtual ~SortLevelData();

  SortLevelData(const SortLevelData& from);

  inline SortLevelData& operator=(const SortLevelData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SortLevelData& default_instance();

  static const SortLevelData* internal_default_instance();

  void Swap(SortLevelData* other);

  // implements Message ----------------------------------------------

  inline SortLevelData* New() const { return New(NULL); }

  SortLevelData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SortLevelData& from);
  void MergeFrom(const SortLevelData& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SortLevelData* other);
  void UnsafeMergeFrom(const SortLevelData& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userID = 1;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 sortID = 2;
  void clear_sortid();
  static const int kSortIDFieldNumber = 2;
  ::google::protobuf::uint32 sortid() const;
  void set_sortid(::google::protobuf::uint32 value);

  // optional string playerName = 3;
  void clear_playername();
  static const int kPlayerNameFieldNumber = 3;
  const ::std::string& playername() const;
  void set_playername(const ::std::string& value);
  void set_playername(const char* value);
  void set_playername(const char* value, size_t size);
  ::std::string* mutable_playername();
  ::std::string* release_playername();
  void set_allocated_playername(::std::string* playername);

  // optional uint32 force = 4;
  void clear_force();
  static const int kForceFieldNumber = 4;
  ::google::protobuf::uint32 force() const;
  void set_force(::google::protobuf::uint32 value);

  // optional uint32 title = 5;
  void clear_title();
  static const int kTitleFieldNumber = 5;
  ::google::protobuf::uint32 title() const;
  void set_title(::google::protobuf::uint32 value);

  // optional uint32 military = 6;
  void clear_military();
  static const int kMilitaryFieldNumber = 6;
  ::google::protobuf::uint32 military() const;
  void set_military(::google::protobuf::uint32 value);

  // optional uint32 level = 7;
  void clear_level();
  static const int kLevelFieldNumber = 7;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // optional uint32 icon = 8;
  void clear_icon();
  static const int kIconFieldNumber = 8;
  ::google::protobuf::uint32 icon() const;
  void set_icon(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.SortLevelData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr playername_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 sortid_;
  ::google::protobuf::uint32 force_;
  ::google::protobuf::uint32 title_;
  ::google::protobuf::uint32 military_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 icon_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SortLevelData> SortLevelData_default_instance_;

// -------------------------------------------------------------------

class FriendInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.FriendInfo) */ {
 public:
  FriendInfo();
  virtual ~FriendInfo();

  FriendInfo(const FriendInfo& from);

  inline FriendInfo& operator=(const FriendInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendInfo& default_instance();

  static const FriendInfo* internal_default_instance();

  void Swap(FriendInfo* other);

  // implements Message ----------------------------------------------

  inline FriendInfo* New() const { return New(NULL); }

  FriendInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendInfo& from);
  void MergeFrom(const FriendInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FriendInfo* other);
  void UnsafeMergeFrom(const FriendInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userId = 1;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 icon = 3;
  void clear_icon();
  static const int kIconFieldNumber = 3;
  ::google::protobuf::uint32 icon() const;
  void set_icon(::google::protobuf::uint32 value);

  // optional uint32 force = 4;
  void clear_force();
  static const int kForceFieldNumber = 4;
  ::google::protobuf::uint32 force() const;
  void set_force(::google::protobuf::uint32 value);

  // optional uint32 rank = 5;
  void clear_rank();
  static const int kRankFieldNumber = 5;
  ::google::protobuf::uint32 rank() const;
  void set_rank(::google::protobuf::uint32 value);

  // optional uint32 title = 6;
  void clear_title();
  static const int kTitleFieldNumber = 6;
  ::google::protobuf::uint32 title() const;
  void set_title(::google::protobuf::uint32 value);

  // optional bool online = 7;
  void clear_online();
  static const int kOnlineFieldNumber = 7;
  bool online() const;
  void set_online(bool value);

  // @@protoc_insertion_point(class_scope:NetMsg.FriendInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 icon_;
  ::google::protobuf::uint32 force_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 title_;
  bool online_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<FriendInfo> FriendInfo_default_instance_;

// -------------------------------------------------------------------

class FriendsInfoAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.FriendsInfoAck) */ {
 public:
  FriendsInfoAck();
  virtual ~FriendsInfoAck();

  FriendsInfoAck(const FriendsInfoAck& from);

  inline FriendsInfoAck& operator=(const FriendsInfoAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendsInfoAck& default_instance();

  static const FriendsInfoAck* internal_default_instance();

  void Swap(FriendsInfoAck* other);

  // implements Message ----------------------------------------------

  inline FriendsInfoAck* New() const { return New(NULL); }

  FriendsInfoAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendsInfoAck& from);
  void MergeFrom(const FriendsInfoAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FriendsInfoAck* other);
  void UnsafeMergeFrom(const FriendsInfoAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .NetMsg.FriendInfo friends = 1;
  int friends_size() const;
  void clear_friends();
  static const int kFriendsFieldNumber = 1;
  const ::NetMsg::FriendInfo& friends(int index) const;
  ::NetMsg::FriendInfo* mutable_friends(int index);
  ::NetMsg::FriendInfo* add_friends();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::FriendInfo >*
      mutable_friends();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::FriendInfo >&
      friends() const;

  // @@protoc_insertion_point(class_scope:NetMsg.FriendsInfoAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::FriendInfo > friends_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<FriendsInfoAck> FriendsInfoAck_default_instance_;

// -------------------------------------------------------------------

class MailSender : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.MailSender) */ {
 public:
  MailSender();
  virtual ~MailSender();

  MailSender(const MailSender& from);

  inline MailSender& operator=(const MailSender& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailSender& default_instance();

  static const MailSender* internal_default_instance();

  void Swap(MailSender* other);

  // implements Message ----------------------------------------------

  inline MailSender* New() const { return New(NULL); }

  MailSender* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailSender& from);
  void MergeFrom(const MailSender& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MailSender* other);
  void UnsafeMergeFrom(const MailSender& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 icon = 3;
  void clear_icon();
  static const int kIconFieldNumber = 3;
  ::google::protobuf::uint32 icon() const;
  void set_icon(::google::protobuf::uint32 value);

  // optional uint32 title = 4;
  void clear_title();
  static const int kTitleFieldNumber = 4;
  ::google::protobuf::uint32 title() const;
  void set_title(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.MailSender)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 icon_;
  ::google::protobuf::uint32 title_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<MailSender> MailSender_default_instance_;

// -------------------------------------------------------------------

class MailData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.MailData) */ {
 public:
  MailData();
  virtual ~MailData();

  MailData(const MailData& from);

  inline MailData& operator=(const MailData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailData& default_instance();

  static const MailData* internal_default_instance();

  void Swap(MailData* other);

  // implements Message ----------------------------------------------

  inline MailData* New() const { return New(NULL); }

  MailData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailData& from);
  void MergeFrom(const MailData& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MailData* other);
  void UnsafeMergeFrom(const MailData& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional int64 sendTime = 2;
  void clear_sendtime();
  static const int kSendTimeFieldNumber = 2;
  ::google::protobuf::int64 sendtime() const;
  void set_sendtime(::google::protobuf::int64 value);

  // optional .NetMsg.MailSender sender = 3;
  bool has_sender() const;
  void clear_sender();
  static const int kSenderFieldNumber = 3;
  const ::NetMsg::MailSender& sender() const;
  ::NetMsg::MailSender* mutable_sender();
  ::NetMsg::MailSender* release_sender();
  void set_allocated_sender(::NetMsg::MailSender* sender);

  // optional string title = 4;
  void clear_title();
  static const int kTitleFieldNumber = 4;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // optional bool hasAward = 5;
  void clear_hasaward();
  static const int kHasAwardFieldNumber = 5;
  bool hasaward() const;
  void set_hasaward(bool value);

  // optional bool isRead = 6;
  void clear_isread();
  static const int kIsReadFieldNumber = 6;
  bool isread() const;
  void set_isread(bool value);

  // optional bool isGetAward = 7;
  void clear_isgetaward();
  static const int kIsGetAwardFieldNumber = 7;
  bool isgetaward() const;
  void set_isgetaward(bool value);

  // optional .NetMsg.MailType type = 8;
  void clear_type();
  static const int kTypeFieldNumber = 8;
  ::NetMsg::MailType type() const;
  void set_type(::NetMsg::MailType value);

  // @@protoc_insertion_point(class_scope:NetMsg.MailData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::NetMsg::MailSender* sender_;
  ::google::protobuf::int64 sendtime_;
  ::google::protobuf::uint32 id_;
  bool hasaward_;
  bool isread_;
  bool isgetaward_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<MailData> MailData_default_instance_;

// -------------------------------------------------------------------

class MailInfoAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.MailInfoAck) */ {
 public:
  MailInfoAck();
  virtual ~MailInfoAck();

  MailInfoAck(const MailInfoAck& from);

  inline MailInfoAck& operator=(const MailInfoAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailInfoAck& default_instance();

  static const MailInfoAck* internal_default_instance();

  void Swap(MailInfoAck* other);

  // implements Message ----------------------------------------------

  inline MailInfoAck* New() const { return New(NULL); }

  MailInfoAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailInfoAck& from);
  void MergeFrom(const MailInfoAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MailInfoAck* other);
  void UnsafeMergeFrom(const MailInfoAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .NetMsg.MailData mails = 1;
  int mails_size() const;
  void clear_mails();
  static const int kMailsFieldNumber = 1;
  const ::NetMsg::MailData& mails(int index) const;
  ::NetMsg::MailData* mutable_mails(int index);
  ::NetMsg::MailData* add_mails();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::MailData >*
      mutable_mails();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::MailData >&
      mails() const;

  // @@protoc_insertion_point(class_scope:NetMsg.MailInfoAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::MailData > mails_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<MailInfoAck> MailInfoAck_default_instance_;

// -------------------------------------------------------------------

class ReqMailDetail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqMailDetail) */ {
 public:
  ReqMailDetail();
  virtual ~ReqMailDetail();

  ReqMailDetail(const ReqMailDetail& from);

  inline ReqMailDetail& operator=(const ReqMailDetail& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqMailDetail& default_instance();

  static const ReqMailDetail* internal_default_instance();

  void Swap(ReqMailDetail* other);

  // implements Message ----------------------------------------------

  inline ReqMailDetail* New() const { return New(NULL); }

  ReqMailDetail* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqMailDetail& from);
  void MergeFrom(const ReqMailDetail& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqMailDetail* other);
  void UnsafeMergeFrom(const ReqMailDetail& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqMailDetail)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqMailDetail> ReqMailDetail_default_instance_;

// -------------------------------------------------------------------

class MailDetailAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.MailDetailAck) */ {
 public:
  MailDetailAck();
  virtual ~MailDetailAck();

  MailDetailAck(const MailDetailAck& from);

  inline MailDetailAck& operator=(const MailDetailAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailDetailAck& default_instance();

  static const MailDetailAck* internal_default_instance();

  void Swap(MailDetailAck* other);

  // implements Message ----------------------------------------------

  inline MailDetailAck* New() const { return New(NULL); }

  MailDetailAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailDetailAck& from);
  void MergeFrom(const MailDetailAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MailDetailAck* other);
  void UnsafeMergeFrom(const MailDetailAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional string content = 2;
  void clear_content();
  static const int kContentFieldNumber = 2;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // optional .NetMsg.Award award = 3;
  bool has_award() const;
  void clear_award();
  static const int kAwardFieldNumber = 3;
  const ::NetMsg::Award& award() const;
  ::NetMsg::Award* mutable_award();
  ::NetMsg::Award* release_award();
  void set_allocated_award(::NetMsg::Award* award);

  // @@protoc_insertion_point(class_scope:NetMsg.MailDetailAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::NetMsg::Award* award_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<MailDetailAck> MailDetailAck_default_instance_;

// -------------------------------------------------------------------

class ReqGetMailAward : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqGetMailAward) */ {
 public:
  ReqGetMailAward();
  virtual ~ReqGetMailAward();

  ReqGetMailAward(const ReqGetMailAward& from);

  inline ReqGetMailAward& operator=(const ReqGetMailAward& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqGetMailAward& default_instance();

  static const ReqGetMailAward* internal_default_instance();

  void Swap(ReqGetMailAward* other);

  // implements Message ----------------------------------------------

  inline ReqGetMailAward* New() const { return New(NULL); }

  ReqGetMailAward* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqGetMailAward& from);
  void MergeFrom(const ReqGetMailAward& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqGetMailAward* other);
  void UnsafeMergeFrom(const ReqGetMailAward& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqGetMailAward)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqGetMailAward> ReqGetMailAward_default_instance_;

// -------------------------------------------------------------------

class GetMailAwardAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.GetMailAwardAck) */ {
 public:
  GetMailAwardAck();
  virtual ~GetMailAwardAck();

  GetMailAwardAck(const GetMailAwardAck& from);

  inline GetMailAwardAck& operator=(const GetMailAwardAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetMailAwardAck& default_instance();

  static const GetMailAwardAck* internal_default_instance();

  void Swap(GetMailAwardAck* other);

  // implements Message ----------------------------------------------

  inline GetMailAwardAck* New() const { return New(NULL); }

  GetMailAwardAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetMailAwardAck& from);
  void MergeFrom(const GetMailAwardAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetMailAwardAck* other);
  void UnsafeMergeFrom(const GetMailAwardAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.GetMailAwardAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GetMailAwardAck> GetMailAwardAck_default_instance_;

// -------------------------------------------------------------------

class ReqDeleteMail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqDeleteMail) */ {
 public:
  ReqDeleteMail();
  virtual ~ReqDeleteMail();

  ReqDeleteMail(const ReqDeleteMail& from);

  inline ReqDeleteMail& operator=(const ReqDeleteMail& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqDeleteMail& default_instance();

  static const ReqDeleteMail* internal_default_instance();

  void Swap(ReqDeleteMail* other);

  // implements Message ----------------------------------------------

  inline ReqDeleteMail* New() const { return New(NULL); }

  ReqDeleteMail* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqDeleteMail& from);
  void MergeFrom(const ReqDeleteMail& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqDeleteMail* other);
  void UnsafeMergeFrom(const ReqDeleteMail& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqDeleteMail)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqDeleteMail> ReqDeleteMail_default_instance_;

// -------------------------------------------------------------------

class DeleteMailAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.DeleteMailAck) */ {
 public:
  DeleteMailAck();
  virtual ~DeleteMailAck();

  DeleteMailAck(const DeleteMailAck& from);

  inline DeleteMailAck& operator=(const DeleteMailAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteMailAck& default_instance();

  static const DeleteMailAck* internal_default_instance();

  void Swap(DeleteMailAck* other);

  // implements Message ----------------------------------------------

  inline DeleteMailAck* New() const { return New(NULL); }

  DeleteMailAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteMailAck& from);
  void MergeFrom(const DeleteMailAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DeleteMailAck* other);
  void UnsafeMergeFrom(const DeleteMailAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.DeleteMailAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DeleteMailAck> DeleteMailAck_default_instance_;

// -------------------------------------------------------------------

class BanquetHeros : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.BanquetHeros) */ {
 public:
  BanquetHeros();
  virtual ~BanquetHeros();

  BanquetHeros(const BanquetHeros& from);

  inline BanquetHeros& operator=(const BanquetHeros& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BanquetHeros& default_instance();

  static const BanquetHeros* internal_default_instance();

  void Swap(BanquetHeros* other);

  // implements Message ----------------------------------------------

  inline BanquetHeros* New() const { return New(NULL); }

  BanquetHeros* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BanquetHeros& from);
  void MergeFrom(const BanquetHeros& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BanquetHeros* other);
  void UnsafeMergeFrom(const BanquetHeros& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // optional uint32 banquetId = 2;
  void clear_banquetid();
  static const int kBanquetIdFieldNumber = 2;
  ::google::protobuf::uint32 banquetid() const;
  void set_banquetid(::google::protobuf::uint32 value);

  // repeated uint32 heros = 3;
  int heros_size() const;
  void clear_heros();
  static const int kHerosFieldNumber = 3;
  ::google::protobuf::uint32 heros(int index) const;
  void set_heros(int index, ::google::protobuf::uint32 value);
  void add_heros(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      heros() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_heros();

  // repeated bool banquet = 4;
  int banquet_size() const;
  void clear_banquet();
  static const int kBanquetFieldNumber = 4;
  bool banquet(int index) const;
  void set_banquet(int index, bool value);
  void add_banquet(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      banquet() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_banquet();

  // optional uint32 leftFreeTimes = 5;
  void clear_leftfreetimes();
  static const int kLeftFreeTimesFieldNumber = 5;
  ::google::protobuf::uint32 leftfreetimes() const;
  void set_leftfreetimes(::google::protobuf::uint32 value);

  // optional uint32 leftTime = 6;
  void clear_lefttime();
  static const int kLeftTimeFieldNumber = 6;
  ::google::protobuf::uint32 lefttime() const;
  void set_lefttime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.BanquetHeros)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > heros_;
  mutable int _heros_cached_byte_size_;
  ::google::protobuf::RepeatedField< bool > banquet_;
  mutable int _banquet_cached_byte_size_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 banquetid_;
  ::google::protobuf::uint32 leftfreetimes_;
  ::google::protobuf::uint32 lefttime_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BanquetHeros> BanquetHeros_default_instance_;

// -------------------------------------------------------------------

class BanquetInfoAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.BanquetInfoAck) */ {
 public:
  BanquetInfoAck();
  virtual ~BanquetInfoAck();

  BanquetInfoAck(const BanquetInfoAck& from);

  inline BanquetInfoAck& operator=(const BanquetInfoAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BanquetInfoAck& default_instance();

  static const BanquetInfoAck* internal_default_instance();

  void Swap(BanquetInfoAck* other);

  // implements Message ----------------------------------------------

  inline BanquetInfoAck* New() const { return New(NULL); }

  BanquetInfoAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BanquetInfoAck& from);
  void MergeFrom(const BanquetInfoAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BanquetInfoAck* other);
  void UnsafeMergeFrom(const BanquetInfoAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .NetMsg.BanquetHeros info = 1;
  int info_size() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::NetMsg::BanquetHeros& info(int index) const;
  ::NetMsg::BanquetHeros* mutable_info(int index);
  ::NetMsg::BanquetHeros* add_info();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::BanquetHeros >*
      mutable_info();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::BanquetHeros >&
      info() const;

  // @@protoc_insertion_point(class_scope:NetMsg.BanquetInfoAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::BanquetHeros > info_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BanquetInfoAck> BanquetInfoAck_default_instance_;

// -------------------------------------------------------------------

class ReqBanquetHero : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqBanquetHero) */ {
 public:
  ReqBanquetHero();
  virtual ~ReqBanquetHero();

  ReqBanquetHero(const ReqBanquetHero& from);

  inline ReqBanquetHero& operator=(const ReqBanquetHero& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqBanquetHero& default_instance();

  static const ReqBanquetHero* internal_default_instance();

  void Swap(ReqBanquetHero* other);

  // implements Message ----------------------------------------------

  inline ReqBanquetHero* New() const { return New(NULL); }

  ReqBanquetHero* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqBanquetHero& from);
  void MergeFrom(const ReqBanquetHero& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqBanquetHero* other);
  void UnsafeMergeFrom(const ReqBanquetHero& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // optional uint32 uid = 2;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqBanquetHero)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 uid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqBanquetHero> ReqBanquetHero_default_instance_;

// -------------------------------------------------------------------

class BanquetHeroAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.BanquetHeroAck) */ {
 public:
  BanquetHeroAck();
  virtual ~BanquetHeroAck();

  BanquetHeroAck(const BanquetHeroAck& from);

  inline BanquetHeroAck& operator=(const BanquetHeroAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BanquetHeroAck& default_instance();

  static const BanquetHeroAck* internal_default_instance();

  void Swap(BanquetHeroAck* other);

  // implements Message ----------------------------------------------

  inline BanquetHeroAck* New() const { return New(NULL); }

  BanquetHeroAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BanquetHeroAck& from);
  void MergeFrom(const BanquetHeroAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BanquetHeroAck* other);
  void UnsafeMergeFrom(const BanquetHeroAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // repeated uint64 heros = 2;
  int heros_size() const;
  void clear_heros();
  static const int kHerosFieldNumber = 2;
  ::google::protobuf::uint64 heros(int index) const;
  void set_heros(int index, ::google::protobuf::uint64 value);
  void add_heros(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      heros() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_heros();

  // optional uint32 error = 3;
  void clear_error();
  static const int kErrorFieldNumber = 3;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.BanquetHeroAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > heros_;
  mutable int _heros_cached_byte_size_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BanquetHeroAck> BanquetHeroAck_default_instance_;

// -------------------------------------------------------------------

class WorldWarInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.WorldWarInfo) */ {
 public:
  WorldWarInfo();
  virtual ~WorldWarInfo();

  WorldWarInfo(const WorldWarInfo& from);

  inline WorldWarInfo& operator=(const WorldWarInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldWarInfo& default_instance();

  static const WorldWarInfo* internal_default_instance();

  void Swap(WorldWarInfo* other);

  // implements Message ----------------------------------------------

  inline WorldWarInfo* New() const { return New(NULL); }

  WorldWarInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldWarInfo& from);
  void MergeFrom(const WorldWarInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WorldWarInfo* other);
  void UnsafeMergeFrom(const WorldWarInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional uint32 force1 = 2;
  void clear_force1();
  static const int kForce1FieldNumber = 2;
  ::google::protobuf::uint32 force1() const;
  void set_force1(::google::protobuf::uint32 value);

  // optional uint32 force2 = 3;
  void clear_force2();
  static const int kForce2FieldNumber = 3;
  ::google::protobuf::uint32 force2() const;
  void set_force2(::google::protobuf::uint32 value);

  // optional uint32 type = 4;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // optional uint32 path = 5;
  void clear_path();
  static const int kPathFieldNumber = 5;
  ::google::protobuf::uint32 path() const;
  void set_path(::google::protobuf::uint32 value);

  // optional float percent = 6;
  void clear_percent();
  static const int kPercentFieldNumber = 6;
  float percent() const;
  void set_percent(float value);

  // optional uint32 leftTime = 7;
  void clear_lefttime();
  static const int kLeftTimeFieldNumber = 7;
  ::google::protobuf::uint32 lefttime() const;
  void set_lefttime(::google::protobuf::uint32 value);

  // optional uint32 warId = 8;
  void clear_warid();
  static const int kWarIdFieldNumber = 8;
  ::google::protobuf::uint32 warid() const;
  void set_warid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.WorldWarInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 force1_;
  ::google::protobuf::uint32 force2_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 path_;
  float percent_;
  ::google::protobuf::uint32 lefttime_;
  ::google::protobuf::uint32 warid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<WorldWarInfo> WorldWarInfo_default_instance_;

// -------------------------------------------------------------------

class WorldWarAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.WorldWarAck) */ {
 public:
  WorldWarAck();
  virtual ~WorldWarAck();

  WorldWarAck(const WorldWarAck& from);

  inline WorldWarAck& operator=(const WorldWarAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldWarAck& default_instance();

  static const WorldWarAck* internal_default_instance();

  void Swap(WorldWarAck* other);

  // implements Message ----------------------------------------------

  inline WorldWarAck* New() const { return New(NULL); }

  WorldWarAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldWarAck& from);
  void MergeFrom(const WorldWarAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WorldWarAck* other);
  void UnsafeMergeFrom(const WorldWarAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .NetMsg.WorldWarInfo wars = 1;
  int wars_size() const;
  void clear_wars();
  static const int kWarsFieldNumber = 1;
  const ::NetMsg::WorldWarInfo& wars(int index) const;
  ::NetMsg::WorldWarInfo* mutable_wars(int index);
  ::NetMsg::WorldWarInfo* add_wars();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::WorldWarInfo >*
      mutable_wars();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::WorldWarInfo >&
      wars() const;

  // @@protoc_insertion_point(class_scope:NetMsg.WorldWarAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::WorldWarInfo > wars_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<WorldWarAck> WorldWarAck_default_instance_;

// -------------------------------------------------------------------

class ReqWorldBattle : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqWorldBattle) */ {
 public:
  ReqWorldBattle();
  virtual ~ReqWorldBattle();

  ReqWorldBattle(const ReqWorldBattle& from);

  inline ReqWorldBattle& operator=(const ReqWorldBattle& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqWorldBattle& default_instance();

  static const ReqWorldBattle* internal_default_instance();

  void Swap(ReqWorldBattle* other);

  // implements Message ----------------------------------------------

  inline ReqWorldBattle* New() const { return New(NULL); }

  ReqWorldBattle* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqWorldBattle& from);
  void MergeFrom(const ReqWorldBattle& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqWorldBattle* other);
  void UnsafeMergeFrom(const ReqWorldBattle& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqWorldBattle)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqWorldBattle> ReqWorldBattle_default_instance_;

// -------------------------------------------------------------------

class WorldBattleAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.WorldBattleAck) */ {
 public:
  WorldBattleAck();
  virtual ~WorldBattleAck();

  WorldBattleAck(const WorldBattleAck& from);

  inline WorldBattleAck& operator=(const WorldBattleAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldBattleAck& default_instance();

  static const WorldBattleAck* internal_default_instance();

  void Swap(WorldBattleAck* other);

  // implements Message ----------------------------------------------

  inline WorldBattleAck* New() const { return New(NULL); }

  WorldBattleAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldBattleAck& from);
  void MergeFrom(const WorldBattleAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WorldBattleAck* other);
  void UnsafeMergeFrom(const WorldBattleAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional .NetMsg.BattleAck battle = 2;
  bool has_battle() const;
  void clear_battle();
  static const int kBattleFieldNumber = 2;
  const ::NetMsg::BattleAck& battle() const;
  ::NetMsg::BattleAck* mutable_battle();
  ::NetMsg::BattleAck* release_battle();
  void set_allocated_battle(::NetMsg::BattleAck* battle);

  // @@protoc_insertion_point(class_scope:NetMsg.WorldBattleAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NetMsg::BattleAck* battle_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<WorldBattleAck> WorldBattleAck_default_instance_;

// -------------------------------------------------------------------

class ReqWorldWarTopList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqWorldWarTopList) */ {
 public:
  ReqWorldWarTopList();
  virtual ~ReqWorldWarTopList();

  ReqWorldWarTopList(const ReqWorldWarTopList& from);

  inline ReqWorldWarTopList& operator=(const ReqWorldWarTopList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqWorldWarTopList& default_instance();

  static const ReqWorldWarTopList* internal_default_instance();

  void Swap(ReqWorldWarTopList* other);

  // implements Message ----------------------------------------------

  inline ReqWorldWarTopList* New() const { return New(NULL); }

  ReqWorldWarTopList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqWorldWarTopList& from);
  void MergeFrom(const ReqWorldWarTopList& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqWorldWarTopList* other);
  void UnsafeMergeFrom(const ReqWorldWarTopList& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqWorldWarTopList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqWorldWarTopList> ReqWorldWarTopList_default_instance_;

// -------------------------------------------------------------------

class WorldWarUserInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.WorldWarUserInfo) */ {
 public:
  WorldWarUserInfo();
  virtual ~WorldWarUserInfo();

  WorldWarUserInfo(const WorldWarUserInfo& from);

  inline WorldWarUserInfo& operator=(const WorldWarUserInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldWarUserInfo& default_instance();

  static const WorldWarUserInfo* internal_default_instance();

  void Swap(WorldWarUserInfo* other);

  // implements Message ----------------------------------------------

  inline WorldWarUserInfo* New() const { return New(NULL); }

  WorldWarUserInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldWarUserInfo& from);
  void MergeFrom(const WorldWarUserInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WorldWarUserInfo* other);
  void UnsafeMergeFrom(const WorldWarUserInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userId = 1;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 exploit = 2;
  void clear_exploit();
  static const int kExploitFieldNumber = 2;
  ::google::protobuf::uint32 exploit() const;
  void set_exploit(::google::protobuf::uint32 value);

  // optional string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 title = 4;
  void clear_title();
  static const int kTitleFieldNumber = 4;
  ::google::protobuf::uint32 title() const;
  void set_title(::google::protobuf::uint32 value);

  // optional uint32 force = 5;
  void clear_force();
  static const int kForceFieldNumber = 5;
  ::google::protobuf::uint32 force() const;
  void set_force(::google::protobuf::uint32 value);

  // optional uint32 level = 6;
  void clear_level();
  static const int kLevelFieldNumber = 6;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.WorldWarUserInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 exploit_;
  ::google::protobuf::uint32 title_;
  ::google::protobuf::uint32 force_;
  ::google::protobuf::uint32 level_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<WorldWarUserInfo> WorldWarUserInfo_default_instance_;

// -------------------------------------------------------------------

class WorldWarTopListAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.WorldWarTopListAck) */ {
 public:
  WorldWarTopListAck();
  virtual ~WorldWarTopListAck();

  WorldWarTopListAck(const WorldWarTopListAck& from);

  inline WorldWarTopListAck& operator=(const WorldWarTopListAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldWarTopListAck& default_instance();

  static const WorldWarTopListAck* internal_default_instance();

  void Swap(WorldWarTopListAck* other);

  // implements Message ----------------------------------------------

  inline WorldWarTopListAck* New() const { return New(NULL); }

  WorldWarTopListAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldWarTopListAck& from);
  void MergeFrom(const WorldWarTopListAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WorldWarTopListAck* other);
  void UnsafeMergeFrom(const WorldWarTopListAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // repeated .NetMsg.WorldWarUserInfo tolList = 2;
  int tollist_size() const;
  void clear_tollist();
  static const int kTolListFieldNumber = 2;
  const ::NetMsg::WorldWarUserInfo& tollist(int index) const;
  ::NetMsg::WorldWarUserInfo* mutable_tollist(int index);
  ::NetMsg::WorldWarUserInfo* add_tollist();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::WorldWarUserInfo >*
      mutable_tollist();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::WorldWarUserInfo >&
      tollist() const;

  // repeated .NetMsg.WorldWarUserInfo lastList = 3;
  int lastlist_size() const;
  void clear_lastlist();
  static const int kLastListFieldNumber = 3;
  const ::NetMsg::WorldWarUserInfo& lastlist(int index) const;
  ::NetMsg::WorldWarUserInfo* mutable_lastlist(int index);
  ::NetMsg::WorldWarUserInfo* add_lastlist();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::WorldWarUserInfo >*
      mutable_lastlist();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::WorldWarUserInfo >&
      lastlist() const;

  // optional uint32 tolRank = 4;
  void clear_tolrank();
  static const int kTolRankFieldNumber = 4;
  ::google::protobuf::uint32 tolrank() const;
  void set_tolrank(::google::protobuf::uint32 value);

  // optional uint32 lastRank = 5;
  void clear_lastrank();
  static const int kLastRankFieldNumber = 5;
  ::google::protobuf::uint32 lastrank() const;
  void set_lastrank(::google::protobuf::uint32 value);

  // optional uint32 tolExploit = 6;
  void clear_tolexploit();
  static const int kTolExploitFieldNumber = 6;
  ::google::protobuf::uint32 tolexploit() const;
  void set_tolexploit(::google::protobuf::uint32 value);

  // optional uint32 lastExploit = 7;
  void clear_lastexploit();
  static const int kLastExploitFieldNumber = 7;
  ::google::protobuf::uint32 lastexploit() const;
  void set_lastexploit(::google::protobuf::uint32 value);

  // optional uint32 tolLeftTime = 8;
  void clear_tollefttime();
  static const int kTolLeftTimeFieldNumber = 8;
  ::google::protobuf::uint32 tollefttime() const;
  void set_tollefttime(::google::protobuf::uint32 value);

  // optional uint32 periodLeftTime = 9;
  void clear_periodlefttime();
  static const int kPeriodLeftTimeFieldNumber = 9;
  ::google::protobuf::uint32 periodlefttime() const;
  void set_periodlefttime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.WorldWarTopListAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::WorldWarUserInfo > tollist_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::WorldWarUserInfo > lastlist_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 tolrank_;
  ::google::protobuf::uint32 lastrank_;
  ::google::protobuf::uint32 tolexploit_;
  ::google::protobuf::uint32 lastexploit_;
  ::google::protobuf::uint32 tollefttime_;
  ::google::protobuf::uint32 periodlefttime_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<WorldWarTopListAck> WorldWarTopListAck_default_instance_;

// -------------------------------------------------------------------

class TeamInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.TeamInfo) */ {
 public:
  TeamInfo();
  virtual ~TeamInfo();

  TeamInfo(const TeamInfo& from);

  inline TeamInfo& operator=(const TeamInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamInfo& default_instance();

  static const TeamInfo* internal_default_instance();

  void Swap(TeamInfo* other);

  // implements Message ----------------------------------------------

  inline TeamInfo* New() const { return New(NULL); }

  TeamInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamInfo& from);
  void MergeFrom(const TeamInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TeamInfo* other);
  void UnsafeMergeFrom(const TeamInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 heroId = 1;
  int heroid_size() const;
  void clear_heroid();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::uint64 heroid(int index) const;
  void set_heroid(int index, ::google::protobuf::uint64 value);
  void add_heroid(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      heroid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_heroid();

  // optional uint64 clusterId = 2;
  void clear_clusterid();
  static const int kClusterIdFieldNumber = 2;
  ::google::protobuf::uint64 clusterid() const;
  void set_clusterid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:NetMsg.TeamInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > heroid_;
  mutable int _heroid_cached_byte_size_;
  ::google::protobuf::uint64 clusterid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TeamInfo> TeamInfo_default_instance_;

// -------------------------------------------------------------------

class TeamInfoAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.TeamInfoAck) */ {
 public:
  TeamInfoAck();
  virtual ~TeamInfoAck();

  TeamInfoAck(const TeamInfoAck& from);

  inline TeamInfoAck& operator=(const TeamInfoAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamInfoAck& default_instance();

  static const TeamInfoAck* internal_default_instance();

  void Swap(TeamInfoAck* other);

  // implements Message ----------------------------------------------

  inline TeamInfoAck* New() const { return New(NULL); }

  TeamInfoAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamInfoAck& from);
  void MergeFrom(const TeamInfoAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TeamInfoAck* other);
  void UnsafeMergeFrom(const TeamInfoAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .NetMsg.TeamInfo infos = 1;
  int infos_size() const;
  void clear_infos();
  static const int kInfosFieldNumber = 1;
  const ::NetMsg::TeamInfo& infos(int index) const;
  ::NetMsg::TeamInfo* mutable_infos(int index);
  ::NetMsg::TeamInfo* add_infos();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::TeamInfo >*
      mutable_infos();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::TeamInfo >&
      infos() const;

  // @@protoc_insertion_point(class_scope:NetMsg.TeamInfoAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::TeamInfo > infos_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TeamInfoAck> TeamInfoAck_default_instance_;

// -------------------------------------------------------------------

class ReqSetTeam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqSetTeam) */ {
 public:
  ReqSetTeam();
  virtual ~ReqSetTeam();

  ReqSetTeam(const ReqSetTeam& from);

  inline ReqSetTeam& operator=(const ReqSetTeam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqSetTeam& default_instance();

  static const ReqSetTeam* internal_default_instance();

  void Swap(ReqSetTeam* other);

  // implements Message ----------------------------------------------

  inline ReqSetTeam* New() const { return New(NULL); }

  ReqSetTeam* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqSetTeam& from);
  void MergeFrom(const ReqSetTeam& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqSetTeam* other);
  void UnsafeMergeFrom(const ReqSetTeam& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 pos = 1;
  void clear_pos();
  static const int kPosFieldNumber = 1;
  ::google::protobuf::uint32 pos() const;
  void set_pos(::google::protobuf::uint32 value);

  // repeated uint64 heroId = 2;
  int heroid_size() const;
  void clear_heroid();
  static const int kHeroIdFieldNumber = 2;
  ::google::protobuf::uint64 heroid(int index) const;
  void set_heroid(int index, ::google::protobuf::uint64 value);
  void add_heroid(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      heroid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_heroid();

  // @@protoc_insertion_point(class_scope:NetMsg.ReqSetTeam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > heroid_;
  mutable int _heroid_cached_byte_size_;
  ::google::protobuf::uint32 pos_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqSetTeam> ReqSetTeam_default_instance_;

// -------------------------------------------------------------------

class SetTeamAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.SetTeamAck) */ {
 public:
  SetTeamAck();
  virtual ~SetTeamAck();

  SetTeamAck(const SetTeamAck& from);

  inline SetTeamAck& operator=(const SetTeamAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetTeamAck& default_instance();

  static const SetTeamAck* internal_default_instance();

  void Swap(SetTeamAck* other);

  // implements Message ----------------------------------------------

  inline SetTeamAck* New() const { return New(NULL); }

  SetTeamAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetTeamAck& from);
  void MergeFrom(const SetTeamAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetTeamAck* other);
  void UnsafeMergeFrom(const SetTeamAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 pos = 1;
  void clear_pos();
  static const int kPosFieldNumber = 1;
  ::google::protobuf::uint32 pos() const;
  void set_pos(::google::protobuf::uint32 value);

  // repeated uint64 heroId = 2;
  int heroid_size() const;
  void clear_heroid();
  static const int kHeroIdFieldNumber = 2;
  ::google::protobuf::uint64 heroid(int index) const;
  void set_heroid(int index, ::google::protobuf::uint64 value);
  void add_heroid(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      heroid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_heroid();

  // optional uint32 error = 3;
  void clear_error();
  static const int kErrorFieldNumber = 3;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.SetTeamAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > heroid_;
  mutable int _heroid_cached_byte_size_;
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SetTeamAck> SetTeamAck_default_instance_;

// -------------------------------------------------------------------

class ReqWriteSkillBook : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqWriteSkillBook) */ {
 public:
  ReqWriteSkillBook();
  virtual ~ReqWriteSkillBook();

  ReqWriteSkillBook(const ReqWriteSkillBook& from);

  inline ReqWriteSkillBook& operator=(const ReqWriteSkillBook& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqWriteSkillBook& default_instance();

  static const ReqWriteSkillBook* internal_default_instance();

  void Swap(ReqWriteSkillBook* other);

  // implements Message ----------------------------------------------

  inline ReqWriteSkillBook* New() const { return New(NULL); }

  ReqWriteSkillBook* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqWriteSkillBook& from);
  void MergeFrom(const ReqWriteSkillBook& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqWriteSkillBook* other);
  void UnsafeMergeFrom(const ReqWriteSkillBook& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 heroId = 1;
  void clear_heroid();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::uint64 heroid() const;
  void set_heroid(::google::protobuf::uint64 value);

  // repeated .NetMsg.ItemInfo items = 2;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 2;
  const ::NetMsg::ItemInfo& items(int index) const;
  ::NetMsg::ItemInfo* mutable_items(int index);
  ::NetMsg::ItemInfo* add_items();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::ItemInfo >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::ItemInfo >&
      items() const;

  // @@protoc_insertion_point(class_scope:NetMsg.ReqWriteSkillBook)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::ItemInfo > items_;
  ::google::protobuf::uint64 heroid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqWriteSkillBook> ReqWriteSkillBook_default_instance_;

// -------------------------------------------------------------------

class WriteSkillBookAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.WriteSkillBookAck) */ {
 public:
  WriteSkillBookAck();
  virtual ~WriteSkillBookAck();

  WriteSkillBookAck(const WriteSkillBookAck& from);

  inline WriteSkillBookAck& operator=(const WriteSkillBookAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteSkillBookAck& default_instance();

  static const WriteSkillBookAck* internal_default_instance();

  void Swap(WriteSkillBookAck* other);

  // implements Message ----------------------------------------------

  inline WriteSkillBookAck* New() const { return New(NULL); }

  WriteSkillBookAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WriteSkillBookAck& from);
  void MergeFrom(const WriteSkillBookAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WriteSkillBookAck* other);
  void UnsafeMergeFrom(const WriteSkillBookAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .NetMsg.ItemInfo items = 1;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 1;
  const ::NetMsg::ItemInfo& items(int index) const;
  ::NetMsg::ItemInfo* mutable_items(int index);
  ::NetMsg::ItemInfo* add_items();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::ItemInfo >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::ItemInfo >&
      items() const;

  // optional uint32 error = 2;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.WriteSkillBookAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::ItemInfo > items_;
  ::google::protobuf::uint32 error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<WriteSkillBookAck> WriteSkillBookAck_default_instance_;

// -------------------------------------------------------------------

class ReqTeamRunPath : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqTeamRunPath) */ {
 public:
  ReqTeamRunPath();
  virtual ~ReqTeamRunPath();

  ReqTeamRunPath(const ReqTeamRunPath& from);

  inline ReqTeamRunPath& operator=(const ReqTeamRunPath& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqTeamRunPath& default_instance();

  static const ReqTeamRunPath* internal_default_instance();

  void Swap(ReqTeamRunPath* other);

  // implements Message ----------------------------------------------

  inline ReqTeamRunPath* New() const { return New(NULL); }

  ReqTeamRunPath* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqTeamRunPath& from);
  void MergeFrom(const ReqTeamRunPath& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqTeamRunPath* other);
  void UnsafeMergeFrom(const ReqTeamRunPath& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 position = 1;
  void clear_position();
  static const int kPositionFieldNumber = 1;
  ::google::protobuf::uint32 position() const;
  void set_position(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqTeamRunPath)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 position_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqTeamRunPath> ReqTeamRunPath_default_instance_;

// -------------------------------------------------------------------

class TeamRunPathAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.TeamRunPathAck) */ {
 public:
  TeamRunPathAck();
  virtual ~TeamRunPathAck();

  TeamRunPathAck(const TeamRunPathAck& from);

  inline TeamRunPathAck& operator=(const TeamRunPathAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRunPathAck& default_instance();

  static const TeamRunPathAck* internal_default_instance();

  void Swap(TeamRunPathAck* other);

  // implements Message ----------------------------------------------

  inline TeamRunPathAck* New() const { return New(NULL); }

  TeamRunPathAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamRunPathAck& from);
  void MergeFrom(const TeamRunPathAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TeamRunPathAck* other);
  void UnsafeMergeFrom(const TeamRunPathAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 position = 1;
  void clear_position();
  static const int kPositionFieldNumber = 1;
  ::google::protobuf::uint32 position() const;
  void set_position(::google::protobuf::uint32 value);

  // optional .NetMsg.RunPathAck path = 2;
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 2;
  const ::NetMsg::RunPathAck& path() const;
  ::NetMsg::RunPathAck* mutable_path();
  ::NetMsg::RunPathAck* release_path();
  void set_allocated_path(::NetMsg::RunPathAck* path);

  // optional int32 curCity = 3;
  void clear_curcity();
  static const int kCurCityFieldNumber = 3;
  ::google::protobuf::int32 curcity() const;
  void set_curcity(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.TeamRunPathAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NetMsg::RunPathAck* path_;
  ::google::protobuf::uint32 position_;
  ::google::protobuf::int32 curcity_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TeamRunPathAck> TeamRunPathAck_default_instance_;

// -------------------------------------------------------------------

class SetTeamRunPath : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.SetTeamRunPath) */ {
 public:
  SetTeamRunPath();
  virtual ~SetTeamRunPath();

  SetTeamRunPath(const SetTeamRunPath& from);

  inline SetTeamRunPath& operator=(const SetTeamRunPath& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetTeamRunPath& default_instance();

  static const SetTeamRunPath* internal_default_instance();

  void Swap(SetTeamRunPath* other);

  // implements Message ----------------------------------------------

  inline SetTeamRunPath* New() const { return New(NULL); }

  SetTeamRunPath* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetTeamRunPath& from);
  void MergeFrom(const SetTeamRunPath& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetTeamRunPath* other);
  void UnsafeMergeFrom(const SetTeamRunPath& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 position = 1;
  void clear_position();
  static const int kPositionFieldNumber = 1;
  ::google::protobuf::uint32 position() const;
  void set_position(::google::protobuf::uint32 value);

  // optional .NetMsg.RunPathAck path = 2;
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 2;
  const ::NetMsg::RunPathAck& path() const;
  ::NetMsg::RunPathAck* mutable_path();
  ::NetMsg::RunPathAck* release_path();
  void set_allocated_path(::NetMsg::RunPathAck* path);

  // @@protoc_insertion_point(class_scope:NetMsg.SetTeamRunPath)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NetMsg::RunPathAck* path_;
  ::google::protobuf::uint32 position_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SetTeamRunPath> SetTeamRunPath_default_instance_;

// -------------------------------------------------------------------

class ReqTeamArrivedTar : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqTeamArrivedTar) */ {
 public:
  ReqTeamArrivedTar();
  virtual ~ReqTeamArrivedTar();

  ReqTeamArrivedTar(const ReqTeamArrivedTar& from);

  inline ReqTeamArrivedTar& operator=(const ReqTeamArrivedTar& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqTeamArrivedTar& default_instance();

  static const ReqTeamArrivedTar* internal_default_instance();

  void Swap(ReqTeamArrivedTar* other);

  // implements Message ----------------------------------------------

  inline ReqTeamArrivedTar* New() const { return New(NULL); }

  ReqTeamArrivedTar* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqTeamArrivedTar& from);
  void MergeFrom(const ReqTeamArrivedTar& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqTeamArrivedTar* other);
  void UnsafeMergeFrom(const ReqTeamArrivedTar& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 position = 1;
  void clear_position();
  static const int kPositionFieldNumber = 1;
  ::google::protobuf::uint32 position() const;
  void set_position(::google::protobuf::uint32 value);

  // optional .NetMsg.RunPathAck path = 2;
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 2;
  const ::NetMsg::RunPathAck& path() const;
  ::NetMsg::RunPathAck* mutable_path();
  ::NetMsg::RunPathAck* release_path();
  void set_allocated_path(::NetMsg::RunPathAck* path);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqTeamArrivedTar)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NetMsg::RunPathAck* path_;
  ::google::protobuf::uint32 position_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqTeamArrivedTar> ReqTeamArrivedTar_default_instance_;

// -------------------------------------------------------------------

class TeamArrivedTarAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.TeamArrivedTarAck) */ {
 public:
  TeamArrivedTarAck();
  virtual ~TeamArrivedTarAck();

  TeamArrivedTarAck(const TeamArrivedTarAck& from);

  inline TeamArrivedTarAck& operator=(const TeamArrivedTarAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamArrivedTarAck& default_instance();

  static const TeamArrivedTarAck* internal_default_instance();

  void Swap(TeamArrivedTarAck* other);

  // implements Message ----------------------------------------------

  inline TeamArrivedTarAck* New() const { return New(NULL); }

  TeamArrivedTarAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamArrivedTarAck& from);
  void MergeFrom(const TeamArrivedTarAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TeamArrivedTarAck* other);
  void UnsafeMergeFrom(const TeamArrivedTarAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 position = 1;
  void clear_position();
  static const int kPositionFieldNumber = 1;
  ::google::protobuf::uint32 position() const;
  void set_position(::google::protobuf::uint32 value);

  // optional .NetMsg.RunPathAck path = 2;
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 2;
  const ::NetMsg::RunPathAck& path() const;
  ::NetMsg::RunPathAck* mutable_path();
  ::NetMsg::RunPathAck* release_path();
  void set_allocated_path(::NetMsg::RunPathAck* path);

  // @@protoc_insertion_point(class_scope:NetMsg.TeamArrivedTarAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NetMsg::RunPathAck* path_;
  ::google::protobuf::uint32 position_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TeamArrivedTarAck> TeamArrivedTarAck_default_instance_;

// -------------------------------------------------------------------

class ClusterMemberInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ClusterMemberInfo) */ {
 public:
  ClusterMemberInfo();
  virtual ~ClusterMemberInfo();

  ClusterMemberInfo(const ClusterMemberInfo& from);

  inline ClusterMemberInfo& operator=(const ClusterMemberInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClusterMemberInfo& default_instance();

  static const ClusterMemberInfo* internal_default_instance();

  void Swap(ClusterMemberInfo* other);

  // implements Message ----------------------------------------------

  inline ClusterMemberInfo* New() const { return New(NULL); }

  ClusterMemberInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClusterMemberInfo& from);
  void MergeFrom(const ClusterMemberInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClusterMemberInfo* other);
  void UnsafeMergeFrom(const ClusterMemberInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userId = 1;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 teamPos = 2;
  void clear_teampos();
  static const int kTeamPosFieldNumber = 2;
  ::google::protobuf::uint32 teampos() const;
  void set_teampos(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ClusterMemberInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 teampos_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ClusterMemberInfo> ClusterMemberInfo_default_instance_;

// -------------------------------------------------------------------

class ClusterCreater : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ClusterCreater) */ {
 public:
  ClusterCreater();
  virtual ~ClusterCreater();

  ClusterCreater(const ClusterCreater& from);

  inline ClusterCreater& operator=(const ClusterCreater& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClusterCreater& default_instance();

  static const ClusterCreater* internal_default_instance();

  void Swap(ClusterCreater* other);

  // implements Message ----------------------------------------------

  inline ClusterCreater* New() const { return New(NULL); }

  ClusterCreater* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClusterCreater& from);
  void MergeFrom(const ClusterCreater& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClusterCreater* other);
  void UnsafeMergeFrom(const ClusterCreater& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 createrId = 1;
  void clear_createrid();
  static const int kCreaterIdFieldNumber = 1;
  ::google::protobuf::uint32 createrid() const;
  void set_createrid(::google::protobuf::uint32 value);

  // optional string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:NetMsg.ClusterCreater)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 createrid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ClusterCreater> ClusterCreater_default_instance_;

// -------------------------------------------------------------------

class ClusterInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ClusterInfo) */ {
 public:
  ClusterInfo();
  virtual ~ClusterInfo();

  ClusterInfo(const ClusterInfo& from);

  inline ClusterInfo& operator=(const ClusterInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClusterInfo& default_instance();

  static const ClusterInfo* internal_default_instance();

  void Swap(ClusterInfo* other);

  // implements Message ----------------------------------------------

  inline ClusterInfo* New() const { return New(NULL); }

  ClusterInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClusterInfo& from);
  void MergeFrom(const ClusterInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClusterInfo* other);
  void UnsafeMergeFrom(const ClusterInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint64 uid() const;
  void set_uid(::google::protobuf::uint64 value);

  // optional .NetMsg.ClusterCreater creater = 2;
  bool has_creater() const;
  void clear_creater();
  static const int kCreaterFieldNumber = 2;
  const ::NetMsg::ClusterCreater& creater() const;
  ::NetMsg::ClusterCreater* mutable_creater();
  ::NetMsg::ClusterCreater* release_creater();
  void set_allocated_creater(::NetMsg::ClusterCreater* creater);

  // repeated .NetMsg.ClusterMemberInfo members = 3;
  int members_size() const;
  void clear_members();
  static const int kMembersFieldNumber = 3;
  const ::NetMsg::ClusterMemberInfo& members(int index) const;
  ::NetMsg::ClusterMemberInfo* mutable_members(int index);
  ::NetMsg::ClusterMemberInfo* add_members();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::ClusterMemberInfo >*
      mutable_members();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::ClusterMemberInfo >&
      members() const;

  // @@protoc_insertion_point(class_scope:NetMsg.ClusterInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::ClusterMemberInfo > members_;
  ::NetMsg::ClusterCreater* creater_;
  ::google::protobuf::uint64 uid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ClusterInfo> ClusterInfo_default_instance_;

// -------------------------------------------------------------------

class ReqClusterDetailInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqClusterDetailInfo) */ {
 public:
  ReqClusterDetailInfo();
  virtual ~ReqClusterDetailInfo();

  ReqClusterDetailInfo(const ReqClusterDetailInfo& from);

  inline ReqClusterDetailInfo& operator=(const ReqClusterDetailInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqClusterDetailInfo& default_instance();

  static const ReqClusterDetailInfo* internal_default_instance();

  void Swap(ReqClusterDetailInfo* other);

  // implements Message ----------------------------------------------

  inline ReqClusterDetailInfo* New() const { return New(NULL); }

  ReqClusterDetailInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqClusterDetailInfo& from);
  void MergeFrom(const ReqClusterDetailInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqClusterDetailInfo* other);
  void UnsafeMergeFrom(const ReqClusterDetailInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint64 uid() const;
  void set_uid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqClusterDetailInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 uid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqClusterDetailInfo> ReqClusterDetailInfo_default_instance_;

// -------------------------------------------------------------------

class TeamMemberDetail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.TeamMemberDetail) */ {
 public:
  TeamMemberDetail();
  virtual ~TeamMemberDetail();

  TeamMemberDetail(const TeamMemberDetail& from);

  inline TeamMemberDetail& operator=(const TeamMemberDetail& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamMemberDetail& default_instance();

  static const TeamMemberDetail* internal_default_instance();

  void Swap(TeamMemberDetail* other);

  // implements Message ----------------------------------------------

  inline TeamMemberDetail* New() const { return New(NULL); }

  TeamMemberDetail* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TeamMemberDetail& from);
  void MergeFrom(const TeamMemberDetail& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TeamMemberDetail* other);
  void UnsafeMergeFrom(const TeamMemberDetail& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 heroId = 1;
  void clear_heroid();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::uint32 heroid() const;
  void set_heroid(::google::protobuf::uint32 value);

  // optional uint32 level = 2;
  void clear_level();
  static const int kLevelFieldNumber = 2;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // optional int32 hp = 3;
  void clear_hp();
  static const int kHpFieldNumber = 3;
  ::google::protobuf::int32 hp() const;
  void set_hp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.TeamMemberDetail)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 heroid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::int32 hp_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TeamMemberDetail> TeamMemberDetail_default_instance_;

// -------------------------------------------------------------------

class ClusterMemberDetail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ClusterMemberDetail) */ {
 public:
  ClusterMemberDetail();
  virtual ~ClusterMemberDetail();

  ClusterMemberDetail(const ClusterMemberDetail& from);

  inline ClusterMemberDetail& operator=(const ClusterMemberDetail& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClusterMemberDetail& default_instance();

  static const ClusterMemberDetail* internal_default_instance();

  void Swap(ClusterMemberDetail* other);

  // implements Message ----------------------------------------------

  inline ClusterMemberDetail* New() const { return New(NULL); }

  ClusterMemberDetail* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClusterMemberDetail& from);
  void MergeFrom(const ClusterMemberDetail& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClusterMemberDetail* other);
  void UnsafeMergeFrom(const ClusterMemberDetail& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userId = 1;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional string userName = 2;
  void clear_username();
  static const int kUserNameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // repeated .NetMsg.TeamMemberDetail heros = 3;
  int heros_size() const;
  void clear_heros();
  static const int kHerosFieldNumber = 3;
  const ::NetMsg::TeamMemberDetail& heros(int index) const;
  ::NetMsg::TeamMemberDetail* mutable_heros(int index);
  ::NetMsg::TeamMemberDetail* add_heros();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::TeamMemberDetail >*
      mutable_heros();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::TeamMemberDetail >&
      heros() const;

  // @@protoc_insertion_point(class_scope:NetMsg.ClusterMemberDetail)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::TeamMemberDetail > heros_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::uint32 userid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ClusterMemberDetail> ClusterMemberDetail_default_instance_;

// -------------------------------------------------------------------

class ReqSetClusterAttr : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqSetClusterAttr) */ {
 public:
  ReqSetClusterAttr();
  virtual ~ReqSetClusterAttr();

  ReqSetClusterAttr(const ReqSetClusterAttr& from);

  inline ReqSetClusterAttr& operator=(const ReqSetClusterAttr& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqSetClusterAttr& default_instance();

  static const ReqSetClusterAttr* internal_default_instance();

  void Swap(ReqSetClusterAttr* other);

  // implements Message ----------------------------------------------

  inline ReqSetClusterAttr* New() const { return New(NULL); }

  ReqSetClusterAttr* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqSetClusterAttr& from);
  void MergeFrom(const ReqSetClusterAttr& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqSetClusterAttr* other);
  void UnsafeMergeFrom(const ReqSetClusterAttr& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint64 uid() const;
  void set_uid(::google::protobuf::uint64 value);

  // optional bool pub = 2;
  void clear_pub();
  static const int kPubFieldNumber = 2;
  bool pub() const;
  void set_pub(bool value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqSetClusterAttr)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 uid_;
  bool pub_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqSetClusterAttr> ReqSetClusterAttr_default_instance_;

// -------------------------------------------------------------------

class SetClusterAttrAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.SetClusterAttrAck) */ {
 public:
  SetClusterAttrAck();
  virtual ~SetClusterAttrAck();

  SetClusterAttrAck(const SetClusterAttrAck& from);

  inline SetClusterAttrAck& operator=(const SetClusterAttrAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetClusterAttrAck& default_instance();

  static const SetClusterAttrAck* internal_default_instance();

  void Swap(SetClusterAttrAck* other);

  // implements Message ----------------------------------------------

  inline SetClusterAttrAck* New() const { return New(NULL); }

  SetClusterAttrAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetClusterAttrAck& from);
  void MergeFrom(const SetClusterAttrAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetClusterAttrAck* other);
  void UnsafeMergeFrom(const SetClusterAttrAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint64 uid() const;
  void set_uid(::google::protobuf::uint64 value);

  // optional bool pub = 2;
  void clear_pub();
  static const int kPubFieldNumber = 2;
  bool pub() const;
  void set_pub(bool value);

  // optional uint32 error = 3;
  void clear_error();
  static const int kErrorFieldNumber = 3;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.SetClusterAttrAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 uid_;
  bool pub_;
  ::google::protobuf::uint32 error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SetClusterAttrAck> SetClusterAttrAck_default_instance_;

// -------------------------------------------------------------------

class ClusterDetailInfoAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ClusterDetailInfoAck) */ {
 public:
  ClusterDetailInfoAck();
  virtual ~ClusterDetailInfoAck();

  ClusterDetailInfoAck(const ClusterDetailInfoAck& from);

  inline ClusterDetailInfoAck& operator=(const ClusterDetailInfoAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClusterDetailInfoAck& default_instance();

  static const ClusterDetailInfoAck* internal_default_instance();

  void Swap(ClusterDetailInfoAck* other);

  // implements Message ----------------------------------------------

  inline ClusterDetailInfoAck* New() const { return New(NULL); }

  ClusterDetailInfoAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClusterDetailInfoAck& from);
  void MergeFrom(const ClusterDetailInfoAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClusterDetailInfoAck* other);
  void UnsafeMergeFrom(const ClusterDetailInfoAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint64 uid() const;
  void set_uid(::google::protobuf::uint64 value);

  // repeated .NetMsg.ClusterMemberDetail members = 2;
  int members_size() const;
  void clear_members();
  static const int kMembersFieldNumber = 2;
  const ::NetMsg::ClusterMemberDetail& members(int index) const;
  ::NetMsg::ClusterMemberDetail* mutable_members(int index);
  ::NetMsg::ClusterMemberDetail* add_members();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::ClusterMemberDetail >*
      mutable_members();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::ClusterMemberDetail >&
      members() const;

  // optional bool pub = 3;
  void clear_pub();
  static const int kPubFieldNumber = 3;
  bool pub() const;
  void set_pub(bool value);

  // optional uint32 error = 4;
  void clear_error();
  static const int kErrorFieldNumber = 4;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ClusterDetailInfoAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::ClusterMemberDetail > members_;
  ::google::protobuf::uint64 uid_;
  bool pub_;
  ::google::protobuf::uint32 error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ClusterDetailInfoAck> ClusterDetailInfoAck_default_instance_;

// -------------------------------------------------------------------

class ClusterInfoAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ClusterInfoAck) */ {
 public:
  ClusterInfoAck();
  virtual ~ClusterInfoAck();

  ClusterInfoAck(const ClusterInfoAck& from);

  inline ClusterInfoAck& operator=(const ClusterInfoAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClusterInfoAck& default_instance();

  static const ClusterInfoAck* internal_default_instance();

  void Swap(ClusterInfoAck* other);

  // implements Message ----------------------------------------------

  inline ClusterInfoAck* New() const { return New(NULL); }

  ClusterInfoAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClusterInfoAck& from);
  void MergeFrom(const ClusterInfoAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClusterInfoAck* other);
  void UnsafeMergeFrom(const ClusterInfoAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .NetMsg.ClusterInfo infos = 1;
  int infos_size() const;
  void clear_infos();
  static const int kInfosFieldNumber = 1;
  const ::NetMsg::ClusterInfo& infos(int index) const;
  ::NetMsg::ClusterInfo* mutable_infos(int index);
  ::NetMsg::ClusterInfo* add_infos();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::ClusterInfo >*
      mutable_infos();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::ClusterInfo >&
      infos() const;

  // @@protoc_insertion_point(class_scope:NetMsg.ClusterInfoAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::ClusterInfo > infos_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ClusterInfoAck> ClusterInfoAck_default_instance_;

// -------------------------------------------------------------------

class AllClusterAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.AllClusterAck) */ {
 public:
  AllClusterAck();
  virtual ~AllClusterAck();

  AllClusterAck(const AllClusterAck& from);

  inline AllClusterAck& operator=(const AllClusterAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllClusterAck& default_instance();

  static const AllClusterAck* internal_default_instance();

  void Swap(AllClusterAck* other);

  // implements Message ----------------------------------------------

  inline AllClusterAck* New() const { return New(NULL); }

  AllClusterAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AllClusterAck& from);
  void MergeFrom(const AllClusterAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AllClusterAck* other);
  void UnsafeMergeFrom(const AllClusterAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .NetMsg.ClusterInfo infos = 1;
  int infos_size() const;
  void clear_infos();
  static const int kInfosFieldNumber = 1;
  const ::NetMsg::ClusterInfo& infos(int index) const;
  ::NetMsg::ClusterInfo* mutable_infos(int index);
  ::NetMsg::ClusterInfo* add_infos();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::ClusterInfo >*
      mutable_infos();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::ClusterInfo >&
      infos() const;

  // @@protoc_insertion_point(class_scope:NetMsg.AllClusterAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::ClusterInfo > infos_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AllClusterAck> AllClusterAck_default_instance_;

// -------------------------------------------------------------------

class CreateClusterAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.CreateClusterAck) */ {
 public:
  CreateClusterAck();
  virtual ~CreateClusterAck();

  CreateClusterAck(const CreateClusterAck& from);

  inline CreateClusterAck& operator=(const CreateClusterAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateClusterAck& default_instance();

  static const CreateClusterAck* internal_default_instance();

  void Swap(CreateClusterAck* other);

  // implements Message ----------------------------------------------

  inline CreateClusterAck* New() const { return New(NULL); }

  CreateClusterAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateClusterAck& from);
  void MergeFrom(const CreateClusterAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CreateClusterAck* other);
  void UnsafeMergeFrom(const CreateClusterAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint64 uid() const;
  void set_uid(::google::protobuf::uint64 value);

  // optional uint32 error = 2;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.CreateClusterAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 uid_;
  ::google::protobuf::uint32 error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CreateClusterAck> CreateClusterAck_default_instance_;

// -------------------------------------------------------------------

class ReqJoinCluster : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqJoinCluster) */ {
 public:
  ReqJoinCluster();
  virtual ~ReqJoinCluster();

  ReqJoinCluster(const ReqJoinCluster& from);

  inline ReqJoinCluster& operator=(const ReqJoinCluster& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqJoinCluster& default_instance();

  static const ReqJoinCluster* internal_default_instance();

  void Swap(ReqJoinCluster* other);

  // implements Message ----------------------------------------------

  inline ReqJoinCluster* New() const { return New(NULL); }

  ReqJoinCluster* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqJoinCluster& from);
  void MergeFrom(const ReqJoinCluster& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqJoinCluster* other);
  void UnsafeMergeFrom(const ReqJoinCluster& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint64 uid() const;
  void set_uid(::google::protobuf::uint64 value);

  // optional uint32 teamPos = 2;
  void clear_teampos();
  static const int kTeamPosFieldNumber = 2;
  ::google::protobuf::uint32 teampos() const;
  void set_teampos(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqJoinCluster)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 uid_;
  ::google::protobuf::uint32 teampos_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqJoinCluster> ReqJoinCluster_default_instance_;

// -------------------------------------------------------------------

class JoinClusterAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.JoinClusterAck) */ {
 public:
  JoinClusterAck();
  virtual ~JoinClusterAck();

  JoinClusterAck(const JoinClusterAck& from);

  inline JoinClusterAck& operator=(const JoinClusterAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinClusterAck& default_instance();

  static const JoinClusterAck* internal_default_instance();

  void Swap(JoinClusterAck* other);

  // implements Message ----------------------------------------------

  inline JoinClusterAck* New() const { return New(NULL); }

  JoinClusterAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JoinClusterAck& from);
  void MergeFrom(const JoinClusterAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(JoinClusterAck* other);
  void UnsafeMergeFrom(const JoinClusterAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint64 uid() const;
  void set_uid(::google::protobuf::uint64 value);

  // optional uint32 teamPos = 2;
  void clear_teampos();
  static const int kTeamPosFieldNumber = 2;
  ::google::protobuf::uint32 teampos() const;
  void set_teampos(::google::protobuf::uint32 value);

  // optional uint32 error = 3;
  void clear_error();
  static const int kErrorFieldNumber = 3;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.JoinClusterAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 uid_;
  ::google::protobuf::uint32 teampos_;
  ::google::protobuf::uint32 error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<JoinClusterAck> JoinClusterAck_default_instance_;

// -------------------------------------------------------------------

class ReqExitCluster : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqExitCluster) */ {
 public:
  ReqExitCluster();
  virtual ~ReqExitCluster();

  ReqExitCluster(const ReqExitCluster& from);

  inline ReqExitCluster& operator=(const ReqExitCluster& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqExitCluster& default_instance();

  static const ReqExitCluster* internal_default_instance();

  void Swap(ReqExitCluster* other);

  // implements Message ----------------------------------------------

  inline ReqExitCluster* New() const { return New(NULL); }

  ReqExitCluster* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqExitCluster& from);
  void MergeFrom(const ReqExitCluster& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqExitCluster* other);
  void UnsafeMergeFrom(const ReqExitCluster& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint64 uid() const;
  void set_uid(::google::protobuf::uint64 value);

  // optional uint32 teamPos = 2;
  void clear_teampos();
  static const int kTeamPosFieldNumber = 2;
  ::google::protobuf::uint32 teampos() const;
  void set_teampos(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqExitCluster)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 uid_;
  ::google::protobuf::uint32 teampos_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqExitCluster> ReqExitCluster_default_instance_;

// -------------------------------------------------------------------

class ExitClusterAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ExitClusterAck) */ {
 public:
  ExitClusterAck();
  virtual ~ExitClusterAck();

  ExitClusterAck(const ExitClusterAck& from);

  inline ExitClusterAck& operator=(const ExitClusterAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExitClusterAck& default_instance();

  static const ExitClusterAck* internal_default_instance();

  void Swap(ExitClusterAck* other);

  // implements Message ----------------------------------------------

  inline ExitClusterAck* New() const { return New(NULL); }

  ExitClusterAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExitClusterAck& from);
  void MergeFrom(const ExitClusterAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ExitClusterAck* other);
  void UnsafeMergeFrom(const ExitClusterAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint64 uid() const;
  void set_uid(::google::protobuf::uint64 value);

  // optional uint32 teamPos = 2;
  void clear_teampos();
  static const int kTeamPosFieldNumber = 2;
  ::google::protobuf::uint32 teampos() const;
  void set_teampos(::google::protobuf::uint32 value);

  // optional uint32 error = 3;
  void clear_error();
  static const int kErrorFieldNumber = 3;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ExitClusterAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 uid_;
  ::google::protobuf::uint32 teampos_;
  ::google::protobuf::uint32 error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ExitClusterAck> ExitClusterAck_default_instance_;

// -------------------------------------------------------------------

class ReqCityItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqCityItem) */ {
 public:
  ReqCityItem();
  virtual ~ReqCityItem();

  ReqCityItem(const ReqCityItem& from);

  inline ReqCityItem& operator=(const ReqCityItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqCityItem& default_instance();

  static const ReqCityItem* internal_default_instance();

  void Swap(ReqCityItem* other);

  // implements Message ----------------------------------------------

  inline ReqCityItem* New() const { return New(NULL); }

  ReqCityItem* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqCityItem& from);
  void MergeFrom(const ReqCityItem& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqCityItem* other);
  void UnsafeMergeFrom(const ReqCityItem& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 cityId = 1;
  void clear_cityid();
  static const int kCityIdFieldNumber = 1;
  ::google::protobuf::uint32 cityid() const;
  void set_cityid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqCityItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 cityid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqCityItem> ReqCityItem_default_instance_;

// -------------------------------------------------------------------

class CityItemAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.CityItemAck) */ {
 public:
  CityItemAck();
  virtual ~CityItemAck();

  CityItemAck(const CityItemAck& from);

  inline CityItemAck& operator=(const CityItemAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CityItemAck& default_instance();

  static const CityItemAck* internal_default_instance();

  void Swap(CityItemAck* other);

  // implements Message ----------------------------------------------

  inline CityItemAck* New() const { return New(NULL); }

  CityItemAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CityItemAck& from);
  void MergeFrom(const CityItemAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CityItemAck* other);
  void UnsafeMergeFrom(const CityItemAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .NetMsg.CityItemInfo cityItem = 1;
  int cityitem_size() const;
  void clear_cityitem();
  static const int kCityItemFieldNumber = 1;
  const ::NetMsg::CityItemInfo& cityitem(int index) const;
  ::NetMsg::CityItemInfo* mutable_cityitem(int index);
  ::NetMsg::CityItemInfo* add_cityitem();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::CityItemInfo >*
      mutable_cityitem();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::CityItemInfo >&
      cityitem() const;

  // optional uint32 error = 2;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.CityItemAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::CityItemInfo > cityitem_;
  ::google::protobuf::uint32 error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CityItemAck> CityItemAck_default_instance_;

// -------------------------------------------------------------------

class ReqCityHero : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqCityHero) */ {
 public:
  ReqCityHero();
  virtual ~ReqCityHero();

  ReqCityHero(const ReqCityHero& from);

  inline ReqCityHero& operator=(const ReqCityHero& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqCityHero& default_instance();

  static const ReqCityHero* internal_default_instance();

  void Swap(ReqCityHero* other);

  // implements Message ----------------------------------------------

  inline ReqCityHero* New() const { return New(NULL); }

  ReqCityHero* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqCityHero& from);
  void MergeFrom(const ReqCityHero& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqCityHero* other);
  void UnsafeMergeFrom(const ReqCityHero& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 cityId = 1;
  void clear_cityid();
  static const int kCityIdFieldNumber = 1;
  ::google::protobuf::uint32 cityid() const;
  void set_cityid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqCityHero)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 cityid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqCityHero> ReqCityHero_default_instance_;

// -------------------------------------------------------------------

class CityHeroAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.CityHeroAck) */ {
 public:
  CityHeroAck();
  virtual ~CityHeroAck();

  CityHeroAck(const CityHeroAck& from);

  inline CityHeroAck& operator=(const CityHeroAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CityHeroAck& default_instance();

  static const CityHeroAck* internal_default_instance();

  void Swap(CityHeroAck* other);

  // implements Message ----------------------------------------------

  inline CityHeroAck* New() const { return New(NULL); }

  CityHeroAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CityHeroAck& from);
  void MergeFrom(const CityHeroAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CityHeroAck* other);
  void UnsafeMergeFrom(const CityHeroAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .NetMsg.CityHeroInfo cityHero = 1;
  int cityhero_size() const;
  void clear_cityhero();
  static const int kCityHeroFieldNumber = 1;
  const ::NetMsg::CityHeroInfo& cityhero(int index) const;
  ::NetMsg::CityHeroInfo* mutable_cityhero(int index);
  ::NetMsg::CityHeroInfo* add_cityhero();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::CityHeroInfo >*
      mutable_cityhero();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::CityHeroInfo >&
      cityhero() const;

  // optional uint32 error = 2;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.CityHeroAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::CityHeroInfo > cityhero_;
  ::google::protobuf::uint32 error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CityHeroAck> CityHeroAck_default_instance_;

// -------------------------------------------------------------------

class ResourceInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ResourceInfo) */ {
 public:
  ResourceInfo();
  virtual ~ResourceInfo();

  ResourceInfo(const ResourceInfo& from);

  inline ResourceInfo& operator=(const ResourceInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResourceInfo& default_instance();

  static const ResourceInfo* internal_default_instance();

  void Swap(ResourceInfo* other);

  // implements Message ----------------------------------------------

  inline ResourceInfo* New() const { return New(NULL); }

  ResourceInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResourceInfo& from);
  void MergeFrom(const ResourceInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ResourceInfo* other);
  void UnsafeMergeFrom(const ResourceInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // optional uint32 star = 2;
  void clear_star();
  static const int kStarFieldNumber = 2;
  ::google::protobuf::uint32 star() const;
  void set_star(::google::protobuf::uint32 value);

  // optional .NetMsg.ResourceType type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::NetMsg::ResourceType type() const;
  void set_type(::NetMsg::ResourceType value);

  // optional uint32 resourceNum = 4;
  void clear_resourcenum();
  static const int kResourceNumFieldNumber = 4;
  ::google::protobuf::uint32 resourcenum() const;
  void set_resourcenum(::google::protobuf::uint32 value);

  // optional uint32 leftTime = 5;
  void clear_lefttime();
  static const int kLeftTimeFieldNumber = 5;
  ::google::protobuf::uint32 lefttime() const;
  void set_lefttime(::google::protobuf::uint32 value);

  // optional uint32 posId = 6;
  void clear_posid();
  static const int kPosIdFieldNumber = 6;
  ::google::protobuf::uint32 posid() const;
  void set_posid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ResourceInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 star_;
  int type_;
  ::google::protobuf::uint32 resourcenum_;
  ::google::protobuf::uint32 lefttime_;
  ::google::protobuf::uint32 posid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ResourceInfo> ResourceInfo_default_instance_;

// -------------------------------------------------------------------

class ResourceInfoAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ResourceInfoAck) */ {
 public:
  ResourceInfoAck();
  virtual ~ResourceInfoAck();

  ResourceInfoAck(const ResourceInfoAck& from);

  inline ResourceInfoAck& operator=(const ResourceInfoAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResourceInfoAck& default_instance();

  static const ResourceInfoAck* internal_default_instance();

  void Swap(ResourceInfoAck* other);

  // implements Message ----------------------------------------------

  inline ResourceInfoAck* New() const { return New(NULL); }

  ResourceInfoAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResourceInfoAck& from);
  void MergeFrom(const ResourceInfoAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ResourceInfoAck* other);
  void UnsafeMergeFrom(const ResourceInfoAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .NetMsg.ResourceInfo info = 1;
  int info_size() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::NetMsg::ResourceInfo& info(int index) const;
  ::NetMsg::ResourceInfo* mutable_info(int index);
  ::NetMsg::ResourceInfo* add_info();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::ResourceInfo >*
      mutable_info();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::ResourceInfo >&
      info() const;

  // @@protoc_insertion_point(class_scope:NetMsg.ResourceInfoAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::ResourceInfo > info_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ResourceInfoAck> ResourceInfoAck_default_instance_;

// -------------------------------------------------------------------

class ReqResourceDetailInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqResourceDetailInfo) */ {
 public:
  ReqResourceDetailInfo();
  virtual ~ReqResourceDetailInfo();

  ReqResourceDetailInfo(const ReqResourceDetailInfo& from);

  inline ReqResourceDetailInfo& operator=(const ReqResourceDetailInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqResourceDetailInfo& default_instance();

  static const ReqResourceDetailInfo* internal_default_instance();

  void Swap(ReqResourceDetailInfo* other);

  // implements Message ----------------------------------------------

  inline ReqResourceDetailInfo* New() const { return New(NULL); }

  ReqResourceDetailInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqResourceDetailInfo& from);
  void MergeFrom(const ReqResourceDetailInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqResourceDetailInfo* other);
  void UnsafeMergeFrom(const ReqResourceDetailInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqResourceDetailInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 uid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqResourceDetailInfo> ReqResourceDetailInfo_default_instance_;

// -------------------------------------------------------------------

class ResourceDetailInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ResourceDetailInfo) */ {
 public:
  ResourceDetailInfo();
  virtual ~ResourceDetailInfo();

  ResourceDetailInfo(const ResourceDetailInfo& from);

  inline ResourceDetailInfo& operator=(const ResourceDetailInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResourceDetailInfo& default_instance();

  static const ResourceDetailInfo* internal_default_instance();

  void Swap(ResourceDetailInfo* other);

  // implements Message ----------------------------------------------

  inline ResourceDetailInfo* New() const { return New(NULL); }

  ResourceDetailInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResourceDetailInfo& from);
  void MergeFrom(const ResourceDetailInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ResourceDetailInfo* other);
  void UnsafeMergeFrom(const ResourceDetailInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 teamPos = 1;
  void clear_teampos();
  static const int kTeamPosFieldNumber = 1;
  ::google::protobuf::uint32 teampos() const;
  void set_teampos(::google::protobuf::uint32 value);

  // optional uint32 resourceNum = 2;
  void clear_resourcenum();
  static const int kResourceNumFieldNumber = 2;
  ::google::protobuf::uint32 resourcenum() const;
  void set_resourcenum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ResourceDetailInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 teampos_;
  ::google::protobuf::uint32 resourcenum_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ResourceDetailInfo> ResourceDetailInfo_default_instance_;

// -------------------------------------------------------------------

class ResourceDetailInfoAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ResourceDetailInfoAck) */ {
 public:
  ResourceDetailInfoAck();
  virtual ~ResourceDetailInfoAck();

  ResourceDetailInfoAck(const ResourceDetailInfoAck& from);

  inline ResourceDetailInfoAck& operator=(const ResourceDetailInfoAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResourceDetailInfoAck& default_instance();

  static const ResourceDetailInfoAck* internal_default_instance();

  void Swap(ResourceDetailInfoAck* other);

  // implements Message ----------------------------------------------

  inline ResourceDetailInfoAck* New() const { return New(NULL); }

  ResourceDetailInfoAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResourceDetailInfoAck& from);
  void MergeFrom(const ResourceDetailInfoAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ResourceDetailInfoAck* other);
  void UnsafeMergeFrom(const ResourceDetailInfoAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // optional uint32 resourceNum = 2;
  void clear_resourcenum();
  static const int kResourceNumFieldNumber = 2;
  ::google::protobuf::uint32 resourcenum() const;
  void set_resourcenum(::google::protobuf::uint32 value);

  // repeated .NetMsg.ResourceDetailInfo detailInfo = 3;
  int detailinfo_size() const;
  void clear_detailinfo();
  static const int kDetailInfoFieldNumber = 3;
  const ::NetMsg::ResourceDetailInfo& detailinfo(int index) const;
  ::NetMsg::ResourceDetailInfo* mutable_detailinfo(int index);
  ::NetMsg::ResourceDetailInfo* add_detailinfo();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::ResourceDetailInfo >*
      mutable_detailinfo();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::ResourceDetailInfo >&
      detailinfo() const;

  // optional uint32 error = 4;
  void clear_error();
  static const int kErrorFieldNumber = 4;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ResourceDetailInfoAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::ResourceDetailInfo > detailinfo_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 resourcenum_;
  ::google::protobuf::uint32 error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ResourceDetailInfoAck> ResourceDetailInfoAck_default_instance_;

// -------------------------------------------------------------------

class RegInviteJoinCluster : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.RegInviteJoinCluster) */ {
 public:
  RegInviteJoinCluster();
  virtual ~RegInviteJoinCluster();

  RegInviteJoinCluster(const RegInviteJoinCluster& from);

  inline RegInviteJoinCluster& operator=(const RegInviteJoinCluster& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RegInviteJoinCluster& default_instance();

  static const RegInviteJoinCluster* internal_default_instance();

  void Swap(RegInviteJoinCluster* other);

  // implements Message ----------------------------------------------

  inline RegInviteJoinCluster* New() const { return New(NULL); }

  RegInviteJoinCluster* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RegInviteJoinCluster& from);
  void MergeFrom(const RegInviteJoinCluster& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RegInviteJoinCluster* other);
  void UnsafeMergeFrom(const RegInviteJoinCluster& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userId = 1;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.RegInviteJoinCluster)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 userid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RegInviteJoinCluster> RegInviteJoinCluster_default_instance_;

// -------------------------------------------------------------------

class InviteJoinClusterAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.InviteJoinClusterAck) */ {
 public:
  InviteJoinClusterAck();
  virtual ~InviteJoinClusterAck();

  InviteJoinClusterAck(const InviteJoinClusterAck& from);

  inline InviteJoinClusterAck& operator=(const InviteJoinClusterAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InviteJoinClusterAck& default_instance();

  static const InviteJoinClusterAck* internal_default_instance();

  void Swap(InviteJoinClusterAck* other);

  // implements Message ----------------------------------------------

  inline InviteJoinClusterAck* New() const { return New(NULL); }

  InviteJoinClusterAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InviteJoinClusterAck& from);
  void MergeFrom(const InviteJoinClusterAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InviteJoinClusterAck* other);
  void UnsafeMergeFrom(const InviteJoinClusterAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userId = 1;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint32 error = 2;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.InviteJoinClusterAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<InviteJoinClusterAck> InviteJoinClusterAck_default_instance_;

// -------------------------------------------------------------------

class UserInviteJoinCluster : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.UserInviteJoinCluster) */ {
 public:
  UserInviteJoinCluster();
  virtual ~UserInviteJoinCluster();

  UserInviteJoinCluster(const UserInviteJoinCluster& from);

  inline UserInviteJoinCluster& operator=(const UserInviteJoinCluster& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserInviteJoinCluster& default_instance();

  static const UserInviteJoinCluster* internal_default_instance();

  void Swap(UserInviteJoinCluster* other);

  // implements Message ----------------------------------------------

  inline UserInviteJoinCluster* New() const { return New(NULL); }

  UserInviteJoinCluster* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserInviteJoinCluster& from);
  void MergeFrom(const UserInviteJoinCluster& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserInviteJoinCluster* other);
  void UnsafeMergeFrom(const UserInviteJoinCluster& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 userId = 1;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional uint64 clusterId = 2;
  void clear_clusterid();
  static const int kClusterIdFieldNumber = 2;
  ::google::protobuf::uint64 clusterid() const;
  void set_clusterid(::google::protobuf::uint64 value);

  // optional string userName = 3;
  void clear_username();
  static const int kUserNameFieldNumber = 3;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // @@protoc_insertion_point(class_scope:NetMsg.UserInviteJoinCluster)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::uint64 clusterid_;
  ::google::protobuf::uint32 userid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UserInviteJoinCluster> UserInviteJoinCluster_default_instance_;

// -------------------------------------------------------------------

class ClusterRunPathAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ClusterRunPathAck) */ {
 public:
  ClusterRunPathAck();
  virtual ~ClusterRunPathAck();

  ClusterRunPathAck(const ClusterRunPathAck& from);

  inline ClusterRunPathAck& operator=(const ClusterRunPathAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClusterRunPathAck& default_instance();

  static const ClusterRunPathAck* internal_default_instance();

  void Swap(ClusterRunPathAck* other);

  // implements Message ----------------------------------------------

  inline ClusterRunPathAck* New() const { return New(NULL); }

  ClusterRunPathAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClusterRunPathAck& from);
  void MergeFrom(const ClusterRunPathAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClusterRunPathAck* other);
  void UnsafeMergeFrom(const ClusterRunPathAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .NetMsg.RunPathAck path = 1;
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::NetMsg::RunPathAck& path() const;
  ::NetMsg::RunPathAck* mutable_path();
  ::NetMsg::RunPathAck* release_path();
  void set_allocated_path(::NetMsg::RunPathAck* path);

  // optional int32 curCity = 2;
  void clear_curcity();
  static const int kCurCityFieldNumber = 2;
  ::google::protobuf::int32 curcity() const;
  void set_curcity(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ClusterRunPathAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NetMsg::RunPathAck* path_;
  ::google::protobuf::int32 curcity_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ClusterRunPathAck> ClusterRunPathAck_default_instance_;

// -------------------------------------------------------------------

class SetClusterRunPath : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.SetClusterRunPath) */ {
 public:
  SetClusterRunPath();
  virtual ~SetClusterRunPath();

  SetClusterRunPath(const SetClusterRunPath& from);

  inline SetClusterRunPath& operator=(const SetClusterRunPath& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetClusterRunPath& default_instance();

  static const SetClusterRunPath* internal_default_instance();

  void Swap(SetClusterRunPath* other);

  // implements Message ----------------------------------------------

  inline SetClusterRunPath* New() const { return New(NULL); }

  SetClusterRunPath* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetClusterRunPath& from);
  void MergeFrom(const SetClusterRunPath& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetClusterRunPath* other);
  void UnsafeMergeFrom(const SetClusterRunPath& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .NetMsg.RunPathAck path = 1;
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::NetMsg::RunPathAck& path() const;
  ::NetMsg::RunPathAck* mutable_path();
  ::NetMsg::RunPathAck* release_path();
  void set_allocated_path(::NetMsg::RunPathAck* path);

  // @@protoc_insertion_point(class_scope:NetMsg.SetClusterRunPath)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NetMsg::RunPathAck* path_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SetClusterRunPath> SetClusterRunPath_default_instance_;

// -------------------------------------------------------------------

class ReqClusterArrivedTar : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqClusterArrivedTar) */ {
 public:
  ReqClusterArrivedTar();
  virtual ~ReqClusterArrivedTar();

  ReqClusterArrivedTar(const ReqClusterArrivedTar& from);

  inline ReqClusterArrivedTar& operator=(const ReqClusterArrivedTar& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqClusterArrivedTar& default_instance();

  static const ReqClusterArrivedTar* internal_default_instance();

  void Swap(ReqClusterArrivedTar* other);

  // implements Message ----------------------------------------------

  inline ReqClusterArrivedTar* New() const { return New(NULL); }

  ReqClusterArrivedTar* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqClusterArrivedTar& from);
  void MergeFrom(const ReqClusterArrivedTar& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqClusterArrivedTar* other);
  void UnsafeMergeFrom(const ReqClusterArrivedTar& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .NetMsg.RunPathAck path = 1;
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::NetMsg::RunPathAck& path() const;
  ::NetMsg::RunPathAck* mutable_path();
  ::NetMsg::RunPathAck* release_path();
  void set_allocated_path(::NetMsg::RunPathAck* path);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqClusterArrivedTar)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NetMsg::RunPathAck* path_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqClusterArrivedTar> ReqClusterArrivedTar_default_instance_;

// -------------------------------------------------------------------

class ClusterArrivedTarAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ClusterArrivedTarAck) */ {
 public:
  ClusterArrivedTarAck();
  virtual ~ClusterArrivedTarAck();

  ClusterArrivedTarAck(const ClusterArrivedTarAck& from);

  inline ClusterArrivedTarAck& operator=(const ClusterArrivedTarAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClusterArrivedTarAck& default_instance();

  static const ClusterArrivedTarAck* internal_default_instance();

  void Swap(ClusterArrivedTarAck* other);

  // implements Message ----------------------------------------------

  inline ClusterArrivedTarAck* New() const { return New(NULL); }

  ClusterArrivedTarAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClusterArrivedTarAck& from);
  void MergeFrom(const ClusterArrivedTarAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClusterArrivedTarAck* other);
  void UnsafeMergeFrom(const ClusterArrivedTarAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .NetMsg.RunPathAck path = 1;
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::NetMsg::RunPathAck& path() const;
  ::NetMsg::RunPathAck* mutable_path();
  ::NetMsg::RunPathAck* release_path();
  void set_allocated_path(::NetMsg::RunPathAck* path);

  // @@protoc_insertion_point(class_scope:NetMsg.ClusterArrivedTarAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::NetMsg::RunPathAck* path_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ClusterArrivedTarAck> ClusterArrivedTarAck_default_instance_;

// -------------------------------------------------------------------

class ReqEnterWorldWar : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqEnterWorldWar) */ {
 public:
  ReqEnterWorldWar();
  virtual ~ReqEnterWorldWar();

  ReqEnterWorldWar(const ReqEnterWorldWar& from);

  inline ReqEnterWorldWar& operator=(const ReqEnterWorldWar& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqEnterWorldWar& default_instance();

  static const ReqEnterWorldWar* internal_default_instance();

  void Swap(ReqEnterWorldWar* other);

  // implements Message ----------------------------------------------

  inline ReqEnterWorldWar* New() const { return New(NULL); }

  ReqEnterWorldWar* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqEnterWorldWar& from);
  void MergeFrom(const ReqEnterWorldWar& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqEnterWorldWar* other);
  void UnsafeMergeFrom(const ReqEnterWorldWar& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 worldWarId = 1;
  void clear_worldwarid();
  static const int kWorldWarIdFieldNumber = 1;
  ::google::protobuf::uint32 worldwarid() const;
  void set_worldwarid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqEnterWorldWar)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 worldwarid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqEnterWorldWar> ReqEnterWorldWar_default_instance_;

// -------------------------------------------------------------------

class EnterWorldWarAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.EnterWorldWarAck) */ {
 public:
  EnterWorldWarAck();
  virtual ~EnterWorldWarAck();

  EnterWorldWarAck(const EnterWorldWarAck& from);

  inline EnterWorldWarAck& operator=(const EnterWorldWarAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterWorldWarAck& default_instance();

  static const EnterWorldWarAck* internal_default_instance();

  void Swap(EnterWorldWarAck* other);

  // implements Message ----------------------------------------------

  inline EnterWorldWarAck* New() const { return New(NULL); }

  EnterWorldWarAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnterWorldWarAck& from);
  void MergeFrom(const EnterWorldWarAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnterWorldWarAck* other);
  void UnsafeMergeFrom(const EnterWorldWarAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 worldWarId = 1;
  void clear_worldwarid();
  static const int kWorldWarIdFieldNumber = 1;
  ::google::protobuf::uint32 worldwarid() const;
  void set_worldwarid(::google::protobuf::uint32 value);

  // optional uint32 sceneId = 2;
  void clear_sceneid();
  static const int kSceneIdFieldNumber = 2;
  ::google::protobuf::uint32 sceneid() const;
  void set_sceneid(::google::protobuf::uint32 value);

  // optional .NetMsg.WorldWarSceneForceType force = 3;
  void clear_force();
  static const int kForceFieldNumber = 3;
  ::NetMsg::WorldWarSceneForceType force() const;
  void set_force(::NetMsg::WorldWarSceneForceType value);

  // optional uint32 error = 4;
  void clear_error();
  static const int kErrorFieldNumber = 4;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.EnterWorldWarAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 worldwarid_;
  ::google::protobuf::uint32 sceneid_;
  int force_;
  ::google::protobuf::uint32 error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<EnterWorldWarAck> EnterWorldWarAck_default_instance_;

// -------------------------------------------------------------------

class ReqWorldWarStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqWorldWarStatus) */ {
 public:
  ReqWorldWarStatus();
  virtual ~ReqWorldWarStatus();

  ReqWorldWarStatus(const ReqWorldWarStatus& from);

  inline ReqWorldWarStatus& operator=(const ReqWorldWarStatus& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqWorldWarStatus& default_instance();

  static const ReqWorldWarStatus* internal_default_instance();

  void Swap(ReqWorldWarStatus* other);

  // implements Message ----------------------------------------------

  inline ReqWorldWarStatus* New() const { return New(NULL); }

  ReqWorldWarStatus* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqWorldWarStatus& from);
  void MergeFrom(const ReqWorldWarStatus& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqWorldWarStatus* other);
  void UnsafeMergeFrom(const ReqWorldWarStatus& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 worldWarId = 1;
  void clear_worldwarid();
  static const int kWorldWarIdFieldNumber = 1;
  ::google::protobuf::uint32 worldwarid() const;
  void set_worldwarid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqWorldWarStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 worldwarid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqWorldWarStatus> ReqWorldWarStatus_default_instance_;

// -------------------------------------------------------------------

class WorldWarSceneBlockState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.WorldWarSceneBlockState) */ {
 public:
  WorldWarSceneBlockState();
  virtual ~WorldWarSceneBlockState();

  WorldWarSceneBlockState(const WorldWarSceneBlockState& from);

  inline WorldWarSceneBlockState& operator=(const WorldWarSceneBlockState& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldWarSceneBlockState& default_instance();

  static const WorldWarSceneBlockState* internal_default_instance();

  void Swap(WorldWarSceneBlockState* other);

  // implements Message ----------------------------------------------

  inline WorldWarSceneBlockState* New() const { return New(NULL); }

  WorldWarSceneBlockState* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldWarSceneBlockState& from);
  void MergeFrom(const WorldWarSceneBlockState& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WorldWarSceneBlockState* other);
  void UnsafeMergeFrom(const WorldWarSceneBlockState& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 blockId = 1;
  void clear_blockid();
  static const int kBlockIdFieldNumber = 1;
  ::google::protobuf::uint32 blockid() const;
  void set_blockid(::google::protobuf::uint32 value);

  // optional .NetMsg.WorldWarSceneForceType occupied = 2;
  void clear_occupied();
  static const int kOccupiedFieldNumber = 2;
  ::NetMsg::WorldWarSceneForceType occupied() const;
  void set_occupied(::NetMsg::WorldWarSceneForceType value);

  // optional uint32 number = 3;
  void clear_number();
  static const int kNumberFieldNumber = 3;
  ::google::protobuf::uint32 number() const;
  void set_number(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.WorldWarSceneBlockState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 blockid_;
  int occupied_;
  ::google::protobuf::uint32 number_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<WorldWarSceneBlockState> WorldWarSceneBlockState_default_instance_;

// -------------------------------------------------------------------

class WorldWarSceneBuildingState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.WorldWarSceneBuildingState) */ {
 public:
  WorldWarSceneBuildingState();
  virtual ~WorldWarSceneBuildingState();

  WorldWarSceneBuildingState(const WorldWarSceneBuildingState& from);

  inline WorldWarSceneBuildingState& operator=(const WorldWarSceneBuildingState& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldWarSceneBuildingState& default_instance();

  static const WorldWarSceneBuildingState* internal_default_instance();

  void Swap(WorldWarSceneBuildingState* other);

  // implements Message ----------------------------------------------

  inline WorldWarSceneBuildingState* New() const { return New(NULL); }

  WorldWarSceneBuildingState* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldWarSceneBuildingState& from);
  void MergeFrom(const WorldWarSceneBuildingState& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WorldWarSceneBuildingState* other);
  void UnsafeMergeFrom(const WorldWarSceneBuildingState& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 blockId = 1;
  void clear_blockid();
  static const int kBlockIdFieldNumber = 1;
  ::google::protobuf::uint32 blockid() const;
  void set_blockid(::google::protobuf::uint32 value);

  // optional .NetMsg.WorldWarSceneBuildingType type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::NetMsg::WorldWarSceneBuildingType type() const;
  void set_type(::NetMsg::WorldWarSceneBuildingType value);

  // optional .NetMsg.WorldWarSceneForceType occupied = 3;
  void clear_occupied();
  static const int kOccupiedFieldNumber = 3;
  ::NetMsg::WorldWarSceneForceType occupied() const;
  void set_occupied(::NetMsg::WorldWarSceneForceType value);

  // optional uint32 currentHealth = 4;
  void clear_currenthealth();
  static const int kCurrentHealthFieldNumber = 4;
  ::google::protobuf::uint32 currenthealth() const;
  void set_currenthealth(::google::protobuf::uint32 value);

  // optional uint32 totalHealth = 5;
  void clear_totalhealth();
  static const int kTotalHealthFieldNumber = 5;
  ::google::protobuf::uint32 totalhealth() const;
  void set_totalhealth(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.WorldWarSceneBuildingState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 blockid_;
  int type_;
  int occupied_;
  ::google::protobuf::uint32 currenthealth_;
  ::google::protobuf::uint32 totalhealth_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<WorldWarSceneBuildingState> WorldWarSceneBuildingState_default_instance_;

// -------------------------------------------------------------------

class WorldWarSceneAgent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.WorldWarSceneAgent) */ {
 public:
  WorldWarSceneAgent();
  virtual ~WorldWarSceneAgent();

  WorldWarSceneAgent(const WorldWarSceneAgent& from);

  inline WorldWarSceneAgent& operator=(const WorldWarSceneAgent& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldWarSceneAgent& default_instance();

  static const WorldWarSceneAgent* internal_default_instance();

  void Swap(WorldWarSceneAgent* other);

  // implements Message ----------------------------------------------

  inline WorldWarSceneAgent* New() const { return New(NULL); }

  WorldWarSceneAgent* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldWarSceneAgent& from);
  void MergeFrom(const WorldWarSceneAgent& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WorldWarSceneAgent* other);
  void UnsafeMergeFrom(const WorldWarSceneAgent& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 agentId = 1;
  void clear_agentid();
  static const int kAgentIdFieldNumber = 1;
  ::google::protobuf::uint32 agentid() const;
  void set_agentid(::google::protobuf::uint32 value);

  // optional uint32 userId = 2;
  void clear_userid();
  static const int kUserIdFieldNumber = 2;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional bool isCluster = 3;
  void clear_iscluster();
  static const int kIsClusterFieldNumber = 3;
  bool iscluster() const;
  void set_iscluster(bool value);

  // optional uint64 clusterIdOrTeamPos = 4;
  void clear_clusteridorteampos();
  static const int kClusterIdOrTeamPosFieldNumber = 4;
  ::google::protobuf::uint64 clusteridorteampos() const;
  void set_clusteridorteampos(::google::protobuf::uint64 value);

  // optional .NetMsg.WorldWarSceneForceState state = 5;
  void clear_state();
  static const int kStateFieldNumber = 5;
  ::NetMsg::WorldWarSceneForceState state() const;
  void set_state(::NetMsg::WorldWarSceneForceState value);

  // optional uint32 currentHealth = 6;
  void clear_currenthealth();
  static const int kCurrentHealthFieldNumber = 6;
  ::google::protobuf::uint32 currenthealth() const;
  void set_currenthealth(::google::protobuf::uint32 value);

  // optional uint32 totalHealth = 7;
  void clear_totalhealth();
  static const int kTotalHealthFieldNumber = 7;
  ::google::protobuf::uint32 totalhealth() const;
  void set_totalhealth(::google::protobuf::uint32 value);

  // optional uint32 attackCD = 8;
  void clear_attackcd();
  static const int kAttackCDFieldNumber = 8;
  ::google::protobuf::uint32 attackcd() const;
  void set_attackcd(::google::protobuf::uint32 value);

  // optional uint32 moveCD = 9;
  void clear_movecd();
  static const int kMoveCDFieldNumber = 9;
  ::google::protobuf::uint32 movecd() const;
  void set_movecd(::google::protobuf::uint32 value);

  // optional uint32 currentBlockId = 10;
  void clear_currentblockid();
  static const int kCurrentBlockIdFieldNumber = 10;
  ::google::protobuf::uint32 currentblockid() const;
  void set_currentblockid(::google::protobuf::uint32 value);

  // optional uint32 DefenceTarget = 11;
  void clear_defencetarget();
  static const int kDefenceTargetFieldNumber = 11;
  ::google::protobuf::uint32 defencetarget() const;
  void set_defencetarget(::google::protobuf::uint32 value);

  // repeated uint32 path = 12;
  int path_size() const;
  void clear_path();
  static const int kPathFieldNumber = 12;
  ::google::protobuf::uint32 path(int index) const;
  void set_path(int index, ::google::protobuf::uint32 value);
  void add_path(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      path() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_path();

  // @@protoc_insertion_point(class_scope:NetMsg.WorldWarSceneAgent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > path_;
  mutable int _path_cached_byte_size_;
  ::google::protobuf::uint32 agentid_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint64 clusteridorteampos_;
  bool iscluster_;
  int state_;
  ::google::protobuf::uint32 currenthealth_;
  ::google::protobuf::uint32 totalhealth_;
  ::google::protobuf::uint32 attackcd_;
  ::google::protobuf::uint32 movecd_;
  ::google::protobuf::uint32 currentblockid_;
  ::google::protobuf::uint32 defencetarget_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<WorldWarSceneAgent> WorldWarSceneAgent_default_instance_;

// -------------------------------------------------------------------

class WorldWarStatusAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.WorldWarStatusAck) */ {
 public:
  WorldWarStatusAck();
  virtual ~WorldWarStatusAck();

  WorldWarStatusAck(const WorldWarStatusAck& from);

  inline WorldWarStatusAck& operator=(const WorldWarStatusAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldWarStatusAck& default_instance();

  static const WorldWarStatusAck* internal_default_instance();

  void Swap(WorldWarStatusAck* other);

  // implements Message ----------------------------------------------

  inline WorldWarStatusAck* New() const { return New(NULL); }

  WorldWarStatusAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldWarStatusAck& from);
  void MergeFrom(const WorldWarStatusAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WorldWarStatusAck* other);
  void UnsafeMergeFrom(const WorldWarStatusAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 worldWarId = 1;
  void clear_worldwarid();
  static const int kWorldWarIdFieldNumber = 1;
  ::google::protobuf::uint32 worldwarid() const;
  void set_worldwarid(::google::protobuf::uint32 value);

  // repeated .NetMsg.WorldWarSceneBlockState blocks = 2;
  int blocks_size() const;
  void clear_blocks();
  static const int kBlocksFieldNumber = 2;
  const ::NetMsg::WorldWarSceneBlockState& blocks(int index) const;
  ::NetMsg::WorldWarSceneBlockState* mutable_blocks(int index);
  ::NetMsg::WorldWarSceneBlockState* add_blocks();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::WorldWarSceneBlockState >*
      mutable_blocks();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::WorldWarSceneBlockState >&
      blocks() const;

  // repeated .NetMsg.WorldWarSceneBuildingState buildings = 3;
  int buildings_size() const;
  void clear_buildings();
  static const int kBuildingsFieldNumber = 3;
  const ::NetMsg::WorldWarSceneBuildingState& buildings(int index) const;
  ::NetMsg::WorldWarSceneBuildingState* mutable_buildings(int index);
  ::NetMsg::WorldWarSceneBuildingState* add_buildings();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::WorldWarSceneBuildingState >*
      mutable_buildings();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::WorldWarSceneBuildingState >&
      buildings() const;

  // repeated .NetMsg.WorldWarSceneAgent agents = 4;
  int agents_size() const;
  void clear_agents();
  static const int kAgentsFieldNumber = 4;
  const ::NetMsg::WorldWarSceneAgent& agents(int index) const;
  ::NetMsg::WorldWarSceneAgent* mutable_agents(int index);
  ::NetMsg::WorldWarSceneAgent* add_agents();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::WorldWarSceneAgent >*
      mutable_agents();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::WorldWarSceneAgent >&
      agents() const;

  // repeated .NetMsg.WorldWarSceneAgent importantAgents = 5;
  int importantagents_size() const;
  void clear_importantagents();
  static const int kImportantAgentsFieldNumber = 5;
  const ::NetMsg::WorldWarSceneAgent& importantagents(int index) const;
  ::NetMsg::WorldWarSceneAgent* mutable_importantagents(int index);
  ::NetMsg::WorldWarSceneAgent* add_importantagents();
  ::google::protobuf::RepeatedPtrField< ::NetMsg::WorldWarSceneAgent >*
      mutable_importantagents();
  const ::google::protobuf::RepeatedPtrField< ::NetMsg::WorldWarSceneAgent >&
      importantagents() const;

  // optional uint32 error = 6;
  void clear_error();
  static const int kErrorFieldNumber = 6;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.WorldWarStatusAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::WorldWarSceneBlockState > blocks_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::WorldWarSceneBuildingState > buildings_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::WorldWarSceneAgent > agents_;
  ::google::protobuf::RepeatedPtrField< ::NetMsg::WorldWarSceneAgent > importantagents_;
  ::google::protobuf::uint32 worldwarid_;
  ::google::protobuf::uint32 error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<WorldWarStatusAck> WorldWarStatusAck_default_instance_;

// -------------------------------------------------------------------

class ReqWorldWarMove : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqWorldWarMove) */ {
 public:
  ReqWorldWarMove();
  virtual ~ReqWorldWarMove();

  ReqWorldWarMove(const ReqWorldWarMove& from);

  inline ReqWorldWarMove& operator=(const ReqWorldWarMove& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqWorldWarMove& default_instance();

  static const ReqWorldWarMove* internal_default_instance();

  void Swap(ReqWorldWarMove* other);

  // implements Message ----------------------------------------------

  inline ReqWorldWarMove* New() const { return New(NULL); }

  ReqWorldWarMove* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqWorldWarMove& from);
  void MergeFrom(const ReqWorldWarMove& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqWorldWarMove* other);
  void UnsafeMergeFrom(const ReqWorldWarMove& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 worldWarId = 1;
  void clear_worldwarid();
  static const int kWorldWarIdFieldNumber = 1;
  ::google::protobuf::uint32 worldwarid() const;
  void set_worldwarid(::google::protobuf::uint32 value);

  // optional uint32 agentId = 2;
  void clear_agentid();
  static const int kAgentIdFieldNumber = 2;
  ::google::protobuf::uint32 agentid() const;
  void set_agentid(::google::protobuf::uint32 value);

  // repeated uint32 path = 3;
  int path_size() const;
  void clear_path();
  static const int kPathFieldNumber = 3;
  ::google::protobuf::uint32 path(int index) const;
  void set_path(int index, ::google::protobuf::uint32 value);
  void add_path(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      path() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_path();

  // @@protoc_insertion_point(class_scope:NetMsg.ReqWorldWarMove)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > path_;
  mutable int _path_cached_byte_size_;
  ::google::protobuf::uint32 worldwarid_;
  ::google::protobuf::uint32 agentid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqWorldWarMove> ReqWorldWarMove_default_instance_;

// -------------------------------------------------------------------

class WorldWarMoveAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.WorldWarMoveAck) */ {
 public:
  WorldWarMoveAck();
  virtual ~WorldWarMoveAck();

  WorldWarMoveAck(const WorldWarMoveAck& from);

  inline WorldWarMoveAck& operator=(const WorldWarMoveAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldWarMoveAck& default_instance();

  static const WorldWarMoveAck* internal_default_instance();

  void Swap(WorldWarMoveAck* other);

  // implements Message ----------------------------------------------

  inline WorldWarMoveAck* New() const { return New(NULL); }

  WorldWarMoveAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldWarMoveAck& from);
  void MergeFrom(const WorldWarMoveAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WorldWarMoveAck* other);
  void UnsafeMergeFrom(const WorldWarMoveAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 worldWarId = 1;
  void clear_worldwarid();
  static const int kWorldWarIdFieldNumber = 1;
  ::google::protobuf::uint32 worldwarid() const;
  void set_worldwarid(::google::protobuf::uint32 value);

  // optional uint32 agentId = 2;
  void clear_agentid();
  static const int kAgentIdFieldNumber = 2;
  ::google::protobuf::uint32 agentid() const;
  void set_agentid(::google::protobuf::uint32 value);

  // optional uint32 error = 3;
  void clear_error();
  static const int kErrorFieldNumber = 3;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.WorldWarMoveAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 worldwarid_;
  ::google::protobuf::uint32 agentid_;
  ::google::protobuf::uint32 error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<WorldWarMoveAck> WorldWarMoveAck_default_instance_;

// -------------------------------------------------------------------

class ReqWorldWarDefence : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqWorldWarDefence) */ {
 public:
  ReqWorldWarDefence();
  virtual ~ReqWorldWarDefence();

  ReqWorldWarDefence(const ReqWorldWarDefence& from);

  inline ReqWorldWarDefence& operator=(const ReqWorldWarDefence& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqWorldWarDefence& default_instance();

  static const ReqWorldWarDefence* internal_default_instance();

  void Swap(ReqWorldWarDefence* other);

  // implements Message ----------------------------------------------

  inline ReqWorldWarDefence* New() const { return New(NULL); }

  ReqWorldWarDefence* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqWorldWarDefence& from);
  void MergeFrom(const ReqWorldWarDefence& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqWorldWarDefence* other);
  void UnsafeMergeFrom(const ReqWorldWarDefence& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 worldWarId = 1;
  void clear_worldwarid();
  static const int kWorldWarIdFieldNumber = 1;
  ::google::protobuf::uint32 worldwarid() const;
  void set_worldwarid(::google::protobuf::uint32 value);

  // optional uint32 agentId = 2;
  void clear_agentid();
  static const int kAgentIdFieldNumber = 2;
  ::google::protobuf::uint32 agentid() const;
  void set_agentid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqWorldWarDefence)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 worldwarid_;
  ::google::protobuf::uint32 agentid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqWorldWarDefence> ReqWorldWarDefence_default_instance_;

// -------------------------------------------------------------------

class WorldWarDefenceAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.WorldWarDefenceAck) */ {
 public:
  WorldWarDefenceAck();
  virtual ~WorldWarDefenceAck();

  WorldWarDefenceAck(const WorldWarDefenceAck& from);

  inline WorldWarDefenceAck& operator=(const WorldWarDefenceAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldWarDefenceAck& default_instance();

  static const WorldWarDefenceAck* internal_default_instance();

  void Swap(WorldWarDefenceAck* other);

  // implements Message ----------------------------------------------

  inline WorldWarDefenceAck* New() const { return New(NULL); }

  WorldWarDefenceAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldWarDefenceAck& from);
  void MergeFrom(const WorldWarDefenceAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WorldWarDefenceAck* other);
  void UnsafeMergeFrom(const WorldWarDefenceAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 worldWarId = 1;
  void clear_worldwarid();
  static const int kWorldWarIdFieldNumber = 1;
  ::google::protobuf::uint32 worldwarid() const;
  void set_worldwarid(::google::protobuf::uint32 value);

  // optional uint32 agentId = 2;
  void clear_agentid();
  static const int kAgentIdFieldNumber = 2;
  ::google::protobuf::uint32 agentid() const;
  void set_agentid(::google::protobuf::uint32 value);

  // optional uint32 error = 3;
  void clear_error();
  static const int kErrorFieldNumber = 3;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.WorldWarDefenceAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 worldwarid_;
  ::google::protobuf::uint32 agentid_;
  ::google::protobuf::uint32 error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<WorldWarDefenceAck> WorldWarDefenceAck_default_instance_;

// -------------------------------------------------------------------

class ReqWorldWarDefenceTarget : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqWorldWarDefenceTarget) */ {
 public:
  ReqWorldWarDefenceTarget();
  virtual ~ReqWorldWarDefenceTarget();

  ReqWorldWarDefenceTarget(const ReqWorldWarDefenceTarget& from);

  inline ReqWorldWarDefenceTarget& operator=(const ReqWorldWarDefenceTarget& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqWorldWarDefenceTarget& default_instance();

  static const ReqWorldWarDefenceTarget* internal_default_instance();

  void Swap(ReqWorldWarDefenceTarget* other);

  // implements Message ----------------------------------------------

  inline ReqWorldWarDefenceTarget* New() const { return New(NULL); }

  ReqWorldWarDefenceTarget* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqWorldWarDefenceTarget& from);
  void MergeFrom(const ReqWorldWarDefenceTarget& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqWorldWarDefenceTarget* other);
  void UnsafeMergeFrom(const ReqWorldWarDefenceTarget& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 worldWarId = 1;
  void clear_worldwarid();
  static const int kWorldWarIdFieldNumber = 1;
  ::google::protobuf::uint32 worldwarid() const;
  void set_worldwarid(::google::protobuf::uint32 value);

  // optional uint32 agentId = 2;
  void clear_agentid();
  static const int kAgentIdFieldNumber = 2;
  ::google::protobuf::uint32 agentid() const;
  void set_agentid(::google::protobuf::uint32 value);

  // optional uint32 blockId = 3;
  void clear_blockid();
  static const int kBlockIdFieldNumber = 3;
  ::google::protobuf::uint32 blockid() const;
  void set_blockid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqWorldWarDefenceTarget)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 worldwarid_;
  ::google::protobuf::uint32 agentid_;
  ::google::protobuf::uint32 blockid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqWorldWarDefenceTarget> ReqWorldWarDefenceTarget_default_instance_;

// -------------------------------------------------------------------

class WorldWarDefenceTargetAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.WorldWarDefenceTargetAck) */ {
 public:
  WorldWarDefenceTargetAck();
  virtual ~WorldWarDefenceTargetAck();

  WorldWarDefenceTargetAck(const WorldWarDefenceTargetAck& from);

  inline WorldWarDefenceTargetAck& operator=(const WorldWarDefenceTargetAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldWarDefenceTargetAck& default_instance();

  static const WorldWarDefenceTargetAck* internal_default_instance();

  void Swap(WorldWarDefenceTargetAck* other);

  // implements Message ----------------------------------------------

  inline WorldWarDefenceTargetAck* New() const { return New(NULL); }

  WorldWarDefenceTargetAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldWarDefenceTargetAck& from);
  void MergeFrom(const WorldWarDefenceTargetAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WorldWarDefenceTargetAck* other);
  void UnsafeMergeFrom(const WorldWarDefenceTargetAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 worldWarId = 1;
  void clear_worldwarid();
  static const int kWorldWarIdFieldNumber = 1;
  ::google::protobuf::uint32 worldwarid() const;
  void set_worldwarid(::google::protobuf::uint32 value);

  // optional uint32 agentId = 2;
  void clear_agentid();
  static const int kAgentIdFieldNumber = 2;
  ::google::protobuf::uint32 agentid() const;
  void set_agentid(::google::protobuf::uint32 value);

  // optional uint32 error = 3;
  void clear_error();
  static const int kErrorFieldNumber = 3;
  ::google::protobuf::uint32 error() const;
  void set_error(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.WorldWarDefenceTargetAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 worldwarid_;
  ::google::protobuf::uint32 agentid_;
  ::google::protobuf::uint32 error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<WorldWarDefenceTargetAck> WorldWarDefenceTargetAck_default_instance_;

// -------------------------------------------------------------------

class ReqLeaveWorldWar : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqLeaveWorldWar) */ {
 public:
  ReqLeaveWorldWar();
  virtual ~ReqLeaveWorldWar();

  ReqLeaveWorldWar(const ReqLeaveWorldWar& from);

  inline ReqLeaveWorldWar& operator=(const ReqLeaveWorldWar& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqLeaveWorldWar& default_instance();

  static const ReqLeaveWorldWar* internal_default_instance();

  void Swap(ReqLeaveWorldWar* other);

  // implements Message ----------------------------------------------

  inline ReqLeaveWorldWar* New() const { return New(NULL); }

  ReqLeaveWorldWar* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqLeaveWorldWar& from);
  void MergeFrom(const ReqLeaveWorldWar& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqLeaveWorldWar* other);
  void UnsafeMergeFrom(const ReqLeaveWorldWar& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 worldWarId = 1;
  void clear_worldwarid();
  static const int kWorldWarIdFieldNumber = 1;
  ::google::protobuf::uint32 worldwarid() const;
  void set_worldwarid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqLeaveWorldWar)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 worldwarid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqLeaveWorldWar> ReqLeaveWorldWar_default_instance_;

// -------------------------------------------------------------------

class LeaveWorldWarAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.LeaveWorldWarAck) */ {
 public:
  LeaveWorldWarAck();
  virtual ~LeaveWorldWarAck();

  LeaveWorldWarAck(const LeaveWorldWarAck& from);

  inline LeaveWorldWarAck& operator=(const LeaveWorldWarAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LeaveWorldWarAck& default_instance();

  static const LeaveWorldWarAck* internal_default_instance();

  void Swap(LeaveWorldWarAck* other);

  // implements Message ----------------------------------------------

  inline LeaveWorldWarAck* New() const { return New(NULL); }

  LeaveWorldWarAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LeaveWorldWarAck& from);
  void MergeFrom(const LeaveWorldWarAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LeaveWorldWarAck* other);
  void UnsafeMergeFrom(const LeaveWorldWarAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 worldWarId = 1;
  void clear_worldwarid();
  static const int kWorldWarIdFieldNumber = 1;
  ::google::protobuf::uint32 worldwarid() const;
  void set_worldwarid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NetMsg.LeaveWorldWarAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 worldwarid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<LeaveWorldWarAck> LeaveWorldWarAck_default_instance_;

// -------------------------------------------------------------------

class ReqTest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.ReqTest) */ {
 public:
  ReqTest();
  virtual ~ReqTest();

  ReqTest(const ReqTest& from);

  inline ReqTest& operator=(const ReqTest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqTest& default_instance();

  static const ReqTest* internal_default_instance();

  void Swap(ReqTest* other);

  // implements Message ----------------------------------------------

  inline ReqTest* New() const { return New(NULL); }

  ReqTest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqTest& from);
  void MergeFrom(const ReqTest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqTest* other);
  void UnsafeMergeFrom(const ReqTest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string a = 1;
  void clear_a();
  static const int kAFieldNumber = 1;
  const ::std::string& a() const;
  void set_a(const ::std::string& value);
  void set_a(const char* value);
  void set_a(const char* value, size_t size);
  ::std::string* mutable_a();
  ::std::string* release_a();
  void set_allocated_a(::std::string* a);

  // optional float b = 2;
  void clear_b();
  static const int kBFieldNumber = 2;
  float b() const;
  void set_b(float value);

  // optional int32 c = 3;
  void clear_c();
  static const int kCFieldNumber = 3;
  ::google::protobuf::int32 c() const;
  void set_c(::google::protobuf::int32 value);

  // optional uint32 d = 4;
  void clear_d();
  static const int kDFieldNumber = 4;
  ::google::protobuf::uint32 d() const;
  void set_d(::google::protobuf::uint32 value);

  // optional bool e = 5;
  void clear_e();
  static const int kEFieldNumber = 5;
  bool e() const;
  void set_e(bool value);

  // repeated string f = 6;
  int f_size() const;
  void clear_f();
  static const int kFFieldNumber = 6;
  const ::std::string& f(int index) const;
  ::std::string* mutable_f(int index);
  void set_f(int index, const ::std::string& value);
  void set_f(int index, const char* value);
  void set_f(int index, const char* value, size_t size);
  ::std::string* add_f();
  void add_f(const ::std::string& value);
  void add_f(const char* value);
  void add_f(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& f() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_f();

  // optional .NetMsg.PlayerData g = 7;
  bool has_g() const;
  void clear_g();
  static const int kGFieldNumber = 7;
  const ::NetMsg::PlayerData& g() const;
  ::NetMsg::PlayerData* mutable_g();
  ::NetMsg::PlayerData* release_g();
  void set_allocated_g(::NetMsg::PlayerData* g);

  // @@protoc_insertion_point(class_scope:NetMsg.ReqTest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> f_;
  ::google::protobuf::internal::ArenaStringPtr a_;
  ::NetMsg::PlayerData* g_;
  float b_;
  ::google::protobuf::int32 c_;
  ::google::protobuf::uint32 d_;
  bool e_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReqTest> ReqTest_default_instance_;

// -------------------------------------------------------------------

class TestAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetMsg.TestAck) */ {
 public:
  TestAck();
  virtual ~TestAck();

  TestAck(const TestAck& from);

  inline TestAck& operator=(const TestAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TestAck& default_instance();

  static const TestAck* internal_default_instance();

  void Swap(TestAck* other);

  // implements Message ----------------------------------------------

  inline TestAck* New() const { return New(NULL); }

  TestAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TestAck& from);
  void MergeFrom(const TestAck& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TestAck* other);
  void UnsafeMergeFrom(const TestAck& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string a = 1;
  void clear_a();
  static const int kAFieldNumber = 1;
  const ::std::string& a() const;
  void set_a(const ::std::string& value);
  void set_a(const char* value);
  void set_a(const char* value, size_t size);
  ::std::string* mutable_a();
  ::std::string* release_a();
  void set_allocated_a(::std::string* a);

  // optional float b = 2;
  void clear_b();
  static const int kBFieldNumber = 2;
  float b() const;
  void set_b(float value);

  // optional int32 c = 3;
  void clear_c();
  static const int kCFieldNumber = 3;
  ::google::protobuf::int32 c() const;
  void set_c(::google::protobuf::int32 value);

  // optional uint32 d = 4;
  void clear_d();
  static const int kDFieldNumber = 4;
  ::google::protobuf::uint32 d() const;
  void set_d(::google::protobuf::uint32 value);

  // optional bool e = 5;
  void clear_e();
  static const int kEFieldNumber = 5;
  bool e() const;
  void set_e(bool value);

  // repeated string f = 6;
  int f_size() const;
  void clear_f();
  static const int kFFieldNumber = 6;
  const ::std::string& f(int index) const;
  ::std::string* mutable_f(int index);
  void set_f(int index, const ::std::string& value);
  void set_f(int index, const char* value);
  void set_f(int index, const char* value, size_t size);
  ::std::string* add_f();
  void add_f(const ::std::string& value);
  void add_f(const char* value);
  void add_f(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& f() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_f();

  // optional .NetMsg.PlayerData g = 7;
  bool has_g() const;
  void clear_g();
  static const int kGFieldNumber = 7;
  const ::NetMsg::PlayerData& g() const;
  ::NetMsg::PlayerData* mutable_g();
  ::NetMsg::PlayerData* release_g();
  void set_allocated_g(::NetMsg::PlayerData* g);

  // @@protoc_insertion_point(class_scope:NetMsg.TestAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> f_;
  ::google::protobuf::internal::ArenaStringPtr a_;
  ::NetMsg::PlayerData* g_;
  float b_;
  ::google::protobuf::int32 c_;
  ::google::protobuf::uint32 d_;
  bool e_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_NetMsg_2eproto_impl();
  friend void  protobuf_AddDesc_NetMsg_2eproto_impl();
  friend void protobuf_AssignDesc_NetMsg_2eproto();
  friend void protobuf_ShutdownFile_NetMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TestAck> TestAck_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageType

inline const MessageType* MessageType::internal_default_instance() {
  return &MessageType_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqLogin

// optional string name = 1;
inline void ReqLogin::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqLogin::name() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqLogin.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqLogin::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetMsg.ReqLogin.name)
}
inline void ReqLogin::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetMsg.ReqLogin.name)
}
inline void ReqLogin::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetMsg.ReqLogin.name)
}
inline ::std::string* ReqLogin::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:NetMsg.ReqLogin.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqLogin::release_name() {
  // @@protoc_insertion_point(field_release:NetMsg.ReqLogin.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqLogin::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:NetMsg.ReqLogin.name)
}

// optional string password = 2;
inline void ReqLogin::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqLogin::password() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqLogin.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqLogin::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetMsg.ReqLogin.password)
}
inline void ReqLogin::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetMsg.ReqLogin.password)
}
inline void ReqLogin::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetMsg.ReqLogin.password)
}
inline ::std::string* ReqLogin::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:NetMsg.ReqLogin.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqLogin::release_password() {
  // @@protoc_insertion_point(field_release:NetMsg.ReqLogin.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqLogin::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:NetMsg.ReqLogin.password)
}

inline const ReqLogin* ReqLogin::internal_default_instance() {
  return &ReqLogin_default_instance_.get();
}
// -------------------------------------------------------------------

// PlayerData

// optional string firstName = 1;
inline void PlayerData::clear_firstname() {
  firstname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerData::firstname() const {
  // @@protoc_insertion_point(field_get:NetMsg.PlayerData.firstName)
  return firstname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerData::set_firstname(const ::std::string& value) {
  
  firstname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetMsg.PlayerData.firstName)
}
inline void PlayerData::set_firstname(const char* value) {
  
  firstname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetMsg.PlayerData.firstName)
}
inline void PlayerData::set_firstname(const char* value, size_t size) {
  
  firstname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetMsg.PlayerData.firstName)
}
inline ::std::string* PlayerData::mutable_firstname() {
  
  // @@protoc_insertion_point(field_mutable:NetMsg.PlayerData.firstName)
  return firstname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerData::release_firstname() {
  // @@protoc_insertion_point(field_release:NetMsg.PlayerData.firstName)
  
  return firstname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerData::set_allocated_firstname(::std::string* firstname) {
  if (firstname != NULL) {
    
  } else {
    
  }
  firstname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), firstname);
  // @@protoc_insertion_point(field_set_allocated:NetMsg.PlayerData.firstName)
}

// optional string lastName = 2;
inline void PlayerData::clear_lastname() {
  lastname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerData::lastname() const {
  // @@protoc_insertion_point(field_get:NetMsg.PlayerData.lastName)
  return lastname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerData::set_lastname(const ::std::string& value) {
  
  lastname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetMsg.PlayerData.lastName)
}
inline void PlayerData::set_lastname(const char* value) {
  
  lastname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetMsg.PlayerData.lastName)
}
inline void PlayerData::set_lastname(const char* value, size_t size) {
  
  lastname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetMsg.PlayerData.lastName)
}
inline ::std::string* PlayerData::mutable_lastname() {
  
  // @@protoc_insertion_point(field_mutable:NetMsg.PlayerData.lastName)
  return lastname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerData::release_lastname() {
  // @@protoc_insertion_point(field_release:NetMsg.PlayerData.lastName)
  
  return lastname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerData::set_allocated_lastname(::std::string* lastname) {
  if (lastname != NULL) {
    
  } else {
    
  }
  lastname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lastname);
  // @@protoc_insertion_point(field_set_allocated:NetMsg.PlayerData.lastName)
}

// optional string secondName = 3;
inline void PlayerData::clear_secondname() {
  secondname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerData::secondname() const {
  // @@protoc_insertion_point(field_get:NetMsg.PlayerData.secondName)
  return secondname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerData::set_secondname(const ::std::string& value) {
  
  secondname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetMsg.PlayerData.secondName)
}
inline void PlayerData::set_secondname(const char* value) {
  
  secondname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetMsg.PlayerData.secondName)
}
inline void PlayerData::set_secondname(const char* value, size_t size) {
  
  secondname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetMsg.PlayerData.secondName)
}
inline ::std::string* PlayerData::mutable_secondname() {
  
  // @@protoc_insertion_point(field_mutable:NetMsg.PlayerData.secondName)
  return secondname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerData::release_secondname() {
  // @@protoc_insertion_point(field_release:NetMsg.PlayerData.secondName)
  
  return secondname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerData::set_allocated_secondname(::std::string* secondname) {
  if (secondname != NULL) {
    
  } else {
    
  }
  secondname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secondname);
  // @@protoc_insertion_point(field_set_allocated:NetMsg.PlayerData.secondName)
}

// optional uint32 id = 4;
inline void PlayerData::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerData::id() const {
  // @@protoc_insertion_point(field_get:NetMsg.PlayerData.id)
  return id_;
}
inline void PlayerData::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.PlayerData.id)
}

// optional uint32 level = 5;
inline void PlayerData::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 PlayerData::level() const {
  // @@protoc_insertion_point(field_get:NetMsg.PlayerData.level)
  return level_;
}
inline void PlayerData::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.PlayerData.level)
}

// optional uint32 exp = 6;
inline void PlayerData::clear_exp() {
  exp_ = 0u;
}
inline ::google::protobuf::uint32 PlayerData::exp() const {
  // @@protoc_insertion_point(field_get:NetMsg.PlayerData.exp)
  return exp_;
}
inline void PlayerData::set_exp(::google::protobuf::uint32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.PlayerData.exp)
}

// optional uint32 stamina = 7;
inline void PlayerData::clear_stamina() {
  stamina_ = 0u;
}
inline ::google::protobuf::uint32 PlayerData::stamina() const {
  // @@protoc_insertion_point(field_get:NetMsg.PlayerData.stamina)
  return stamina_;
}
inline void PlayerData::set_stamina(::google::protobuf::uint32 value) {
  
  stamina_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.PlayerData.stamina)
}

// optional uint32 coin = 8;
inline void PlayerData::clear_coin() {
  coin_ = 0u;
}
inline ::google::protobuf::uint32 PlayerData::coin() const {
  // @@protoc_insertion_point(field_get:NetMsg.PlayerData.coin)
  return coin_;
}
inline void PlayerData::set_coin(::google::protobuf::uint32 value) {
  
  coin_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.PlayerData.coin)
}

// optional uint32 gold = 9;
inline void PlayerData::clear_gold() {
  gold_ = 0u;
}
inline ::google::protobuf::uint32 PlayerData::gold() const {
  // @@protoc_insertion_point(field_get:NetMsg.PlayerData.gold)
  return gold_;
}
inline void PlayerData::set_gold(::google::protobuf::uint32 value) {
  
  gold_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.PlayerData.gold)
}

// optional uint32 vipLevel = 10;
inline void PlayerData::clear_viplevel() {
  viplevel_ = 0u;
}
inline ::google::protobuf::uint32 PlayerData::viplevel() const {
  // @@protoc_insertion_point(field_get:NetMsg.PlayerData.vipLevel)
  return viplevel_;
}
inline void PlayerData::set_viplevel(::google::protobuf::uint32 value) {
  
  viplevel_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.PlayerData.vipLevel)
}

// optional int32 cityId = 11;
inline void PlayerData::clear_cityid() {
  cityid_ = 0;
}
inline ::google::protobuf::int32 PlayerData::cityid() const {
  // @@protoc_insertion_point(field_get:NetMsg.PlayerData.cityId)
  return cityid_;
}
inline void PlayerData::set_cityid(::google::protobuf::int32 value) {
  
  cityid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.PlayerData.cityId)
}

// optional uint32 campCityId = 12;
inline void PlayerData::clear_campcityid() {
  campcityid_ = 0u;
}
inline ::google::protobuf::uint32 PlayerData::campcityid() const {
  // @@protoc_insertion_point(field_get:NetMsg.PlayerData.campCityId)
  return campcityid_;
}
inline void PlayerData::set_campcityid(::google::protobuf::uint32 value) {
  
  campcityid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.PlayerData.campCityId)
}

// optional uint32 force = 13;
inline void PlayerData::clear_force() {
  force_ = 0u;
}
inline ::google::protobuf::uint32 PlayerData::force() const {
  // @@protoc_insertion_point(field_get:NetMsg.PlayerData.force)
  return force_;
}
inline void PlayerData::set_force(::google::protobuf::uint32 value) {
  
  force_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.PlayerData.force)
}

// optional uint32 newGuide = 14;
inline void PlayerData::clear_newguide() {
  newguide_ = 0u;
}
inline ::google::protobuf::uint32 PlayerData::newguide() const {
  // @@protoc_insertion_point(field_get:NetMsg.PlayerData.newGuide)
  return newguide_;
}
inline void PlayerData::set_newguide(::google::protobuf::uint32 value) {
  
  newguide_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.PlayerData.newGuide)
}

// optional uint32 title = 15;
inline void PlayerData::clear_title() {
  title_ = 0u;
}
inline ::google::protobuf::uint32 PlayerData::title() const {
  // @@protoc_insertion_point(field_get:NetMsg.PlayerData.title)
  return title_;
}
inline void PlayerData::set_title(::google::protobuf::uint32 value) {
  
  title_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.PlayerData.title)
}

// optional uint32 contribution = 16;
inline void PlayerData::clear_contribution() {
  contribution_ = 0u;
}
inline ::google::protobuf::uint32 PlayerData::contribution() const {
  // @@protoc_insertion_point(field_get:NetMsg.PlayerData.contribution)
  return contribution_;
}
inline void PlayerData::set_contribution(::google::protobuf::uint32 value) {
  
  contribution_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.PlayerData.contribution)
}

// optional uint32 reputation = 17;
inline void PlayerData::clear_reputation() {
  reputation_ = 0u;
}
inline ::google::protobuf::uint32 PlayerData::reputation() const {
  // @@protoc_insertion_point(field_get:NetMsg.PlayerData.reputation)
  return reputation_;
}
inline void PlayerData::set_reputation(::google::protobuf::uint32 value) {
  
  reputation_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.PlayerData.reputation)
}

// optional uint64 battleId = 18;
inline void PlayerData::clear_battleid() {
  battleid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PlayerData::battleid() const {
  // @@protoc_insertion_point(field_get:NetMsg.PlayerData.battleId)
  return battleid_;
}
inline void PlayerData::set_battleid(::google::protobuf::uint64 value) {
  
  battleid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.PlayerData.battleId)
}

// optional uint32 rank = 19;
inline void PlayerData::clear_rank() {
  rank_ = 0u;
}
inline ::google::protobuf::uint32 PlayerData::rank() const {
  // @@protoc_insertion_point(field_get:NetMsg.PlayerData.rank)
  return rank_;
}
inline void PlayerData::set_rank(::google::protobuf::uint32 value) {
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.PlayerData.rank)
}

// optional uint32 sex = 20;
inline void PlayerData::clear_sex() {
  sex_ = 0u;
}
inline ::google::protobuf::uint32 PlayerData::sex() const {
  // @@protoc_insertion_point(field_get:NetMsg.PlayerData.sex)
  return sex_;
}
inline void PlayerData::set_sex(::google::protobuf::uint32 value) {
  
  sex_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.PlayerData.sex)
}

// optional uint32 icon = 21;
inline void PlayerData::clear_icon() {
  icon_ = 0u;
}
inline ::google::protobuf::uint32 PlayerData::icon() const {
  // @@protoc_insertion_point(field_get:NetMsg.PlayerData.icon)
  return icon_;
}
inline void PlayerData::set_icon(::google::protobuf::uint32 value) {
  
  icon_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.PlayerData.icon)
}

// optional uint32 selectHero = 22;
inline void PlayerData::clear_selecthero() {
  selecthero_ = 0u;
}
inline ::google::protobuf::uint32 PlayerData::selecthero() const {
  // @@protoc_insertion_point(field_get:NetMsg.PlayerData.selectHero)
  return selecthero_;
}
inline void PlayerData::set_selecthero(::google::protobuf::uint32 value) {
  
  selecthero_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.PlayerData.selectHero)
}

// optional uint32 exploit = 23;
inline void PlayerData::clear_exploit() {
  exploit_ = 0u;
}
inline ::google::protobuf::uint32 PlayerData::exploit() const {
  // @@protoc_insertion_point(field_get:NetMsg.PlayerData.exploit)
  return exploit_;
}
inline void PlayerData::set_exploit(::google::protobuf::uint32 value) {
  
  exploit_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.PlayerData.exploit)
}

// optional uint32 wood = 24;
inline void PlayerData::clear_wood() {
  wood_ = 0u;
}
inline ::google::protobuf::uint32 PlayerData::wood() const {
  // @@protoc_insertion_point(field_get:NetMsg.PlayerData.wood)
  return wood_;
}
inline void PlayerData::set_wood(::google::protobuf::uint32 value) {
  
  wood_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.PlayerData.wood)
}

// optional uint32 stone = 25;
inline void PlayerData::clear_stone() {
  stone_ = 0u;
}
inline ::google::protobuf::uint32 PlayerData::stone() const {
  // @@protoc_insertion_point(field_get:NetMsg.PlayerData.stone)
  return stone_;
}
inline void PlayerData::set_stone(::google::protobuf::uint32 value) {
  
  stone_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.PlayerData.stone)
}

// optional uint32 iron = 26;
inline void PlayerData::clear_iron() {
  iron_ = 0u;
}
inline ::google::protobuf::uint32 PlayerData::iron() const {
  // @@protoc_insertion_point(field_get:NetMsg.PlayerData.iron)
  return iron_;
}
inline void PlayerData::set_iron(::google::protobuf::uint32 value) {
  
  iron_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.PlayerData.iron)
}

inline const PlayerData* PlayerData::internal_default_instance() {
  return &PlayerData_default_instance_.get();
}
// -------------------------------------------------------------------

// LoginAck

// optional uint32 error = 1;
inline void LoginAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 LoginAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.LoginAck.error)
  return error_;
}
inline void LoginAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.LoginAck.error)
}

// optional string session = 2;
inline void LoginAck::clear_session() {
  session_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginAck::session() const {
  // @@protoc_insertion_point(field_get:NetMsg.LoginAck.session)
  return session_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginAck::set_session(const ::std::string& value) {
  
  session_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetMsg.LoginAck.session)
}
inline void LoginAck::set_session(const char* value) {
  
  session_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetMsg.LoginAck.session)
}
inline void LoginAck::set_session(const char* value, size_t size) {
  
  session_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetMsg.LoginAck.session)
}
inline ::std::string* LoginAck::mutable_session() {
  
  // @@protoc_insertion_point(field_mutable:NetMsg.LoginAck.session)
  return session_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginAck::release_session() {
  // @@protoc_insertion_point(field_release:NetMsg.LoginAck.session)
  
  return session_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginAck::set_allocated_session(::std::string* session) {
  if (session != NULL) {
    
  } else {
    
  }
  session_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), session);
  // @@protoc_insertion_point(field_set_allocated:NetMsg.LoginAck.session)
}

inline const LoginAck* LoginAck::internal_default_instance() {
  return &LoginAck_default_instance_.get();
}
// -------------------------------------------------------------------

// VersionInfoAck

// optional int32 clientVersion = 1;
inline void VersionInfoAck::clear_clientversion() {
  clientversion_ = 0;
}
inline ::google::protobuf::int32 VersionInfoAck::clientversion() const {
  // @@protoc_insertion_point(field_get:NetMsg.VersionInfoAck.clientVersion)
  return clientversion_;
}
inline void VersionInfoAck::set_clientversion(::google::protobuf::int32 value) {
  
  clientversion_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.VersionInfoAck.clientVersion)
}

inline const VersionInfoAck* VersionInfoAck::internal_default_instance() {
  return &VersionInfoAck_default_instance_.get();
}
// -------------------------------------------------------------------

// UserNamePassAck

// optional string name = 1;
inline void UserNamePassAck::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserNamePassAck::name() const {
  // @@protoc_insertion_point(field_get:NetMsg.UserNamePassAck.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserNamePassAck::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetMsg.UserNamePassAck.name)
}
inline void UserNamePassAck::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetMsg.UserNamePassAck.name)
}
inline void UserNamePassAck::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetMsg.UserNamePassAck.name)
}
inline ::std::string* UserNamePassAck::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:NetMsg.UserNamePassAck.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserNamePassAck::release_name() {
  // @@protoc_insertion_point(field_release:NetMsg.UserNamePassAck.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserNamePassAck::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:NetMsg.UserNamePassAck.name)
}

// optional string password = 2;
inline void UserNamePassAck::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserNamePassAck::password() const {
  // @@protoc_insertion_point(field_get:NetMsg.UserNamePassAck.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserNamePassAck::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetMsg.UserNamePassAck.password)
}
inline void UserNamePassAck::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetMsg.UserNamePassAck.password)
}
inline void UserNamePassAck::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetMsg.UserNamePassAck.password)
}
inline ::std::string* UserNamePassAck::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:NetMsg.UserNamePassAck.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserNamePassAck::release_password() {
  // @@protoc_insertion_point(field_release:NetMsg.UserNamePassAck.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserNamePassAck::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:NetMsg.UserNamePassAck.password)
}

inline const UserNamePassAck* UserNamePassAck::internal_default_instance() {
  return &UserNamePassAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqRegister

// optional string name = 1;
inline void ReqRegister::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqRegister::name() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqRegister.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqRegister::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetMsg.ReqRegister.name)
}
inline void ReqRegister::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetMsg.ReqRegister.name)
}
inline void ReqRegister::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetMsg.ReqRegister.name)
}
inline ::std::string* ReqRegister::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:NetMsg.ReqRegister.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqRegister::release_name() {
  // @@protoc_insertion_point(field_release:NetMsg.ReqRegister.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqRegister::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:NetMsg.ReqRegister.name)
}

// optional string password = 2;
inline void ReqRegister::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqRegister::password() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqRegister.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqRegister::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetMsg.ReqRegister.password)
}
inline void ReqRegister::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetMsg.ReqRegister.password)
}
inline void ReqRegister::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetMsg.ReqRegister.password)
}
inline ::std::string* ReqRegister::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:NetMsg.ReqRegister.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqRegister::release_password() {
  // @@protoc_insertion_point(field_release:NetMsg.ReqRegister.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqRegister::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:NetMsg.ReqRegister.password)
}

inline const ReqRegister* ReqRegister::internal_default_instance() {
  return &ReqRegister_default_instance_.get();
}
// -------------------------------------------------------------------

// RegisterAck

// optional int32 error = 1;
inline void RegisterAck::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 RegisterAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.RegisterAck.error)
  return error_;
}
inline void RegisterAck::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.RegisterAck.error)
}

inline const RegisterAck* RegisterAck::internal_default_instance() {
  return &RegisterAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqEnterGame

// optional string session = 1;
inline void ReqEnterGame::clear_session() {
  session_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqEnterGame::session() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqEnterGame.session)
  return session_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqEnterGame::set_session(const ::std::string& value) {
  
  session_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetMsg.ReqEnterGame.session)
}
inline void ReqEnterGame::set_session(const char* value) {
  
  session_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetMsg.ReqEnterGame.session)
}
inline void ReqEnterGame::set_session(const char* value, size_t size) {
  
  session_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetMsg.ReqEnterGame.session)
}
inline ::std::string* ReqEnterGame::mutable_session() {
  
  // @@protoc_insertion_point(field_mutable:NetMsg.ReqEnterGame.session)
  return session_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqEnterGame::release_session() {
  // @@protoc_insertion_point(field_release:NetMsg.ReqEnterGame.session)
  
  return session_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqEnterGame::set_allocated_session(::std::string* session) {
  if (session != NULL) {
    
  } else {
    
  }
  session_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), session);
  // @@protoc_insertion_point(field_set_allocated:NetMsg.ReqEnterGame.session)
}

inline const ReqEnterGame* ReqEnterGame::internal_default_instance() {
  return &ReqEnterGame_default_instance_.get();
}
// -------------------------------------------------------------------

// EnterGameAck

// optional int32 error = 1;
inline void EnterGameAck::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 EnterGameAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.EnterGameAck.error)
  return error_;
}
inline void EnterGameAck::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.EnterGameAck.error)
}

// optional .NetMsg.PlayerData player = 2;
inline bool EnterGameAck::has_player() const {
  return this != internal_default_instance() && player_ != NULL;
}
inline void EnterGameAck::clear_player() {
  if (GetArenaNoVirtual() == NULL && player_ != NULL) delete player_;
  player_ = NULL;
}
inline const ::NetMsg::PlayerData& EnterGameAck::player() const {
  // @@protoc_insertion_point(field_get:NetMsg.EnterGameAck.player)
  return player_ != NULL ? *player_
                         : *::NetMsg::PlayerData::internal_default_instance();
}
inline ::NetMsg::PlayerData* EnterGameAck::mutable_player() {
  
  if (player_ == NULL) {
    player_ = new ::NetMsg::PlayerData;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.EnterGameAck.player)
  return player_;
}
inline ::NetMsg::PlayerData* EnterGameAck::release_player() {
  // @@protoc_insertion_point(field_release:NetMsg.EnterGameAck.player)
  
  ::NetMsg::PlayerData* temp = player_;
  player_ = NULL;
  return temp;
}
inline void EnterGameAck::set_allocated_player(::NetMsg::PlayerData* player) {
  delete player_;
  player_ = player;
  if (player) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.EnterGameAck.player)
}

inline const EnterGameAck* EnterGameAck::internal_default_instance() {
  return &EnterGameAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqCreateUser

// optional uint32 newGuideId = 1;
inline void ReqCreateUser::clear_newguideid() {
  newguideid_ = 0u;
}
inline ::google::protobuf::uint32 ReqCreateUser::newguideid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqCreateUser.newGuideId)
  return newguideid_;
}
inline void ReqCreateUser::set_newguideid(::google::protobuf::uint32 value) {
  
  newguideid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqCreateUser.newGuideId)
}

// optional string firstName = 2;
inline void ReqCreateUser::clear_firstname() {
  firstname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqCreateUser::firstname() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqCreateUser.firstName)
  return firstname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqCreateUser::set_firstname(const ::std::string& value) {
  
  firstname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetMsg.ReqCreateUser.firstName)
}
inline void ReqCreateUser::set_firstname(const char* value) {
  
  firstname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetMsg.ReqCreateUser.firstName)
}
inline void ReqCreateUser::set_firstname(const char* value, size_t size) {
  
  firstname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetMsg.ReqCreateUser.firstName)
}
inline ::std::string* ReqCreateUser::mutable_firstname() {
  
  // @@protoc_insertion_point(field_mutable:NetMsg.ReqCreateUser.firstName)
  return firstname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqCreateUser::release_firstname() {
  // @@protoc_insertion_point(field_release:NetMsg.ReqCreateUser.firstName)
  
  return firstname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqCreateUser::set_allocated_firstname(::std::string* firstname) {
  if (firstname != NULL) {
    
  } else {
    
  }
  firstname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), firstname);
  // @@protoc_insertion_point(field_set_allocated:NetMsg.ReqCreateUser.firstName)
}

// optional string lastName = 3;
inline void ReqCreateUser::clear_lastname() {
  lastname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqCreateUser::lastname() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqCreateUser.lastName)
  return lastname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqCreateUser::set_lastname(const ::std::string& value) {
  
  lastname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetMsg.ReqCreateUser.lastName)
}
inline void ReqCreateUser::set_lastname(const char* value) {
  
  lastname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetMsg.ReqCreateUser.lastName)
}
inline void ReqCreateUser::set_lastname(const char* value, size_t size) {
  
  lastname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetMsg.ReqCreateUser.lastName)
}
inline ::std::string* ReqCreateUser::mutable_lastname() {
  
  // @@protoc_insertion_point(field_mutable:NetMsg.ReqCreateUser.lastName)
  return lastname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqCreateUser::release_lastname() {
  // @@protoc_insertion_point(field_release:NetMsg.ReqCreateUser.lastName)
  
  return lastname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqCreateUser::set_allocated_lastname(::std::string* lastname) {
  if (lastname != NULL) {
    
  } else {
    
  }
  lastname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lastname);
  // @@protoc_insertion_point(field_set_allocated:NetMsg.ReqCreateUser.lastName)
}

// optional string secondName = 4;
inline void ReqCreateUser::clear_secondname() {
  secondname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqCreateUser::secondname() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqCreateUser.secondName)
  return secondname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqCreateUser::set_secondname(const ::std::string& value) {
  
  secondname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetMsg.ReqCreateUser.secondName)
}
inline void ReqCreateUser::set_secondname(const char* value) {
  
  secondname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetMsg.ReqCreateUser.secondName)
}
inline void ReqCreateUser::set_secondname(const char* value, size_t size) {
  
  secondname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetMsg.ReqCreateUser.secondName)
}
inline ::std::string* ReqCreateUser::mutable_secondname() {
  
  // @@protoc_insertion_point(field_mutable:NetMsg.ReqCreateUser.secondName)
  return secondname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqCreateUser::release_secondname() {
  // @@protoc_insertion_point(field_release:NetMsg.ReqCreateUser.secondName)
  
  return secondname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqCreateUser::set_allocated_secondname(::std::string* secondname) {
  if (secondname != NULL) {
    
  } else {
    
  }
  secondname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secondname);
  // @@protoc_insertion_point(field_set_allocated:NetMsg.ReqCreateUser.secondName)
}

// optional uint32 sex = 5;
inline void ReqCreateUser::clear_sex() {
  sex_ = 0u;
}
inline ::google::protobuf::uint32 ReqCreateUser::sex() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqCreateUser.sex)
  return sex_;
}
inline void ReqCreateUser::set_sex(::google::protobuf::uint32 value) {
  
  sex_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqCreateUser.sex)
}

// optional uint32 icon = 6;
inline void ReqCreateUser::clear_icon() {
  icon_ = 0u;
}
inline ::google::protobuf::uint32 ReqCreateUser::icon() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqCreateUser.icon)
  return icon_;
}
inline void ReqCreateUser::set_icon(::google::protobuf::uint32 value) {
  
  icon_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqCreateUser.icon)
}

inline const ReqCreateUser* ReqCreateUser::internal_default_instance() {
  return &ReqCreateUser_default_instance_.get();
}
// -------------------------------------------------------------------

// CreateUserAck

// optional int32 error = 1;
inline void CreateUserAck::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 CreateUserAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.CreateUserAck.error)
  return error_;
}
inline void CreateUserAck::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CreateUserAck.error)
}

// optional .NetMsg.PlayerData player = 2;
inline bool CreateUserAck::has_player() const {
  return this != internal_default_instance() && player_ != NULL;
}
inline void CreateUserAck::clear_player() {
  if (GetArenaNoVirtual() == NULL && player_ != NULL) delete player_;
  player_ = NULL;
}
inline const ::NetMsg::PlayerData& CreateUserAck::player() const {
  // @@protoc_insertion_point(field_get:NetMsg.CreateUserAck.player)
  return player_ != NULL ? *player_
                         : *::NetMsg::PlayerData::internal_default_instance();
}
inline ::NetMsg::PlayerData* CreateUserAck::mutable_player() {
  
  if (player_ == NULL) {
    player_ = new ::NetMsg::PlayerData;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.CreateUserAck.player)
  return player_;
}
inline ::NetMsg::PlayerData* CreateUserAck::release_player() {
  // @@protoc_insertion_point(field_release:NetMsg.CreateUserAck.player)
  
  ::NetMsg::PlayerData* temp = player_;
  player_ = NULL;
  return temp;
}
inline void CreateUserAck::set_allocated_player(::NetMsg::PlayerData* player) {
  delete player_;
  player_ = player;
  if (player) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.CreateUserAck.player)
}

inline const CreateUserAck* CreateUserAck::internal_default_instance() {
  return &CreateUserAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ServerInfo

// optional int32 id = 1;
inline void ServerInfo::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 ServerInfo::id() const {
  // @@protoc_insertion_point(field_get:NetMsg.ServerInfo.id)
  return id_;
}
inline void ServerInfo::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ServerInfo.id)
}

// optional string name = 2;
inline void ServerInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ServerInfo::name() const {
  // @@protoc_insertion_point(field_get:NetMsg.ServerInfo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServerInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetMsg.ServerInfo.name)
}
inline void ServerInfo::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetMsg.ServerInfo.name)
}
inline void ServerInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetMsg.ServerInfo.name)
}
inline ::std::string* ServerInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:NetMsg.ServerInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ServerInfo::release_name() {
  // @@protoc_insertion_point(field_release:NetMsg.ServerInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServerInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:NetMsg.ServerInfo.name)
}

// optional string ip = 3;
inline void ServerInfo::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ServerInfo::ip() const {
  // @@protoc_insertion_point(field_get:NetMsg.ServerInfo.ip)
  return ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServerInfo::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetMsg.ServerInfo.ip)
}
inline void ServerInfo::set_ip(const char* value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetMsg.ServerInfo.ip)
}
inline void ServerInfo::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetMsg.ServerInfo.ip)
}
inline ::std::string* ServerInfo::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:NetMsg.ServerInfo.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ServerInfo::release_ip() {
  // @@protoc_insertion_point(field_release:NetMsg.ServerInfo.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServerInfo::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:NetMsg.ServerInfo.ip)
}

// optional int32 port = 4;
inline void ServerInfo::clear_port() {
  port_ = 0;
}
inline ::google::protobuf::int32 ServerInfo::port() const {
  // @@protoc_insertion_point(field_get:NetMsg.ServerInfo.port)
  return port_;
}
inline void ServerInfo::set_port(::google::protobuf::int32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ServerInfo.port)
}

// optional .NetMsg.ServerStatus status = 5;
inline void ServerInfo::clear_status() {
  status_ = 0;
}
inline ::NetMsg::ServerStatus ServerInfo::status() const {
  // @@protoc_insertion_point(field_get:NetMsg.ServerInfo.status)
  return static_cast< ::NetMsg::ServerStatus >(status_);
}
inline void ServerInfo::set_status(::NetMsg::ServerStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ServerInfo.status)
}

inline const ServerInfo* ServerInfo::internal_default_instance() {
  return &ServerInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// ServerListAck

// repeated .NetMsg.ServerInfo info = 1;
inline int ServerListAck::info_size() const {
  return info_.size();
}
inline void ServerListAck::clear_info() {
  info_.Clear();
}
inline const ::NetMsg::ServerInfo& ServerListAck::info(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.ServerListAck.info)
  return info_.Get(index);
}
inline ::NetMsg::ServerInfo* ServerListAck::mutable_info(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.ServerListAck.info)
  return info_.Mutable(index);
}
inline ::NetMsg::ServerInfo* ServerListAck::add_info() {
  // @@protoc_insertion_point(field_add:NetMsg.ServerListAck.info)
  return info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::ServerInfo >*
ServerListAck::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.ServerListAck.info)
  return &info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::ServerInfo >&
ServerListAck::info() const {
  // @@protoc_insertion_point(field_list:NetMsg.ServerListAck.info)
  return info_;
}

inline const ServerListAck* ServerListAck::internal_default_instance() {
  return &ServerListAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqThirdPartyLogin

// optional int32 id = 1;
inline void ReqThirdPartyLogin::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 ReqThirdPartyLogin::id() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqThirdPartyLogin.id)
  return id_;
}
inline void ReqThirdPartyLogin::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqThirdPartyLogin.id)
}

// optional string tocken = 2;
inline void ReqThirdPartyLogin::clear_tocken() {
  tocken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqThirdPartyLogin::tocken() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqThirdPartyLogin.tocken)
  return tocken_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqThirdPartyLogin::set_tocken(const ::std::string& value) {
  
  tocken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetMsg.ReqThirdPartyLogin.tocken)
}
inline void ReqThirdPartyLogin::set_tocken(const char* value) {
  
  tocken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetMsg.ReqThirdPartyLogin.tocken)
}
inline void ReqThirdPartyLogin::set_tocken(const char* value, size_t size) {
  
  tocken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetMsg.ReqThirdPartyLogin.tocken)
}
inline ::std::string* ReqThirdPartyLogin::mutable_tocken() {
  
  // @@protoc_insertion_point(field_mutable:NetMsg.ReqThirdPartyLogin.tocken)
  return tocken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqThirdPartyLogin::release_tocken() {
  // @@protoc_insertion_point(field_release:NetMsg.ReqThirdPartyLogin.tocken)
  
  return tocken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqThirdPartyLogin::set_allocated_tocken(::std::string* tocken) {
  if (tocken != NULL) {
    
  } else {
    
  }
  tocken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tocken);
  // @@protoc_insertion_point(field_set_allocated:NetMsg.ReqThirdPartyLogin.tocken)
}

inline const ReqThirdPartyLogin* ReqThirdPartyLogin::internal_default_instance() {
  return &ReqThirdPartyLogin_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqOrderId

// optional int32 productId = 1;
inline void ReqOrderId::clear_productid() {
  productid_ = 0;
}
inline ::google::protobuf::int32 ReqOrderId::productid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqOrderId.productId)
  return productid_;
}
inline void ReqOrderId::set_productid(::google::protobuf::int32 value) {
  
  productid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqOrderId.productId)
}

inline const ReqOrderId* ReqOrderId::internal_default_instance() {
  return &ReqOrderId_default_instance_.get();
}
// -------------------------------------------------------------------

// OrderIdAck

// optional string orderId = 1;
inline void OrderIdAck::clear_orderid() {
  orderid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderIdAck::orderid() const {
  // @@protoc_insertion_point(field_get:NetMsg.OrderIdAck.orderId)
  return orderid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderIdAck::set_orderid(const ::std::string& value) {
  
  orderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetMsg.OrderIdAck.orderId)
}
inline void OrderIdAck::set_orderid(const char* value) {
  
  orderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetMsg.OrderIdAck.orderId)
}
inline void OrderIdAck::set_orderid(const char* value, size_t size) {
  
  orderid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetMsg.OrderIdAck.orderId)
}
inline ::std::string* OrderIdAck::mutable_orderid() {
  
  // @@protoc_insertion_point(field_mutable:NetMsg.OrderIdAck.orderId)
  return orderid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderIdAck::release_orderid() {
  // @@protoc_insertion_point(field_release:NetMsg.OrderIdAck.orderId)
  
  return orderid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderIdAck::set_allocated_orderid(::std::string* orderid) {
  if (orderid != NULL) {
    
  } else {
    
  }
  orderid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), orderid);
  // @@protoc_insertion_point(field_set_allocated:NetMsg.OrderIdAck.orderId)
}

// optional string ext = 2;
inline void OrderIdAck::clear_ext() {
  ext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderIdAck::ext() const {
  // @@protoc_insertion_point(field_get:NetMsg.OrderIdAck.ext)
  return ext_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderIdAck::set_ext(const ::std::string& value) {
  
  ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetMsg.OrderIdAck.ext)
}
inline void OrderIdAck::set_ext(const char* value) {
  
  ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetMsg.OrderIdAck.ext)
}
inline void OrderIdAck::set_ext(const char* value, size_t size) {
  
  ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetMsg.OrderIdAck.ext)
}
inline ::std::string* OrderIdAck::mutable_ext() {
  
  // @@protoc_insertion_point(field_mutable:NetMsg.OrderIdAck.ext)
  return ext_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderIdAck::release_ext() {
  // @@protoc_insertion_point(field_release:NetMsg.OrderIdAck.ext)
  
  return ext_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderIdAck::set_allocated_ext(::std::string* ext) {
  if (ext != NULL) {
    
  } else {
    
  }
  ext_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ext);
  // @@protoc_insertion_point(field_set_allocated:NetMsg.OrderIdAck.ext)
}

inline const OrderIdAck* OrderIdAck::internal_default_instance() {
  return &OrderIdAck_default_instance_.get();
}
// -------------------------------------------------------------------

// UpdatePlayerAck

// optional uint64 mask = 1;
inline void UpdatePlayerAck::clear_mask() {
  mask_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UpdatePlayerAck::mask() const {
  // @@protoc_insertion_point(field_get:NetMsg.UpdatePlayerAck.mask)
  return mask_;
}
inline void UpdatePlayerAck::set_mask(::google::protobuf::uint64 value) {
  
  mask_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.UpdatePlayerAck.mask)
}

// optional .NetMsg.PlayerData player = 2;
inline bool UpdatePlayerAck::has_player() const {
  return this != internal_default_instance() && player_ != NULL;
}
inline void UpdatePlayerAck::clear_player() {
  if (GetArenaNoVirtual() == NULL && player_ != NULL) delete player_;
  player_ = NULL;
}
inline const ::NetMsg::PlayerData& UpdatePlayerAck::player() const {
  // @@protoc_insertion_point(field_get:NetMsg.UpdatePlayerAck.player)
  return player_ != NULL ? *player_
                         : *::NetMsg::PlayerData::internal_default_instance();
}
inline ::NetMsg::PlayerData* UpdatePlayerAck::mutable_player() {
  
  if (player_ == NULL) {
    player_ = new ::NetMsg::PlayerData;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.UpdatePlayerAck.player)
  return player_;
}
inline ::NetMsg::PlayerData* UpdatePlayerAck::release_player() {
  // @@protoc_insertion_point(field_release:NetMsg.UpdatePlayerAck.player)
  
  ::NetMsg::PlayerData* temp = player_;
  player_ = NULL;
  return temp;
}
inline void UpdatePlayerAck::set_allocated_player(::NetMsg::PlayerData* player) {
  delete player_;
  player_ = player;
  if (player) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.UpdatePlayerAck.player)
}

inline const UpdatePlayerAck* UpdatePlayerAck::internal_default_instance() {
  return &UpdatePlayerAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqChat

// optional uint32 chatType = 1;
inline void ReqChat::clear_chattype() {
  chattype_ = 0u;
}
inline ::google::protobuf::uint32 ReqChat::chattype() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqChat.chatType)
  return chattype_;
}
inline void ReqChat::set_chattype(::google::protobuf::uint32 value) {
  
  chattype_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqChat.chatType)
}

// optional uint32 toUserId = 2;
inline void ReqChat::clear_touserid() {
  touserid_ = 0u;
}
inline ::google::protobuf::uint32 ReqChat::touserid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqChat.toUserId)
  return touserid_;
}
inline void ReqChat::set_touserid(::google::protobuf::uint32 value) {
  
  touserid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqChat.toUserId)
}

// optional string toNick = 3;
inline void ReqChat::clear_tonick() {
  tonick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqChat::tonick() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqChat.toNick)
  return tonick_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqChat::set_tonick(const ::std::string& value) {
  
  tonick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetMsg.ReqChat.toNick)
}
inline void ReqChat::set_tonick(const char* value) {
  
  tonick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetMsg.ReqChat.toNick)
}
inline void ReqChat::set_tonick(const char* value, size_t size) {
  
  tonick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetMsg.ReqChat.toNick)
}
inline ::std::string* ReqChat::mutable_tonick() {
  
  // @@protoc_insertion_point(field_mutable:NetMsg.ReqChat.toNick)
  return tonick_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqChat::release_tonick() {
  // @@protoc_insertion_point(field_release:NetMsg.ReqChat.toNick)
  
  return tonick_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqChat::set_allocated_tonick(::std::string* tonick) {
  if (tonick != NULL) {
    
  } else {
    
  }
  tonick_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tonick);
  // @@protoc_insertion_point(field_set_allocated:NetMsg.ReqChat.toNick)
}

// optional string msg = 4;
inline void ReqChat::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqChat::msg() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqChat.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqChat::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetMsg.ReqChat.msg)
}
inline void ReqChat::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetMsg.ReqChat.msg)
}
inline void ReqChat::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetMsg.ReqChat.msg)
}
inline ::std::string* ReqChat::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:NetMsg.ReqChat.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqChat::release_msg() {
  // @@protoc_insertion_point(field_release:NetMsg.ReqChat.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqChat::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:NetMsg.ReqChat.msg)
}

inline const ReqChat* ReqChat::internal_default_instance() {
  return &ReqChat_default_instance_.get();
}
// -------------------------------------------------------------------

// ChatAck

// optional uint32 chatType = 1;
inline void ChatAck::clear_chattype() {
  chattype_ = 0u;
}
inline ::google::protobuf::uint32 ChatAck::chattype() const {
  // @@protoc_insertion_point(field_get:NetMsg.ChatAck.chatType)
  return chattype_;
}
inline void ChatAck::set_chattype(::google::protobuf::uint32 value) {
  
  chattype_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ChatAck.chatType)
}

// optional uint32 fromUserId = 2;
inline void ChatAck::clear_fromuserid() {
  fromuserid_ = 0u;
}
inline ::google::protobuf::uint32 ChatAck::fromuserid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ChatAck.fromUserId)
  return fromuserid_;
}
inline void ChatAck::set_fromuserid(::google::protobuf::uint32 value) {
  
  fromuserid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ChatAck.fromUserId)
}

// optional string fromNick = 3;
inline void ChatAck::clear_fromnick() {
  fromnick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChatAck::fromnick() const {
  // @@protoc_insertion_point(field_get:NetMsg.ChatAck.fromNick)
  return fromnick_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatAck::set_fromnick(const ::std::string& value) {
  
  fromnick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetMsg.ChatAck.fromNick)
}
inline void ChatAck::set_fromnick(const char* value) {
  
  fromnick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetMsg.ChatAck.fromNick)
}
inline void ChatAck::set_fromnick(const char* value, size_t size) {
  
  fromnick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetMsg.ChatAck.fromNick)
}
inline ::std::string* ChatAck::mutable_fromnick() {
  
  // @@protoc_insertion_point(field_mutable:NetMsg.ChatAck.fromNick)
  return fromnick_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatAck::release_fromnick() {
  // @@protoc_insertion_point(field_release:NetMsg.ChatAck.fromNick)
  
  return fromnick_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatAck::set_allocated_fromnick(::std::string* fromnick) {
  if (fromnick != NULL) {
    
  } else {
    
  }
  fromnick_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fromnick);
  // @@protoc_insertion_point(field_set_allocated:NetMsg.ChatAck.fromNick)
}

// optional uint32 toUserId = 4;
inline void ChatAck::clear_touserid() {
  touserid_ = 0u;
}
inline ::google::protobuf::uint32 ChatAck::touserid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ChatAck.toUserId)
  return touserid_;
}
inline void ChatAck::set_touserid(::google::protobuf::uint32 value) {
  
  touserid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ChatAck.toUserId)
}

// optional string toNick = 5;
inline void ChatAck::clear_tonick() {
  tonick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChatAck::tonick() const {
  // @@protoc_insertion_point(field_get:NetMsg.ChatAck.toNick)
  return tonick_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatAck::set_tonick(const ::std::string& value) {
  
  tonick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetMsg.ChatAck.toNick)
}
inline void ChatAck::set_tonick(const char* value) {
  
  tonick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetMsg.ChatAck.toNick)
}
inline void ChatAck::set_tonick(const char* value, size_t size) {
  
  tonick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetMsg.ChatAck.toNick)
}
inline ::std::string* ChatAck::mutable_tonick() {
  
  // @@protoc_insertion_point(field_mutable:NetMsg.ChatAck.toNick)
  return tonick_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatAck::release_tonick() {
  // @@protoc_insertion_point(field_release:NetMsg.ChatAck.toNick)
  
  return tonick_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatAck::set_allocated_tonick(::std::string* tonick) {
  if (tonick != NULL) {
    
  } else {
    
  }
  tonick_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tonick);
  // @@protoc_insertion_point(field_set_allocated:NetMsg.ChatAck.toNick)
}

// optional string msg = 6;
inline void ChatAck::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChatAck::msg() const {
  // @@protoc_insertion_point(field_get:NetMsg.ChatAck.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatAck::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetMsg.ChatAck.msg)
}
inline void ChatAck::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetMsg.ChatAck.msg)
}
inline void ChatAck::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetMsg.ChatAck.msg)
}
inline ::std::string* ChatAck::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:NetMsg.ChatAck.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatAck::release_msg() {
  // @@protoc_insertion_point(field_release:NetMsg.ChatAck.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatAck::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:NetMsg.ChatAck.msg)
}

// optional uint32 error = 7;
inline void ChatAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 ChatAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.ChatAck.error)
  return error_;
}
inline void ChatAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ChatAck.error)
}

// optional uint32 sendTime = 8;
inline void ChatAck::clear_sendtime() {
  sendtime_ = 0u;
}
inline ::google::protobuf::uint32 ChatAck::sendtime() const {
  // @@protoc_insertion_point(field_get:NetMsg.ChatAck.sendTime)
  return sendtime_;
}
inline void ChatAck::set_sendtime(::google::protobuf::uint32 value) {
  
  sendtime_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ChatAck.sendTime)
}

// optional uint32 fromForce = 9;
inline void ChatAck::clear_fromforce() {
  fromforce_ = 0u;
}
inline ::google::protobuf::uint32 ChatAck::fromforce() const {
  // @@protoc_insertion_point(field_get:NetMsg.ChatAck.fromForce)
  return fromforce_;
}
inline void ChatAck::set_fromforce(::google::protobuf::uint32 value) {
  
  fromforce_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ChatAck.fromForce)
}

// optional uint32 fromUserIcon = 10;
inline void ChatAck::clear_fromusericon() {
  fromusericon_ = 0u;
}
inline ::google::protobuf::uint32 ChatAck::fromusericon() const {
  // @@protoc_insertion_point(field_get:NetMsg.ChatAck.fromUserIcon)
  return fromusericon_;
}
inline void ChatAck::set_fromusericon(::google::protobuf::uint32 value) {
  
  fromusericon_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ChatAck.fromUserIcon)
}

inline const ChatAck* ChatAck::internal_default_instance() {
  return &ChatAck_default_instance_.get();
}
// -------------------------------------------------------------------

// UserNickAck

// optional string firstName = 1;
inline void UserNickAck::clear_firstname() {
  firstname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserNickAck::firstname() const {
  // @@protoc_insertion_point(field_get:NetMsg.UserNickAck.firstName)
  return firstname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserNickAck::set_firstname(const ::std::string& value) {
  
  firstname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetMsg.UserNickAck.firstName)
}
inline void UserNickAck::set_firstname(const char* value) {
  
  firstname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetMsg.UserNickAck.firstName)
}
inline void UserNickAck::set_firstname(const char* value, size_t size) {
  
  firstname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetMsg.UserNickAck.firstName)
}
inline ::std::string* UserNickAck::mutable_firstname() {
  
  // @@protoc_insertion_point(field_mutable:NetMsg.UserNickAck.firstName)
  return firstname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserNickAck::release_firstname() {
  // @@protoc_insertion_point(field_release:NetMsg.UserNickAck.firstName)
  
  return firstname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserNickAck::set_allocated_firstname(::std::string* firstname) {
  if (firstname != NULL) {
    
  } else {
    
  }
  firstname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), firstname);
  // @@protoc_insertion_point(field_set_allocated:NetMsg.UserNickAck.firstName)
}

// optional string lastName = 2;
inline void UserNickAck::clear_lastname() {
  lastname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserNickAck::lastname() const {
  // @@protoc_insertion_point(field_get:NetMsg.UserNickAck.lastName)
  return lastname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserNickAck::set_lastname(const ::std::string& value) {
  
  lastname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetMsg.UserNickAck.lastName)
}
inline void UserNickAck::set_lastname(const char* value) {
  
  lastname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetMsg.UserNickAck.lastName)
}
inline void UserNickAck::set_lastname(const char* value, size_t size) {
  
  lastname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetMsg.UserNickAck.lastName)
}
inline ::std::string* UserNickAck::mutable_lastname() {
  
  // @@protoc_insertion_point(field_mutable:NetMsg.UserNickAck.lastName)
  return lastname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserNickAck::release_lastname() {
  // @@protoc_insertion_point(field_release:NetMsg.UserNickAck.lastName)
  
  return lastname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserNickAck::set_allocated_lastname(::std::string* lastname) {
  if (lastname != NULL) {
    
  } else {
    
  }
  lastname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lastname);
  // @@protoc_insertion_point(field_set_allocated:NetMsg.UserNickAck.lastName)
}

// optional string secondName = 3;
inline void UserNickAck::clear_secondname() {
  secondname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserNickAck::secondname() const {
  // @@protoc_insertion_point(field_get:NetMsg.UserNickAck.secondName)
  return secondname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserNickAck::set_secondname(const ::std::string& value) {
  
  secondname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetMsg.UserNickAck.secondName)
}
inline void UserNickAck::set_secondname(const char* value) {
  
  secondname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetMsg.UserNickAck.secondName)
}
inline void UserNickAck::set_secondname(const char* value, size_t size) {
  
  secondname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetMsg.UserNickAck.secondName)
}
inline ::std::string* UserNickAck::mutable_secondname() {
  
  // @@protoc_insertion_point(field_mutable:NetMsg.UserNickAck.secondName)
  return secondname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserNickAck::release_secondname() {
  // @@protoc_insertion_point(field_release:NetMsg.UserNickAck.secondName)
  
  return secondname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserNickAck::set_allocated_secondname(::std::string* secondname) {
  if (secondname != NULL) {
    
  } else {
    
  }
  secondname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secondname);
  // @@protoc_insertion_point(field_set_allocated:NetMsg.UserNickAck.secondName)
}

inline const UserNickAck* UserNickAck::internal_default_instance() {
  return &UserNickAck_default_instance_.get();
}
// -------------------------------------------------------------------

// SkillInfo

// optional uint64 uid = 1;
inline void SkillInfo::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SkillInfo::uid() const {
  // @@protoc_insertion_point(field_get:NetMsg.SkillInfo.uid)
  return uid_;
}
inline void SkillInfo::set_uid(::google::protobuf::uint64 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.SkillInfo.uid)
}

// optional uint32 skillId = 2;
inline void SkillInfo::clear_skillid() {
  skillid_ = 0u;
}
inline ::google::protobuf::uint32 SkillInfo::skillid() const {
  // @@protoc_insertion_point(field_get:NetMsg.SkillInfo.skillId)
  return skillid_;
}
inline void SkillInfo::set_skillid(::google::protobuf::uint32 value) {
  
  skillid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.SkillInfo.skillId)
}

// optional uint32 skillExp = 3;
inline void SkillInfo::clear_skillexp() {
  skillexp_ = 0u;
}
inline ::google::protobuf::uint32 SkillInfo::skillexp() const {
  // @@protoc_insertion_point(field_get:NetMsg.SkillInfo.skillExp)
  return skillexp_;
}
inline void SkillInfo::set_skillexp(::google::protobuf::uint32 value) {
  
  skillexp_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.SkillInfo.skillExp)
}

// optional uint32 skillLevel = 4;
inline void SkillInfo::clear_skilllevel() {
  skilllevel_ = 0u;
}
inline ::google::protobuf::uint32 SkillInfo::skilllevel() const {
  // @@protoc_insertion_point(field_get:NetMsg.SkillInfo.skillLevel)
  return skilllevel_;
}
inline void SkillInfo::set_skilllevel(::google::protobuf::uint32 value) {
  
  skilllevel_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.SkillInfo.skillLevel)
}

inline const SkillInfo* SkillInfo::internal_default_instance() {
  return &SkillInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// HeroAttr

// optional uint32 exp = 1;
inline void HeroAttr::clear_exp() {
  exp_ = 0u;
}
inline ::google::protobuf::uint32 HeroAttr::exp() const {
  // @@protoc_insertion_point(field_get:NetMsg.HeroAttr.exp)
  return exp_;
}
inline void HeroAttr::set_exp(::google::protobuf::uint32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.HeroAttr.exp)
}

// optional uint32 lv = 2;
inline void HeroAttr::clear_lv() {
  lv_ = 0u;
}
inline ::google::protobuf::uint32 HeroAttr::lv() const {
  // @@protoc_insertion_point(field_get:NetMsg.HeroAttr.lv)
  return lv_;
}
inline void HeroAttr::set_lv(::google::protobuf::uint32 value) {
  
  lv_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.HeroAttr.lv)
}

inline const HeroAttr* HeroAttr::internal_default_instance() {
  return &HeroAttr_default_instance_.get();
}
// -------------------------------------------------------------------

// HeroInfo

// optional uint64 udid = 1;
inline void HeroInfo::clear_udid() {
  udid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 HeroInfo::udid() const {
  // @@protoc_insertion_point(field_get:NetMsg.HeroInfo.udid)
  return udid_;
}
inline void HeroInfo::set_udid(::google::protobuf::uint64 value) {
  
  udid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.HeroInfo.udid)
}

// optional uint32 id = 2;
inline void HeroInfo::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 HeroInfo::id() const {
  // @@protoc_insertion_point(field_get:NetMsg.HeroInfo.id)
  return id_;
}
inline void HeroInfo::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.HeroInfo.id)
}

// optional uint32 level = 3;
inline void HeroInfo::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 HeroInfo::level() const {
  // @@protoc_insertion_point(field_get:NetMsg.HeroInfo.level)
  return level_;
}
inline void HeroInfo::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.HeroInfo.level)
}

// optional uint32 starLevel = 4;
inline void HeroInfo::clear_starlevel() {
  starlevel_ = 0u;
}
inline ::google::protobuf::uint32 HeroInfo::starlevel() const {
  // @@protoc_insertion_point(field_get:NetMsg.HeroInfo.starLevel)
  return starlevel_;
}
inline void HeroInfo::set_starlevel(::google::protobuf::uint32 value) {
  
  starlevel_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.HeroInfo.starLevel)
}

// optional .NetMsg.HeroAttr extraStrength = 5;
inline bool HeroInfo::has_extrastrength() const {
  return this != internal_default_instance() && extrastrength_ != NULL;
}
inline void HeroInfo::clear_extrastrength() {
  if (GetArenaNoVirtual() == NULL && extrastrength_ != NULL) delete extrastrength_;
  extrastrength_ = NULL;
}
inline const ::NetMsg::HeroAttr& HeroInfo::extrastrength() const {
  // @@protoc_insertion_point(field_get:NetMsg.HeroInfo.extraStrength)
  return extrastrength_ != NULL ? *extrastrength_
                         : *::NetMsg::HeroAttr::internal_default_instance();
}
inline ::NetMsg::HeroAttr* HeroInfo::mutable_extrastrength() {
  
  if (extrastrength_ == NULL) {
    extrastrength_ = new ::NetMsg::HeroAttr;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.HeroInfo.extraStrength)
  return extrastrength_;
}
inline ::NetMsg::HeroAttr* HeroInfo::release_extrastrength() {
  // @@protoc_insertion_point(field_release:NetMsg.HeroInfo.extraStrength)
  
  ::NetMsg::HeroAttr* temp = extrastrength_;
  extrastrength_ = NULL;
  return temp;
}
inline void HeroInfo::set_allocated_extrastrength(::NetMsg::HeroAttr* extrastrength) {
  delete extrastrength_;
  extrastrength_ = extrastrength;
  if (extrastrength) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.HeroInfo.extraStrength)
}

// optional .NetMsg.HeroAttr extraLeadership = 6;
inline bool HeroInfo::has_extraleadership() const {
  return this != internal_default_instance() && extraleadership_ != NULL;
}
inline void HeroInfo::clear_extraleadership() {
  if (GetArenaNoVirtual() == NULL && extraleadership_ != NULL) delete extraleadership_;
  extraleadership_ = NULL;
}
inline const ::NetMsg::HeroAttr& HeroInfo::extraleadership() const {
  // @@protoc_insertion_point(field_get:NetMsg.HeroInfo.extraLeadership)
  return extraleadership_ != NULL ? *extraleadership_
                         : *::NetMsg::HeroAttr::internal_default_instance();
}
inline ::NetMsg::HeroAttr* HeroInfo::mutable_extraleadership() {
  
  if (extraleadership_ == NULL) {
    extraleadership_ = new ::NetMsg::HeroAttr;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.HeroInfo.extraLeadership)
  return extraleadership_;
}
inline ::NetMsg::HeroAttr* HeroInfo::release_extraleadership() {
  // @@protoc_insertion_point(field_release:NetMsg.HeroInfo.extraLeadership)
  
  ::NetMsg::HeroAttr* temp = extraleadership_;
  extraleadership_ = NULL;
  return temp;
}
inline void HeroInfo::set_allocated_extraleadership(::NetMsg::HeroAttr* extraleadership) {
  delete extraleadership_;
  extraleadership_ = extraleadership;
  if (extraleadership) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.HeroInfo.extraLeadership)
}

// optional .NetMsg.HeroAttr extraWisdom = 7;
inline bool HeroInfo::has_extrawisdom() const {
  return this != internal_default_instance() && extrawisdom_ != NULL;
}
inline void HeroInfo::clear_extrawisdom() {
  if (GetArenaNoVirtual() == NULL && extrawisdom_ != NULL) delete extrawisdom_;
  extrawisdom_ = NULL;
}
inline const ::NetMsg::HeroAttr& HeroInfo::extrawisdom() const {
  // @@protoc_insertion_point(field_get:NetMsg.HeroInfo.extraWisdom)
  return extrawisdom_ != NULL ? *extrawisdom_
                         : *::NetMsg::HeroAttr::internal_default_instance();
}
inline ::NetMsg::HeroAttr* HeroInfo::mutable_extrawisdom() {
  
  if (extrawisdom_ == NULL) {
    extrawisdom_ = new ::NetMsg::HeroAttr;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.HeroInfo.extraWisdom)
  return extrawisdom_;
}
inline ::NetMsg::HeroAttr* HeroInfo::release_extrawisdom() {
  // @@protoc_insertion_point(field_release:NetMsg.HeroInfo.extraWisdom)
  
  ::NetMsg::HeroAttr* temp = extrawisdom_;
  extrawisdom_ = NULL;
  return temp;
}
inline void HeroInfo::set_allocated_extrawisdom(::NetMsg::HeroAttr* extrawisdom) {
  delete extrawisdom_;
  extrawisdom_ = extrawisdom;
  if (extrawisdom) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.HeroInfo.extraWisdom)
}

// optional .NetMsg.HeroAttr extraCharm = 8;
inline bool HeroInfo::has_extracharm() const {
  return this != internal_default_instance() && extracharm_ != NULL;
}
inline void HeroInfo::clear_extracharm() {
  if (GetArenaNoVirtual() == NULL && extracharm_ != NULL) delete extracharm_;
  extracharm_ = NULL;
}
inline const ::NetMsg::HeroAttr& HeroInfo::extracharm() const {
  // @@protoc_insertion_point(field_get:NetMsg.HeroInfo.extraCharm)
  return extracharm_ != NULL ? *extracharm_
                         : *::NetMsg::HeroAttr::internal_default_instance();
}
inline ::NetMsg::HeroAttr* HeroInfo::mutable_extracharm() {
  
  if (extracharm_ == NULL) {
    extracharm_ = new ::NetMsg::HeroAttr;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.HeroInfo.extraCharm)
  return extracharm_;
}
inline ::NetMsg::HeroAttr* HeroInfo::release_extracharm() {
  // @@protoc_insertion_point(field_release:NetMsg.HeroInfo.extraCharm)
  
  ::NetMsg::HeroAttr* temp = extracharm_;
  extracharm_ = NULL;
  return temp;
}
inline void HeroInfo::set_allocated_extracharm(::NetMsg::HeroAttr* extracharm) {
  delete extracharm_;
  extracharm_ = extracharm;
  if (extracharm) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.HeroInfo.extraCharm)
}

// optional .NetMsg.HeroAttr extraLuck = 9;
inline bool HeroInfo::has_extraluck() const {
  return this != internal_default_instance() && extraluck_ != NULL;
}
inline void HeroInfo::clear_extraluck() {
  if (GetArenaNoVirtual() == NULL && extraluck_ != NULL) delete extraluck_;
  extraluck_ = NULL;
}
inline const ::NetMsg::HeroAttr& HeroInfo::extraluck() const {
  // @@protoc_insertion_point(field_get:NetMsg.HeroInfo.extraLuck)
  return extraluck_ != NULL ? *extraluck_
                         : *::NetMsg::HeroAttr::internal_default_instance();
}
inline ::NetMsg::HeroAttr* HeroInfo::mutable_extraluck() {
  
  if (extraluck_ == NULL) {
    extraluck_ = new ::NetMsg::HeroAttr;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.HeroInfo.extraLuck)
  return extraluck_;
}
inline ::NetMsg::HeroAttr* HeroInfo::release_extraluck() {
  // @@protoc_insertion_point(field_release:NetMsg.HeroInfo.extraLuck)
  
  ::NetMsg::HeroAttr* temp = extraluck_;
  extraluck_ = NULL;
  return temp;
}
inline void HeroInfo::set_allocated_extraluck(::NetMsg::HeroAttr* extraluck) {
  delete extraluck_;
  extraluck_ = extraluck;
  if (extraluck) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.HeroInfo.extraLuck)
}

// optional uint32 cdTime = 10;
inline void HeroInfo::clear_cdtime() {
  cdtime_ = 0u;
}
inline ::google::protobuf::uint32 HeroInfo::cdtime() const {
  // @@protoc_insertion_point(field_get:NetMsg.HeroInfo.cdTime)
  return cdtime_;
}
inline void HeroInfo::set_cdtime(::google::protobuf::uint32 value) {
  
  cdtime_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.HeroInfo.cdTime)
}

// optional uint32 exp = 11;
inline void HeroInfo::clear_exp() {
  exp_ = 0u;
}
inline ::google::protobuf::uint32 HeroInfo::exp() const {
  // @@protoc_insertion_point(field_get:NetMsg.HeroInfo.exp)
  return exp_;
}
inline void HeroInfo::set_exp(::google::protobuf::uint32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.HeroInfo.exp)
}

// repeated .NetMsg.SkillInfo skills = 12;
inline int HeroInfo::skills_size() const {
  return skills_.size();
}
inline void HeroInfo::clear_skills() {
  skills_.Clear();
}
inline const ::NetMsg::SkillInfo& HeroInfo::skills(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.HeroInfo.skills)
  return skills_.Get(index);
}
inline ::NetMsg::SkillInfo* HeroInfo::mutable_skills(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.HeroInfo.skills)
  return skills_.Mutable(index);
}
inline ::NetMsg::SkillInfo* HeroInfo::add_skills() {
  // @@protoc_insertion_point(field_add:NetMsg.HeroInfo.skills)
  return skills_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::SkillInfo >*
HeroInfo::mutable_skills() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.HeroInfo.skills)
  return &skills_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::SkillInfo >&
HeroInfo::skills() const {
  // @@protoc_insertion_point(field_list:NetMsg.HeroInfo.skills)
  return skills_;
}

inline const HeroInfo* HeroInfo::internal_default_instance() {
  return &HeroInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// HeroAck

// repeated .NetMsg.HeroInfo heros = 1;
inline int HeroAck::heros_size() const {
  return heros_.size();
}
inline void HeroAck::clear_heros() {
  heros_.Clear();
}
inline const ::NetMsg::HeroInfo& HeroAck::heros(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.HeroAck.heros)
  return heros_.Get(index);
}
inline ::NetMsg::HeroInfo* HeroAck::mutable_heros(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.HeroAck.heros)
  return heros_.Mutable(index);
}
inline ::NetMsg::HeroInfo* HeroAck::add_heros() {
  // @@protoc_insertion_point(field_add:NetMsg.HeroAck.heros)
  return heros_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::HeroInfo >*
HeroAck::mutable_heros() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.HeroAck.heros)
  return &heros_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::HeroInfo >&
HeroAck::heros() const {
  // @@protoc_insertion_point(field_list:NetMsg.HeroAck.heros)
  return heros_;
}

inline const HeroAck* HeroAck::internal_default_instance() {
  return &HeroAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ItemInfo

// optional uint64 uid = 1;
inline void ItemInfo::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ItemInfo::uid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ItemInfo.uid)
  return uid_;
}
inline void ItemInfo::set_uid(::google::protobuf::uint64 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ItemInfo.uid)
}

// optional uint32 id = 2;
inline void ItemInfo::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 ItemInfo::id() const {
  // @@protoc_insertion_point(field_get:NetMsg.ItemInfo.id)
  return id_;
}
inline void ItemInfo::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ItemInfo.id)
}

// optional uint32 num = 3;
inline void ItemInfo::clear_num() {
  num_ = 0u;
}
inline ::google::protobuf::uint32 ItemInfo::num() const {
  // @@protoc_insertion_point(field_get:NetMsg.ItemInfo.num)
  return num_;
}
inline void ItemInfo::set_num(::google::protobuf::uint32 value) {
  
  num_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ItemInfo.num)
}

inline const ItemInfo* ItemInfo::internal_default_instance() {
  return &ItemInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// ItemAck

// repeated .NetMsg.ItemInfo items = 1;
inline int ItemAck::items_size() const {
  return items_.size();
}
inline void ItemAck::clear_items() {
  items_.Clear();
}
inline const ::NetMsg::ItemInfo& ItemAck::items(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.ItemAck.items)
  return items_.Get(index);
}
inline ::NetMsg::ItemInfo* ItemAck::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.ItemAck.items)
  return items_.Mutable(index);
}
inline ::NetMsg::ItemInfo* ItemAck::add_items() {
  // @@protoc_insertion_point(field_add:NetMsg.ItemAck.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::ItemInfo >*
ItemAck::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.ItemAck.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::ItemInfo >&
ItemAck::items() const {
  // @@protoc_insertion_point(field_list:NetMsg.ItemAck.items)
  return items_;
}

inline const ItemAck* ItemAck::internal_default_instance() {
  return &ItemAck_default_instance_.get();
}
// -------------------------------------------------------------------

// UpdateSkill

// optional uint64 heroUid = 1;
inline void UpdateSkill::clear_herouid() {
  herouid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UpdateSkill::herouid() const {
  // @@protoc_insertion_point(field_get:NetMsg.UpdateSkill.heroUid)
  return herouid_;
}
inline void UpdateSkill::set_herouid(::google::protobuf::uint64 value) {
  
  herouid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.UpdateSkill.heroUid)
}

// repeated .NetMsg.SkillInfo skills = 2;
inline int UpdateSkill::skills_size() const {
  return skills_.size();
}
inline void UpdateSkill::clear_skills() {
  skills_.Clear();
}
inline const ::NetMsg::SkillInfo& UpdateSkill::skills(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.UpdateSkill.skills)
  return skills_.Get(index);
}
inline ::NetMsg::SkillInfo* UpdateSkill::mutable_skills(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.UpdateSkill.skills)
  return skills_.Mutable(index);
}
inline ::NetMsg::SkillInfo* UpdateSkill::add_skills() {
  // @@protoc_insertion_point(field_add:NetMsg.UpdateSkill.skills)
  return skills_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::SkillInfo >*
UpdateSkill::mutable_skills() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.UpdateSkill.skills)
  return &skills_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::SkillInfo >&
UpdateSkill::skills() const {
  // @@protoc_insertion_point(field_list:NetMsg.UpdateSkill.skills)
  return skills_;
}

inline const UpdateSkill* UpdateSkill::internal_default_instance() {
  return &UpdateSkill_default_instance_.get();
}
// -------------------------------------------------------------------

// SetNewGuide

// optional uint32 step = 1;
inline void SetNewGuide::clear_step() {
  step_ = 0u;
}
inline ::google::protobuf::uint32 SetNewGuide::step() const {
  // @@protoc_insertion_point(field_get:NetMsg.SetNewGuide.step)
  return step_;
}
inline void SetNewGuide::set_step(::google::protobuf::uint32 value) {
  
  step_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.SetNewGuide.step)
}

// optional uint32 addData = 2;
inline void SetNewGuide::clear_adddata() {
  adddata_ = 0u;
}
inline ::google::protobuf::uint32 SetNewGuide::adddata() const {
  // @@protoc_insertion_point(field_get:NetMsg.SetNewGuide.addData)
  return adddata_;
}
inline void SetNewGuide::set_adddata(::google::protobuf::uint32 value) {
  
  adddata_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.SetNewGuide.addData)
}

inline const SetNewGuide* SetNewGuide::internal_default_instance() {
  return &SetNewGuide_default_instance_.get();
}
// -------------------------------------------------------------------

// PathInfo

// optional uint32 startPath = 1;
inline void PathInfo::clear_startpath() {
  startpath_ = 0u;
}
inline ::google::protobuf::uint32 PathInfo::startpath() const {
  // @@protoc_insertion_point(field_get:NetMsg.PathInfo.startPath)
  return startpath_;
}
inline void PathInfo::set_startpath(::google::protobuf::uint32 value) {
  
  startpath_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.PathInfo.startPath)
}

// optional float startPer = 2;
inline void PathInfo::clear_startper() {
  startper_ = 0;
}
inline float PathInfo::startper() const {
  // @@protoc_insertion_point(field_get:NetMsg.PathInfo.startPer)
  return startper_;
}
inline void PathInfo::set_startper(float value) {
  
  startper_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.PathInfo.startPer)
}

// optional uint32 endPath = 3;
inline void PathInfo::clear_endpath() {
  endpath_ = 0u;
}
inline ::google::protobuf::uint32 PathInfo::endpath() const {
  // @@protoc_insertion_point(field_get:NetMsg.PathInfo.endPath)
  return endpath_;
}
inline void PathInfo::set_endpath(::google::protobuf::uint32 value) {
  
  endpath_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.PathInfo.endPath)
}

// optional float endPer = 4;
inline void PathInfo::clear_endper() {
  endper_ = 0;
}
inline float PathInfo::endper() const {
  // @@protoc_insertion_point(field_get:NetMsg.PathInfo.endPer)
  return endper_;
}
inline void PathInfo::set_endper(float value) {
  
  endper_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.PathInfo.endPer)
}

// optional uint32 curPath = 5;
inline void PathInfo::clear_curpath() {
  curpath_ = 0u;
}
inline ::google::protobuf::uint32 PathInfo::curpath() const {
  // @@protoc_insertion_point(field_get:NetMsg.PathInfo.curPath)
  return curpath_;
}
inline void PathInfo::set_curpath(::google::protobuf::uint32 value) {
  
  curpath_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.PathInfo.curPath)
}

// optional float curPer = 6;
inline void PathInfo::clear_curper() {
  curper_ = 0;
}
inline float PathInfo::curper() const {
  // @@protoc_insertion_point(field_get:NetMsg.PathInfo.curPer)
  return curper_;
}
inline void PathInfo::set_curper(float value) {
  
  curper_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.PathInfo.curPer)
}

// optional uint32 curWayPointInd = 7;
inline void PathInfo::clear_curwaypointind() {
  curwaypointind_ = 0u;
}
inline ::google::protobuf::uint32 PathInfo::curwaypointind() const {
  // @@protoc_insertion_point(field_get:NetMsg.PathInfo.curWayPointInd)
  return curwaypointind_;
}
inline void PathInfo::set_curwaypointind(::google::protobuf::uint32 value) {
  
  curwaypointind_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.PathInfo.curWayPointInd)
}

// repeated uint32 wayPoint = 8;
inline int PathInfo::waypoint_size() const {
  return waypoint_.size();
}
inline void PathInfo::clear_waypoint() {
  waypoint_.Clear();
}
inline ::google::protobuf::uint32 PathInfo::waypoint(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.PathInfo.wayPoint)
  return waypoint_.Get(index);
}
inline void PathInfo::set_waypoint(int index, ::google::protobuf::uint32 value) {
  waypoint_.Set(index, value);
  // @@protoc_insertion_point(field_set:NetMsg.PathInfo.wayPoint)
}
inline void PathInfo::add_waypoint(::google::protobuf::uint32 value) {
  waypoint_.Add(value);
  // @@protoc_insertion_point(field_add:NetMsg.PathInfo.wayPoint)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PathInfo::waypoint() const {
  // @@protoc_insertion_point(field_list:NetMsg.PathInfo.wayPoint)
  return waypoint_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PathInfo::mutable_waypoint() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.PathInfo.wayPoint)
  return &waypoint_;
}

// optional .NetMsg.RunTargetType runTarget = 9;
inline void PathInfo::clear_runtarget() {
  runtarget_ = 0;
}
inline ::NetMsg::RunTargetType PathInfo::runtarget() const {
  // @@protoc_insertion_point(field_get:NetMsg.PathInfo.runTarget)
  return static_cast< ::NetMsg::RunTargetType >(runtarget_);
}
inline void PathInfo::set_runtarget(::NetMsg::RunTargetType value) {
  
  runtarget_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.PathInfo.runTarget)
}

// optional uint64 targetID = 10;
inline void PathInfo::clear_targetid() {
  targetid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PathInfo::targetid() const {
  // @@protoc_insertion_point(field_get:NetMsg.PathInfo.targetID)
  return targetid_;
}
inline void PathInfo::set_targetid(::google::protobuf::uint64 value) {
  
  targetid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.PathInfo.targetID)
}

inline const PathInfo* PathInfo::internal_default_instance() {
  return &PathInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// RunPathAck

// optional .NetMsg.PathInfo path = 1;
inline bool RunPathAck::has_path() const {
  return this != internal_default_instance() && path_ != NULL;
}
inline void RunPathAck::clear_path() {
  if (GetArenaNoVirtual() == NULL && path_ != NULL) delete path_;
  path_ = NULL;
}
inline const ::NetMsg::PathInfo& RunPathAck::path() const {
  // @@protoc_insertion_point(field_get:NetMsg.RunPathAck.path)
  return path_ != NULL ? *path_
                         : *::NetMsg::PathInfo::internal_default_instance();
}
inline ::NetMsg::PathInfo* RunPathAck::mutable_path() {
  
  if (path_ == NULL) {
    path_ = new ::NetMsg::PathInfo;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.RunPathAck.path)
  return path_;
}
inline ::NetMsg::PathInfo* RunPathAck::release_path() {
  // @@protoc_insertion_point(field_release:NetMsg.RunPathAck.path)
  
  ::NetMsg::PathInfo* temp = path_;
  path_ = NULL;
  return temp;
}
inline void RunPathAck::set_allocated_path(::NetMsg::PathInfo* path) {
  delete path_;
  path_ = path;
  if (path) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.RunPathAck.path)
}

// optional .NetMsg.RunState state = 2;
inline void RunPathAck::clear_state() {
  state_ = 0;
}
inline ::NetMsg::RunState RunPathAck::state() const {
  // @@protoc_insertion_point(field_get:NetMsg.RunPathAck.state)
  return static_cast< ::NetMsg::RunState >(state_);
}
inline void RunPathAck::set_state(::NetMsg::RunState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.RunPathAck.state)
}

inline const RunPathAck* RunPathAck::internal_default_instance() {
  return &RunPathAck_default_instance_.get();
}
// -------------------------------------------------------------------

// SetRunPath

// optional .NetMsg.PathInfo path = 1;
inline bool SetRunPath::has_path() const {
  return this != internal_default_instance() && path_ != NULL;
}
inline void SetRunPath::clear_path() {
  if (GetArenaNoVirtual() == NULL && path_ != NULL) delete path_;
  path_ = NULL;
}
inline const ::NetMsg::PathInfo& SetRunPath::path() const {
  // @@protoc_insertion_point(field_get:NetMsg.SetRunPath.path)
  return path_ != NULL ? *path_
                         : *::NetMsg::PathInfo::internal_default_instance();
}
inline ::NetMsg::PathInfo* SetRunPath::mutable_path() {
  
  if (path_ == NULL) {
    path_ = new ::NetMsg::PathInfo;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.SetRunPath.path)
  return path_;
}
inline ::NetMsg::PathInfo* SetRunPath::release_path() {
  // @@protoc_insertion_point(field_release:NetMsg.SetRunPath.path)
  
  ::NetMsg::PathInfo* temp = path_;
  path_ = NULL;
  return temp;
}
inline void SetRunPath::set_allocated_path(::NetMsg::PathInfo* path) {
  delete path_;
  path_ = path;
  if (path) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.SetRunPath.path)
}

// optional .NetMsg.RunState state = 2;
inline void SetRunPath::clear_state() {
  state_ = 0;
}
inline ::NetMsg::RunState SetRunPath::state() const {
  // @@protoc_insertion_point(field_get:NetMsg.SetRunPath.state)
  return static_cast< ::NetMsg::RunState >(state_);
}
inline void SetRunPath::set_state(::NetMsg::RunState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.SetRunPath.state)
}

inline const SetRunPath* SetRunPath::internal_default_instance() {
  return &SetRunPath_default_instance_.get();
}
// -------------------------------------------------------------------

// ArrivedCity

// optional int32 cityId = 1;
inline void ArrivedCity::clear_cityid() {
  cityid_ = 0;
}
inline ::google::protobuf::int32 ArrivedCity::cityid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ArrivedCity.cityId)
  return cityid_;
}
inline void ArrivedCity::set_cityid(::google::protobuf::int32 value) {
  
  cityid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ArrivedCity.cityId)
}

inline const ArrivedCity* ArrivedCity::internal_default_instance() {
  return &ArrivedCity_default_instance_.get();
}
// -------------------------------------------------------------------

// Formation

// repeated uint64 heroId = 1;
inline int Formation::heroid_size() const {
  return heroid_.size();
}
inline void Formation::clear_heroid() {
  heroid_.Clear();
}
inline ::google::protobuf::uint64 Formation::heroid(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.Formation.heroId)
  return heroid_.Get(index);
}
inline void Formation::set_heroid(int index, ::google::protobuf::uint64 value) {
  heroid_.Set(index, value);
  // @@protoc_insertion_point(field_set:NetMsg.Formation.heroId)
}
inline void Formation::add_heroid(::google::protobuf::uint64 value) {
  heroid_.Add(value);
  // @@protoc_insertion_point(field_add:NetMsg.Formation.heroId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Formation::heroid() const {
  // @@protoc_insertion_point(field_list:NetMsg.Formation.heroId)
  return heroid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Formation::mutable_heroid() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.Formation.heroId)
  return &heroid_;
}

inline const Formation* Formation::internal_default_instance() {
  return &Formation_default_instance_.get();
}
// -------------------------------------------------------------------

// HeroFormationAck

// repeated .NetMsg.Formation formation = 1;
inline int HeroFormationAck::formation_size() const {
  return formation_.size();
}
inline void HeroFormationAck::clear_formation() {
  formation_.Clear();
}
inline const ::NetMsg::Formation& HeroFormationAck::formation(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.HeroFormationAck.formation)
  return formation_.Get(index);
}
inline ::NetMsg::Formation* HeroFormationAck::mutable_formation(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.HeroFormationAck.formation)
  return formation_.Mutable(index);
}
inline ::NetMsg::Formation* HeroFormationAck::add_formation() {
  // @@protoc_insertion_point(field_add:NetMsg.HeroFormationAck.formation)
  return formation_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::Formation >*
HeroFormationAck::mutable_formation() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.HeroFormationAck.formation)
  return &formation_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::Formation >&
HeroFormationAck::formation() const {
  // @@protoc_insertion_point(field_list:NetMsg.HeroFormationAck.formation)
  return formation_;
}

// optional uint32 curFormation = 2;
inline void HeroFormationAck::clear_curformation() {
  curformation_ = 0u;
}
inline ::google::protobuf::uint32 HeroFormationAck::curformation() const {
  // @@protoc_insertion_point(field_get:NetMsg.HeroFormationAck.curFormation)
  return curformation_;
}
inline void HeroFormationAck::set_curformation(::google::protobuf::uint32 value) {
  
  curformation_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.HeroFormationAck.curFormation)
}

inline const HeroFormationAck* HeroFormationAck::internal_default_instance() {
  return &HeroFormationAck_default_instance_.get();
}
// -------------------------------------------------------------------

// SetHeroFormation

// optional .NetMsg.Formation formation = 1;
inline bool SetHeroFormation::has_formation() const {
  return this != internal_default_instance() && formation_ != NULL;
}
inline void SetHeroFormation::clear_formation() {
  if (GetArenaNoVirtual() == NULL && formation_ != NULL) delete formation_;
  formation_ = NULL;
}
inline const ::NetMsg::Formation& SetHeroFormation::formation() const {
  // @@protoc_insertion_point(field_get:NetMsg.SetHeroFormation.formation)
  return formation_ != NULL ? *formation_
                         : *::NetMsg::Formation::internal_default_instance();
}
inline ::NetMsg::Formation* SetHeroFormation::mutable_formation() {
  
  if (formation_ == NULL) {
    formation_ = new ::NetMsg::Formation;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.SetHeroFormation.formation)
  return formation_;
}
inline ::NetMsg::Formation* SetHeroFormation::release_formation() {
  // @@protoc_insertion_point(field_release:NetMsg.SetHeroFormation.formation)
  
  ::NetMsg::Formation* temp = formation_;
  formation_ = NULL;
  return temp;
}
inline void SetHeroFormation::set_allocated_formation(::NetMsg::Formation* formation) {
  delete formation_;
  formation_ = formation;
  if (formation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.SetHeroFormation.formation)
}

// optional uint32 pos = 2;
inline void SetHeroFormation::clear_pos() {
  pos_ = 0u;
}
inline ::google::protobuf::uint32 SetHeroFormation::pos() const {
  // @@protoc_insertion_point(field_get:NetMsg.SetHeroFormation.pos)
  return pos_;
}
inline void SetHeroFormation::set_pos(::google::protobuf::uint32 value) {
  
  pos_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.SetHeroFormation.pos)
}

inline const SetHeroFormation* SetHeroFormation::internal_default_instance() {
  return &SetHeroFormation_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqCityInfo

// optional uint32 cityId = 1;
inline void ReqCityInfo::clear_cityid() {
  cityid_ = 0u;
}
inline ::google::protobuf::uint32 ReqCityInfo::cityid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqCityInfo.cityId)
  return cityid_;
}
inline void ReqCityInfo::set_cityid(::google::protobuf::uint32 value) {
  
  cityid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqCityInfo.cityId)
}

inline const ReqCityInfo* ReqCityInfo::internal_default_instance() {
  return &ReqCityInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// CityItemInfo

// optional uint32 itemId = 1;
inline void CityItemInfo::clear_itemid() {
  itemid_ = 0u;
}
inline ::google::protobuf::uint32 CityItemInfo::itemid() const {
  // @@protoc_insertion_point(field_get:NetMsg.CityItemInfo.itemId)
  return itemid_;
}
inline void CityItemInfo::set_itemid(::google::protobuf::uint32 value) {
  
  itemid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CityItemInfo.itemId)
}

// optional uint32 itemNum = 2;
inline void CityItemInfo::clear_itemnum() {
  itemnum_ = 0u;
}
inline ::google::protobuf::uint32 CityItemInfo::itemnum() const {
  // @@protoc_insertion_point(field_get:NetMsg.CityItemInfo.itemNum)
  return itemnum_;
}
inline void CityItemInfo::set_itemnum(::google::protobuf::uint32 value) {
  
  itemnum_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CityItemInfo.itemNum)
}

inline const CityItemInfo* CityItemInfo::internal_default_instance() {
  return &CityItemInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// CityHeroInfo

// optional uint32 heroId = 1;
inline void CityHeroInfo::clear_heroid() {
  heroid_ = 0u;
}
inline ::google::protobuf::uint32 CityHeroInfo::heroid() const {
  // @@protoc_insertion_point(field_get:NetMsg.CityHeroInfo.heroId)
  return heroid_;
}
inline void CityHeroInfo::set_heroid(::google::protobuf::uint32 value) {
  
  heroid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CityHeroInfo.heroId)
}

// optional string heroName = 2;
inline void CityHeroInfo::clear_heroname() {
  heroname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CityHeroInfo::heroname() const {
  // @@protoc_insertion_point(field_get:NetMsg.CityHeroInfo.heroName)
  return heroname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CityHeroInfo::set_heroname(const ::std::string& value) {
  
  heroname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetMsg.CityHeroInfo.heroName)
}
inline void CityHeroInfo::set_heroname(const char* value) {
  
  heroname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetMsg.CityHeroInfo.heroName)
}
inline void CityHeroInfo::set_heroname(const char* value, size_t size) {
  
  heroname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetMsg.CityHeroInfo.heroName)
}
inline ::std::string* CityHeroInfo::mutable_heroname() {
  
  // @@protoc_insertion_point(field_mutable:NetMsg.CityHeroInfo.heroName)
  return heroname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CityHeroInfo::release_heroname() {
  // @@protoc_insertion_point(field_release:NetMsg.CityHeroInfo.heroName)
  
  return heroname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CityHeroInfo::set_allocated_heroname(::std::string* heroname) {
  if (heroname != NULL) {
    
  } else {
    
  }
  heroname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), heroname);
  // @@protoc_insertion_point(field_set_allocated:NetMsg.CityHeroInfo.heroName)
}

// optional uint32 heroLevel = 3;
inline void CityHeroInfo::clear_herolevel() {
  herolevel_ = 0u;
}
inline ::google::protobuf::uint32 CityHeroInfo::herolevel() const {
  // @@protoc_insertion_point(field_get:NetMsg.CityHeroInfo.heroLevel)
  return herolevel_;
}
inline void CityHeroInfo::set_herolevel(::google::protobuf::uint32 value) {
  
  herolevel_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CityHeroInfo.heroLevel)
}

inline const CityHeroInfo* CityHeroInfo::internal_default_instance() {
  return &CityHeroInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// CityInfoAck

// optional uint32 cityId = 1;
inline void CityInfoAck::clear_cityid() {
  cityid_ = 0u;
}
inline ::google::protobuf::uint32 CityInfoAck::cityid() const {
  // @@protoc_insertion_point(field_get:NetMsg.CityInfoAck.cityId)
  return cityid_;
}
inline void CityInfoAck::set_cityid(::google::protobuf::uint32 value) {
  
  cityid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CityInfoAck.cityId)
}

// optional uint32 governor = 2;
inline void CityInfoAck::clear_governor() {
  governor_ = 0u;
}
inline ::google::protobuf::uint32 CityInfoAck::governor() const {
  // @@protoc_insertion_point(field_get:NetMsg.CityInfoAck.governor)
  return governor_;
}
inline void CityInfoAck::set_governor(::google::protobuf::uint32 value) {
  
  governor_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CityInfoAck.governor)
}

// optional uint32 agriculture = 3;
inline void CityInfoAck::clear_agriculture() {
  agriculture_ = 0u;
}
inline ::google::protobuf::uint32 CityInfoAck::agriculture() const {
  // @@protoc_insertion_point(field_get:NetMsg.CityInfoAck.agriculture)
  return agriculture_;
}
inline void CityInfoAck::set_agriculture(::google::protobuf::uint32 value) {
  
  agriculture_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CityInfoAck.agriculture)
}

// optional uint32 business = 4;
inline void CityInfoAck::clear_business() {
  business_ = 0u;
}
inline ::google::protobuf::uint32 CityInfoAck::business() const {
  // @@protoc_insertion_point(field_get:NetMsg.CityInfoAck.business)
  return business_;
}
inline void CityInfoAck::set_business(::google::protobuf::uint32 value) {
  
  business_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CityInfoAck.business)
}

// optional uint32 military = 5;
inline void CityInfoAck::clear_military() {
  military_ = 0u;
}
inline ::google::protobuf::uint32 CityInfoAck::military() const {
  // @@protoc_insertion_point(field_get:NetMsg.CityInfoAck.military)
  return military_;
}
inline void CityInfoAck::set_military(::google::protobuf::uint32 value) {
  
  military_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CityInfoAck.military)
}

// optional uint32 force = 6;
inline void CityInfoAck::clear_force() {
  force_ = 0u;
}
inline ::google::protobuf::uint32 CityInfoAck::force() const {
  // @@protoc_insertion_point(field_get:NetMsg.CityInfoAck.force)
  return force_;
}
inline void CityInfoAck::set_force(::google::protobuf::uint32 value) {
  
  force_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CityInfoAck.force)
}

// repeated uint32 heroClass = 7;
inline int CityInfoAck::heroclass_size() const {
  return heroclass_.size();
}
inline void CityInfoAck::clear_heroclass() {
  heroclass_.Clear();
}
inline ::google::protobuf::uint32 CityInfoAck::heroclass(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.CityInfoAck.heroClass)
  return heroclass_.Get(index);
}
inline void CityInfoAck::set_heroclass(int index, ::google::protobuf::uint32 value) {
  heroclass_.Set(index, value);
  // @@protoc_insertion_point(field_set:NetMsg.CityInfoAck.heroClass)
}
inline void CityInfoAck::add_heroclass(::google::protobuf::uint32 value) {
  heroclass_.Add(value);
  // @@protoc_insertion_point(field_add:NetMsg.CityInfoAck.heroClass)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CityInfoAck::heroclass() const {
  // @@protoc_insertion_point(field_list:NetMsg.CityInfoAck.heroClass)
  return heroclass_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CityInfoAck::mutable_heroclass() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.CityInfoAck.heroClass)
  return &heroclass_;
}

// optional uint32 Money = 8;
inline void CityInfoAck::clear_money() {
  money_ = 0u;
}
inline ::google::protobuf::uint32 CityInfoAck::money() const {
  // @@protoc_insertion_point(field_get:NetMsg.CityInfoAck.Money)
  return money_;
}
inline void CityInfoAck::set_money(::google::protobuf::uint32 value) {
  
  money_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CityInfoAck.Money)
}

// optional uint32 Provisions = 9;
inline void CityInfoAck::clear_provisions() {
  provisions_ = 0u;
}
inline ::google::protobuf::uint32 CityInfoAck::provisions() const {
  // @@protoc_insertion_point(field_get:NetMsg.CityInfoAck.Provisions)
  return provisions_;
}
inline void CityInfoAck::set_provisions(::google::protobuf::uint32 value) {
  
  provisions_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CityInfoAck.Provisions)
}

// optional uint32 MoneyDelta = 10;
inline void CityInfoAck::clear_moneydelta() {
  moneydelta_ = 0u;
}
inline ::google::protobuf::uint32 CityInfoAck::moneydelta() const {
  // @@protoc_insertion_point(field_get:NetMsg.CityInfoAck.MoneyDelta)
  return moneydelta_;
}
inline void CityInfoAck::set_moneydelta(::google::protobuf::uint32 value) {
  
  moneydelta_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CityInfoAck.MoneyDelta)
}

// optional uint32 ProvisionsDelta = 11;
inline void CityInfoAck::clear_provisionsdelta() {
  provisionsdelta_ = 0u;
}
inline ::google::protobuf::uint32 CityInfoAck::provisionsdelta() const {
  // @@protoc_insertion_point(field_get:NetMsg.CityInfoAck.ProvisionsDelta)
  return provisionsdelta_;
}
inline void CityInfoAck::set_provisionsdelta(::google::protobuf::uint32 value) {
  
  provisionsdelta_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CityInfoAck.ProvisionsDelta)
}

// optional uint32 CultureDevelopment = 12;
inline void CityInfoAck::clear_culturedevelopment() {
  culturedevelopment_ = 0u;
}
inline ::google::protobuf::uint32 CityInfoAck::culturedevelopment() const {
  // @@protoc_insertion_point(field_get:NetMsg.CityInfoAck.CultureDevelopment)
  return culturedevelopment_;
}
inline void CityInfoAck::set_culturedevelopment(::google::protobuf::uint32 value) {
  
  culturedevelopment_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CityInfoAck.CultureDevelopment)
}

// optional uint32 Reserver = 13;
inline void CityInfoAck::clear_reserver() {
  reserver_ = 0u;
}
inline ::google::protobuf::uint32 CityInfoAck::reserver() const {
  // @@protoc_insertion_point(field_get:NetMsg.CityInfoAck.Reserver)
  return reserver_;
}
inline void CityInfoAck::set_reserver(::google::protobuf::uint32 value) {
  
  reserver_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CityInfoAck.Reserver)
}

// optional uint32 Infantry = 14;
inline void CityInfoAck::clear_infantry() {
  infantry_ = 0u;
}
inline ::google::protobuf::uint32 CityInfoAck::infantry() const {
  // @@protoc_insertion_point(field_get:NetMsg.CityInfoAck.Infantry)
  return infantry_;
}
inline void CityInfoAck::set_infantry(::google::protobuf::uint32 value) {
  
  infantry_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CityInfoAck.Infantry)
}

// optional uint32 Archer = 15;
inline void CityInfoAck::clear_archer() {
  archer_ = 0u;
}
inline ::google::protobuf::uint32 CityInfoAck::archer() const {
  // @@protoc_insertion_point(field_get:NetMsg.CityInfoAck.Archer)
  return archer_;
}
inline void CityInfoAck::set_archer(::google::protobuf::uint32 value) {
  
  archer_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CityInfoAck.Archer)
}

// optional uint32 Cavalry = 16;
inline void CityInfoAck::clear_cavalry() {
  cavalry_ = 0u;
}
inline ::google::protobuf::uint32 CityInfoAck::cavalry() const {
  // @@protoc_insertion_point(field_get:NetMsg.CityInfoAck.Cavalry)
  return cavalry_;
}
inline void CityInfoAck::set_cavalry(::google::protobuf::uint32 value) {
  
  cavalry_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CityInfoAck.Cavalry)
}

// optional uint32 SwordShield = 17;
inline void CityInfoAck::clear_swordshield() {
  swordshield_ = 0u;
}
inline ::google::protobuf::uint32 CityInfoAck::swordshield() const {
  // @@protoc_insertion_point(field_get:NetMsg.CityInfoAck.SwordShield)
  return swordshield_;
}
inline void CityInfoAck::set_swordshield(::google::protobuf::uint32 value) {
  
  swordshield_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CityInfoAck.SwordShield)
}

// optional uint32 CrossbowMan = 18;
inline void CityInfoAck::clear_crossbowman() {
  crossbowman_ = 0u;
}
inline ::google::protobuf::uint32 CityInfoAck::crossbowman() const {
  // @@protoc_insertion_point(field_get:NetMsg.CityInfoAck.CrossbowMan)
  return crossbowman_;
}
inline void CityInfoAck::set_crossbowman(::google::protobuf::uint32 value) {
  
  crossbowman_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CityInfoAck.CrossbowMan)
}

// optional uint32 Elephant = 19;
inline void CityInfoAck::clear_elephant() {
  elephant_ = 0u;
}
inline ::google::protobuf::uint32 CityInfoAck::elephant() const {
  // @@protoc_insertion_point(field_get:NetMsg.CityInfoAck.Elephant)
  return elephant_;
}
inline void CityInfoAck::set_elephant(::google::protobuf::uint32 value) {
  
  elephant_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CityInfoAck.Elephant)
}

// optional uint32 InfantryWounded = 20;
inline void CityInfoAck::clear_infantrywounded() {
  infantrywounded_ = 0u;
}
inline ::google::protobuf::uint32 CityInfoAck::infantrywounded() const {
  // @@protoc_insertion_point(field_get:NetMsg.CityInfoAck.InfantryWounded)
  return infantrywounded_;
}
inline void CityInfoAck::set_infantrywounded(::google::protobuf::uint32 value) {
  
  infantrywounded_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CityInfoAck.InfantryWounded)
}

// optional uint32 ArcherWounded = 21;
inline void CityInfoAck::clear_archerwounded() {
  archerwounded_ = 0u;
}
inline ::google::protobuf::uint32 CityInfoAck::archerwounded() const {
  // @@protoc_insertion_point(field_get:NetMsg.CityInfoAck.ArcherWounded)
  return archerwounded_;
}
inline void CityInfoAck::set_archerwounded(::google::protobuf::uint32 value) {
  
  archerwounded_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CityInfoAck.ArcherWounded)
}

// optional uint32 CavalryWounded = 22;
inline void CityInfoAck::clear_cavalrywounded() {
  cavalrywounded_ = 0u;
}
inline ::google::protobuf::uint32 CityInfoAck::cavalrywounded() const {
  // @@protoc_insertion_point(field_get:NetMsg.CityInfoAck.CavalryWounded)
  return cavalrywounded_;
}
inline void CityInfoAck::set_cavalrywounded(::google::protobuf::uint32 value) {
  
  cavalrywounded_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CityInfoAck.CavalryWounded)
}

// optional uint32 SwordShieldWounded = 23;
inline void CityInfoAck::clear_swordshieldwounded() {
  swordshieldwounded_ = 0u;
}
inline ::google::protobuf::uint32 CityInfoAck::swordshieldwounded() const {
  // @@protoc_insertion_point(field_get:NetMsg.CityInfoAck.SwordShieldWounded)
  return swordshieldwounded_;
}
inline void CityInfoAck::set_swordshieldwounded(::google::protobuf::uint32 value) {
  
  swordshieldwounded_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CityInfoAck.SwordShieldWounded)
}

// optional uint32 CrossbowManWounded = 24;
inline void CityInfoAck::clear_crossbowmanwounded() {
  crossbowmanwounded_ = 0u;
}
inline ::google::protobuf::uint32 CityInfoAck::crossbowmanwounded() const {
  // @@protoc_insertion_point(field_get:NetMsg.CityInfoAck.CrossbowManWounded)
  return crossbowmanwounded_;
}
inline void CityInfoAck::set_crossbowmanwounded(::google::protobuf::uint32 value) {
  
  crossbowmanwounded_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CityInfoAck.CrossbowManWounded)
}

// optional uint32 ElephantWounded = 25;
inline void CityInfoAck::clear_elephantwounded() {
  elephantwounded_ = 0u;
}
inline ::google::protobuf::uint32 CityInfoAck::elephantwounded() const {
  // @@protoc_insertion_point(field_get:NetMsg.CityInfoAck.ElephantWounded)
  return elephantwounded_;
}
inline void CityInfoAck::set_elephantwounded(::google::protobuf::uint32 value) {
  
  elephantwounded_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CityInfoAck.ElephantWounded)
}

// optional uint32 Population = 26;
inline void CityInfoAck::clear_population() {
  population_ = 0u;
}
inline ::google::protobuf::uint32 CityInfoAck::population() const {
  // @@protoc_insertion_point(field_get:NetMsg.CityInfoAck.Population)
  return population_;
}
inline void CityInfoAck::set_population(::google::protobuf::uint32 value) {
  
  population_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CityInfoAck.Population)
}

// optional uint32 PopulationSpeed = 27;
inline void CityInfoAck::clear_populationspeed() {
  populationspeed_ = 0u;
}
inline ::google::protobuf::uint32 CityInfoAck::populationspeed() const {
  // @@protoc_insertion_point(field_get:NetMsg.CityInfoAck.PopulationSpeed)
  return populationspeed_;
}
inline void CityInfoAck::set_populationspeed(::google::protobuf::uint32 value) {
  
  populationspeed_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CityInfoAck.PopulationSpeed)
}

// optional uint32 Loyalty = 28;
inline void CityInfoAck::clear_loyalty() {
  loyalty_ = 0u;
}
inline ::google::protobuf::uint32 CityInfoAck::loyalty() const {
  // @@protoc_insertion_point(field_get:NetMsg.CityInfoAck.Loyalty)
  return loyalty_;
}
inline void CityInfoAck::set_loyalty(::google::protobuf::uint32 value) {
  
  loyalty_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CityInfoAck.Loyalty)
}

// optional uint32 Durability = 29;
inline void CityInfoAck::clear_durability() {
  durability_ = 0u;
}
inline ::google::protobuf::uint32 CityInfoAck::durability() const {
  // @@protoc_insertion_point(field_get:NetMsg.CityInfoAck.Durability)
  return durability_;
}
inline void CityInfoAck::set_durability(::google::protobuf::uint32 value) {
  
  durability_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CityInfoAck.Durability)
}

// repeated .NetMsg.CityItemInfo itemInfo = 30;
inline int CityInfoAck::iteminfo_size() const {
  return iteminfo_.size();
}
inline void CityInfoAck::clear_iteminfo() {
  iteminfo_.Clear();
}
inline const ::NetMsg::CityItemInfo& CityInfoAck::iteminfo(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.CityInfoAck.itemInfo)
  return iteminfo_.Get(index);
}
inline ::NetMsg::CityItemInfo* CityInfoAck::mutable_iteminfo(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.CityInfoAck.itemInfo)
  return iteminfo_.Mutable(index);
}
inline ::NetMsg::CityItemInfo* CityInfoAck::add_iteminfo() {
  // @@protoc_insertion_point(field_add:NetMsg.CityInfoAck.itemInfo)
  return iteminfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::CityItemInfo >*
CityInfoAck::mutable_iteminfo() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.CityInfoAck.itemInfo)
  return &iteminfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::CityItemInfo >&
CityInfoAck::iteminfo() const {
  // @@protoc_insertion_point(field_list:NetMsg.CityInfoAck.itemInfo)
  return iteminfo_;
}

// repeated .NetMsg.CityHeroInfo heroInfo = 31;
inline int CityInfoAck::heroinfo_size() const {
  return heroinfo_.size();
}
inline void CityInfoAck::clear_heroinfo() {
  heroinfo_.Clear();
}
inline const ::NetMsg::CityHeroInfo& CityInfoAck::heroinfo(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.CityInfoAck.heroInfo)
  return heroinfo_.Get(index);
}
inline ::NetMsg::CityHeroInfo* CityInfoAck::mutable_heroinfo(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.CityInfoAck.heroInfo)
  return heroinfo_.Mutable(index);
}
inline ::NetMsg::CityHeroInfo* CityInfoAck::add_heroinfo() {
  // @@protoc_insertion_point(field_add:NetMsg.CityInfoAck.heroInfo)
  return heroinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::CityHeroInfo >*
CityInfoAck::mutable_heroinfo() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.CityInfoAck.heroInfo)
  return &heroinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::CityHeroInfo >&
CityInfoAck::heroinfo() const {
  // @@protoc_insertion_point(field_list:NetMsg.CityInfoAck.heroInfo)
  return heroinfo_;
}

inline const CityInfoAck* CityInfoAck::internal_default_instance() {
  return &CityInfoAck_default_instance_.get();
}
// -------------------------------------------------------------------

// AwardItem

// optional uint32 type = 1;
inline void AwardItem::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 AwardItem::type() const {
  // @@protoc_insertion_point(field_get:NetMsg.AwardItem.type)
  return type_;
}
inline void AwardItem::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.AwardItem.type)
}

// optional uint32 id = 2;
inline void AwardItem::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 AwardItem::id() const {
  // @@protoc_insertion_point(field_get:NetMsg.AwardItem.id)
  return id_;
}
inline void AwardItem::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.AwardItem.id)
}

// optional uint32 num = 3;
inline void AwardItem::clear_num() {
  num_ = 0u;
}
inline ::google::protobuf::uint32 AwardItem::num() const {
  // @@protoc_insertion_point(field_get:NetMsg.AwardItem.num)
  return num_;
}
inline void AwardItem::set_num(::google::protobuf::uint32 value) {
  
  num_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.AwardItem.num)
}

// repeated uint64 heroIds = 4;
inline int AwardItem::heroids_size() const {
  return heroids_.size();
}
inline void AwardItem::clear_heroids() {
  heroids_.Clear();
}
inline ::google::protobuf::uint64 AwardItem::heroids(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.AwardItem.heroIds)
  return heroids_.Get(index);
}
inline void AwardItem::set_heroids(int index, ::google::protobuf::uint64 value) {
  heroids_.Set(index, value);
  // @@protoc_insertion_point(field_set:NetMsg.AwardItem.heroIds)
}
inline void AwardItem::add_heroids(::google::protobuf::uint64 value) {
  heroids_.Add(value);
  // @@protoc_insertion_point(field_add:NetMsg.AwardItem.heroIds)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
AwardItem::heroids() const {
  // @@protoc_insertion_point(field_list:NetMsg.AwardItem.heroIds)
  return heroids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
AwardItem::mutable_heroids() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.AwardItem.heroIds)
  return &heroids_;
}

inline const AwardItem* AwardItem::internal_default_instance() {
  return &AwardItem_default_instance_.get();
}
// -------------------------------------------------------------------

// Award

// repeated .NetMsg.AwardItem items = 1;
inline int Award::items_size() const {
  return items_.size();
}
inline void Award::clear_items() {
  items_.Clear();
}
inline const ::NetMsg::AwardItem& Award::items(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.Award.items)
  return items_.Get(index);
}
inline ::NetMsg::AwardItem* Award::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.Award.items)
  return items_.Mutable(index);
}
inline ::NetMsg::AwardItem* Award::add_items() {
  // @@protoc_insertion_point(field_add:NetMsg.Award.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::AwardItem >*
Award::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.Award.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::AwardItem >&
Award::items() const {
  // @@protoc_insertion_point(field_list:NetMsg.Award.items)
  return items_;
}

// optional uint32 awardId = 2;
inline void Award::clear_awardid() {
  awardid_ = 0u;
}
inline ::google::protobuf::uint32 Award::awardid() const {
  // @@protoc_insertion_point(field_get:NetMsg.Award.awardId)
  return awardid_;
}
inline void Award::set_awardid(::google::protobuf::uint32 value) {
  
  awardid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.Award.awardId)
}

inline const Award* Award::internal_default_instance() {
  return &Award_default_instance_.get();
}
// -------------------------------------------------------------------

// QuestConsAgriculture

// optional uint32 title = 1;
inline void QuestConsAgriculture::clear_title() {
  title_ = 0u;
}
inline ::google::protobuf::uint32 QuestConsAgriculture::title() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestConsAgriculture.title)
  return title_;
}
inline void QuestConsAgriculture::set_title(::google::protobuf::uint32 value) {
  
  title_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.QuestConsAgriculture.title)
}

// optional uint32 cityId = 2;
inline void QuestConsAgriculture::clear_cityid() {
  cityid_ = 0u;
}
inline ::google::protobuf::uint32 QuestConsAgriculture::cityid() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestConsAgriculture.cityId)
  return cityid_;
}
inline void QuestConsAgriculture::set_cityid(::google::protobuf::uint32 value) {
  
  cityid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.QuestConsAgriculture.cityId)
}

// optional uint32 curTarget = 3;
inline void QuestConsAgriculture::clear_curtarget() {
  curtarget_ = 0u;
}
inline ::google::protobuf::uint32 QuestConsAgriculture::curtarget() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestConsAgriculture.curTarget)
  return curtarget_;
}
inline void QuestConsAgriculture::set_curtarget(::google::protobuf::uint32 value) {
  
  curtarget_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.QuestConsAgriculture.curTarget)
}

// optional uint32 target = 4;
inline void QuestConsAgriculture::clear_target() {
  target_ = 0u;
}
inline ::google::protobuf::uint32 QuestConsAgriculture::target() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestConsAgriculture.target)
  return target_;
}
inline void QuestConsAgriculture::set_target(::google::protobuf::uint32 value) {
  
  target_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.QuestConsAgriculture.target)
}

// optional uint32 place = 5;
inline void QuestConsAgriculture::clear_place() {
  place_ = 0u;
}
inline ::google::protobuf::uint32 QuestConsAgriculture::place() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestConsAgriculture.place)
  return place_;
}
inline void QuestConsAgriculture::set_place(::google::protobuf::uint32 value) {
  
  place_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.QuestConsAgriculture.place)
}

// optional .NetMsg.Award award = 6;
inline bool QuestConsAgriculture::has_award() const {
  return this != internal_default_instance() && award_ != NULL;
}
inline void QuestConsAgriculture::clear_award() {
  if (GetArenaNoVirtual() == NULL && award_ != NULL) delete award_;
  award_ = NULL;
}
inline const ::NetMsg::Award& QuestConsAgriculture::award() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestConsAgriculture.award)
  return award_ != NULL ? *award_
                         : *::NetMsg::Award::internal_default_instance();
}
inline ::NetMsg::Award* QuestConsAgriculture::mutable_award() {
  
  if (award_ == NULL) {
    award_ = new ::NetMsg::Award;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.QuestConsAgriculture.award)
  return award_;
}
inline ::NetMsg::Award* QuestConsAgriculture::release_award() {
  // @@protoc_insertion_point(field_release:NetMsg.QuestConsAgriculture.award)
  
  ::NetMsg::Award* temp = award_;
  award_ = NULL;
  return temp;
}
inline void QuestConsAgriculture::set_allocated_award(::NetMsg::Award* award) {
  delete award_;
  award_ = award;
  if (award) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.QuestConsAgriculture.award)
}

inline const QuestConsAgriculture* QuestConsAgriculture::internal_default_instance() {
  return &QuestConsAgriculture_default_instance_.get();
}
// -------------------------------------------------------------------

// QuestConsBusiness

// optional uint32 title = 1;
inline void QuestConsBusiness::clear_title() {
  title_ = 0u;
}
inline ::google::protobuf::uint32 QuestConsBusiness::title() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestConsBusiness.title)
  return title_;
}
inline void QuestConsBusiness::set_title(::google::protobuf::uint32 value) {
  
  title_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.QuestConsBusiness.title)
}

// optional uint32 cityId = 2;
inline void QuestConsBusiness::clear_cityid() {
  cityid_ = 0u;
}
inline ::google::protobuf::uint32 QuestConsBusiness::cityid() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestConsBusiness.cityId)
  return cityid_;
}
inline void QuestConsBusiness::set_cityid(::google::protobuf::uint32 value) {
  
  cityid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.QuestConsBusiness.cityId)
}

// optional uint32 curTarget = 3;
inline void QuestConsBusiness::clear_curtarget() {
  curtarget_ = 0u;
}
inline ::google::protobuf::uint32 QuestConsBusiness::curtarget() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestConsBusiness.curTarget)
  return curtarget_;
}
inline void QuestConsBusiness::set_curtarget(::google::protobuf::uint32 value) {
  
  curtarget_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.QuestConsBusiness.curTarget)
}

// optional uint32 target = 4;
inline void QuestConsBusiness::clear_target() {
  target_ = 0u;
}
inline ::google::protobuf::uint32 QuestConsBusiness::target() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestConsBusiness.target)
  return target_;
}
inline void QuestConsBusiness::set_target(::google::protobuf::uint32 value) {
  
  target_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.QuestConsBusiness.target)
}

// optional uint32 place = 5;
inline void QuestConsBusiness::clear_place() {
  place_ = 0u;
}
inline ::google::protobuf::uint32 QuestConsBusiness::place() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestConsBusiness.place)
  return place_;
}
inline void QuestConsBusiness::set_place(::google::protobuf::uint32 value) {
  
  place_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.QuestConsBusiness.place)
}

// optional .NetMsg.Award award = 6;
inline bool QuestConsBusiness::has_award() const {
  return this != internal_default_instance() && award_ != NULL;
}
inline void QuestConsBusiness::clear_award() {
  if (GetArenaNoVirtual() == NULL && award_ != NULL) delete award_;
  award_ = NULL;
}
inline const ::NetMsg::Award& QuestConsBusiness::award() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestConsBusiness.award)
  return award_ != NULL ? *award_
                         : *::NetMsg::Award::internal_default_instance();
}
inline ::NetMsg::Award* QuestConsBusiness::mutable_award() {
  
  if (award_ == NULL) {
    award_ = new ::NetMsg::Award;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.QuestConsBusiness.award)
  return award_;
}
inline ::NetMsg::Award* QuestConsBusiness::release_award() {
  // @@protoc_insertion_point(field_release:NetMsg.QuestConsBusiness.award)
  
  ::NetMsg::Award* temp = award_;
  award_ = NULL;
  return temp;
}
inline void QuestConsBusiness::set_allocated_award(::NetMsg::Award* award) {
  delete award_;
  award_ = award;
  if (award) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.QuestConsBusiness.award)
}

inline const QuestConsBusiness* QuestConsBusiness::internal_default_instance() {
  return &QuestConsBusiness_default_instance_.get();
}
// -------------------------------------------------------------------

// QuestConsMilitary

// optional uint32 title = 1;
inline void QuestConsMilitary::clear_title() {
  title_ = 0u;
}
inline ::google::protobuf::uint32 QuestConsMilitary::title() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestConsMilitary.title)
  return title_;
}
inline void QuestConsMilitary::set_title(::google::protobuf::uint32 value) {
  
  title_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.QuestConsMilitary.title)
}

// optional uint32 cityId = 2;
inline void QuestConsMilitary::clear_cityid() {
  cityid_ = 0u;
}
inline ::google::protobuf::uint32 QuestConsMilitary::cityid() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestConsMilitary.cityId)
  return cityid_;
}
inline void QuestConsMilitary::set_cityid(::google::protobuf::uint32 value) {
  
  cityid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.QuestConsMilitary.cityId)
}

// optional uint32 curTarget = 3;
inline void QuestConsMilitary::clear_curtarget() {
  curtarget_ = 0u;
}
inline ::google::protobuf::uint32 QuestConsMilitary::curtarget() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestConsMilitary.curTarget)
  return curtarget_;
}
inline void QuestConsMilitary::set_curtarget(::google::protobuf::uint32 value) {
  
  curtarget_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.QuestConsMilitary.curTarget)
}

// optional uint32 target = 4;
inline void QuestConsMilitary::clear_target() {
  target_ = 0u;
}
inline ::google::protobuf::uint32 QuestConsMilitary::target() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestConsMilitary.target)
  return target_;
}
inline void QuestConsMilitary::set_target(::google::protobuf::uint32 value) {
  
  target_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.QuestConsMilitary.target)
}

// optional uint32 place = 5;
inline void QuestConsMilitary::clear_place() {
  place_ = 0u;
}
inline ::google::protobuf::uint32 QuestConsMilitary::place() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestConsMilitary.place)
  return place_;
}
inline void QuestConsMilitary::set_place(::google::protobuf::uint32 value) {
  
  place_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.QuestConsMilitary.place)
}

// optional .NetMsg.Award award = 6;
inline bool QuestConsMilitary::has_award() const {
  return this != internal_default_instance() && award_ != NULL;
}
inline void QuestConsMilitary::clear_award() {
  if (GetArenaNoVirtual() == NULL && award_ != NULL) delete award_;
  award_ = NULL;
}
inline const ::NetMsg::Award& QuestConsMilitary::award() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestConsMilitary.award)
  return award_ != NULL ? *award_
                         : *::NetMsg::Award::internal_default_instance();
}
inline ::NetMsg::Award* QuestConsMilitary::mutable_award() {
  
  if (award_ == NULL) {
    award_ = new ::NetMsg::Award;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.QuestConsMilitary.award)
  return award_;
}
inline ::NetMsg::Award* QuestConsMilitary::release_award() {
  // @@protoc_insertion_point(field_release:NetMsg.QuestConsMilitary.award)
  
  ::NetMsg::Award* temp = award_;
  award_ = NULL;
  return temp;
}
inline void QuestConsMilitary::set_allocated_award(::NetMsg::Award* award) {
  delete award_;
  award_ = award;
  if (award) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.QuestConsMilitary.award)
}

inline const QuestConsMilitary* QuestConsMilitary::internal_default_instance() {
  return &QuestConsMilitary_default_instance_.get();
}
// -------------------------------------------------------------------

// QuestBattle

// optional uint32 enemyPath = 1;
inline void QuestBattle::clear_enemypath() {
  enemypath_ = 0u;
}
inline ::google::protobuf::uint32 QuestBattle::enemypath() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestBattle.enemyPath)
  return enemypath_;
}
inline void QuestBattle::set_enemypath(::google::protobuf::uint32 value) {
  
  enemypath_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.QuestBattle.enemyPath)
}

// optional float percent = 2;
inline void QuestBattle::clear_percent() {
  percent_ = 0;
}
inline float QuestBattle::percent() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestBattle.percent)
  return percent_;
}
inline void QuestBattle::set_percent(float value) {
  
  percent_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.QuestBattle.percent)
}

// optional uint64 battleId = 3;
inline void QuestBattle::clear_battleid() {
  battleid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 QuestBattle::battleid() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestBattle.battleId)
  return battleid_;
}
inline void QuestBattle::set_battleid(::google::protobuf::uint64 value) {
  
  battleid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.QuestBattle.battleId)
}

// optional uint32 enemyTeam = 4;
inline void QuestBattle::clear_enemyteam() {
  enemyteam_ = 0u;
}
inline ::google::protobuf::uint32 QuestBattle::enemyteam() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestBattle.enemyTeam)
  return enemyteam_;
}
inline void QuestBattle::set_enemyteam(::google::protobuf::uint32 value) {
  
  enemyteam_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.QuestBattle.enemyTeam)
}

// optional uint32 leftTime = 5;
inline void QuestBattle::clear_lefttime() {
  lefttime_ = 0u;
}
inline ::google::protobuf::uint32 QuestBattle::lefttime() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestBattle.leftTime)
  return lefttime_;
}
inline void QuestBattle::set_lefttime(::google::protobuf::uint32 value) {
  
  lefttime_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.QuestBattle.leftTime)
}

// optional .NetMsg.Award award = 6;
inline bool QuestBattle::has_award() const {
  return this != internal_default_instance() && award_ != NULL;
}
inline void QuestBattle::clear_award() {
  if (GetArenaNoVirtual() == NULL && award_ != NULL) delete award_;
  award_ = NULL;
}
inline const ::NetMsg::Award& QuestBattle::award() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestBattle.award)
  return award_ != NULL ? *award_
                         : *::NetMsg::Award::internal_default_instance();
}
inline ::NetMsg::Award* QuestBattle::mutable_award() {
  
  if (award_ == NULL) {
    award_ = new ::NetMsg::Award;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.QuestBattle.award)
  return award_;
}
inline ::NetMsg::Award* QuestBattle::release_award() {
  // @@protoc_insertion_point(field_release:NetMsg.QuestBattle.award)
  
  ::NetMsg::Award* temp = award_;
  award_ = NULL;
  return temp;
}
inline void QuestBattle::set_allocated_award(::NetMsg::Award* award) {
  delete award_;
  award_ = award;
  if (award) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.QuestBattle.award)
}

inline const QuestBattle* QuestBattle::internal_default_instance() {
  return &QuestBattle_default_instance_.get();
}
// -------------------------------------------------------------------

// QuestVisit

// optional uint32 heroClass = 1;
inline void QuestVisit::clear_heroclass() {
  heroclass_ = 0u;
}
inline ::google::protobuf::uint32 QuestVisit::heroclass() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestVisit.heroClass)
  return heroclass_;
}
inline void QuestVisit::set_heroclass(::google::protobuf::uint32 value) {
  
  heroclass_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.QuestVisit.heroClass)
}

// optional uint32 city = 2;
inline void QuestVisit::clear_city() {
  city_ = 0u;
}
inline ::google::protobuf::uint32 QuestVisit::city() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestVisit.city)
  return city_;
}
inline void QuestVisit::set_city(::google::protobuf::uint32 value) {
  
  city_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.QuestVisit.city)
}

// optional uint32 place = 3;
inline void QuestVisit::clear_place() {
  place_ = 0u;
}
inline ::google::protobuf::uint32 QuestVisit::place() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestVisit.place)
  return place_;
}
inline void QuestVisit::set_place(::google::protobuf::uint32 value) {
  
  place_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.QuestVisit.place)
}

// optional .NetMsg.Award award = 4;
inline bool QuestVisit::has_award() const {
  return this != internal_default_instance() && award_ != NULL;
}
inline void QuestVisit::clear_award() {
  if (GetArenaNoVirtual() == NULL && award_ != NULL) delete award_;
  award_ = NULL;
}
inline const ::NetMsg::Award& QuestVisit::award() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestVisit.award)
  return award_ != NULL ? *award_
                         : *::NetMsg::Award::internal_default_instance();
}
inline ::NetMsg::Award* QuestVisit::mutable_award() {
  
  if (award_ == NULL) {
    award_ = new ::NetMsg::Award;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.QuestVisit.award)
  return award_;
}
inline ::NetMsg::Award* QuestVisit::release_award() {
  // @@protoc_insertion_point(field_release:NetMsg.QuestVisit.award)
  
  ::NetMsg::Award* temp = award_;
  award_ = NULL;
  return temp;
}
inline void QuestVisit::set_allocated_award(::NetMsg::Award* award) {
  delete award_;
  award_ = award;
  if (award) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.QuestVisit.award)
}

inline const QuestVisit* QuestVisit::internal_default_instance() {
  return &QuestVisit_default_instance_.get();
}
// -------------------------------------------------------------------

// QuestConscription

// optional uint32 title = 1;
inline void QuestConscription::clear_title() {
  title_ = 0u;
}
inline ::google::protobuf::uint32 QuestConscription::title() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestConscription.title)
  return title_;
}
inline void QuestConscription::set_title(::google::protobuf::uint32 value) {
  
  title_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.QuestConscription.title)
}

// optional uint32 cityId = 2;
inline void QuestConscription::clear_cityid() {
  cityid_ = 0u;
}
inline ::google::protobuf::uint32 QuestConscription::cityid() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestConscription.cityId)
  return cityid_;
}
inline void QuestConscription::set_cityid(::google::protobuf::uint32 value) {
  
  cityid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.QuestConscription.cityId)
}

// optional uint32 curTarget = 3;
inline void QuestConscription::clear_curtarget() {
  curtarget_ = 0u;
}
inline ::google::protobuf::uint32 QuestConscription::curtarget() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestConscription.curTarget)
  return curtarget_;
}
inline void QuestConscription::set_curtarget(::google::protobuf::uint32 value) {
  
  curtarget_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.QuestConscription.curTarget)
}

// optional uint32 target = 4;
inline void QuestConscription::clear_target() {
  target_ = 0u;
}
inline ::google::protobuf::uint32 QuestConscription::target() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestConscription.target)
  return target_;
}
inline void QuestConscription::set_target(::google::protobuf::uint32 value) {
  
  target_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.QuestConscription.target)
}

// optional uint32 place = 5;
inline void QuestConscription::clear_place() {
  place_ = 0u;
}
inline ::google::protobuf::uint32 QuestConscription::place() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestConscription.place)
  return place_;
}
inline void QuestConscription::set_place(::google::protobuf::uint32 value) {
  
  place_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.QuestConscription.place)
}

// optional .NetMsg.Award award = 6;
inline bool QuestConscription::has_award() const {
  return this != internal_default_instance() && award_ != NULL;
}
inline void QuestConscription::clear_award() {
  if (GetArenaNoVirtual() == NULL && award_ != NULL) delete award_;
  award_ = NULL;
}
inline const ::NetMsg::Award& QuestConscription::award() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestConscription.award)
  return award_ != NULL ? *award_
                         : *::NetMsg::Award::internal_default_instance();
}
inline ::NetMsg::Award* QuestConscription::mutable_award() {
  
  if (award_ == NULL) {
    award_ = new ::NetMsg::Award;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.QuestConscription.award)
  return award_;
}
inline ::NetMsg::Award* QuestConscription::release_award() {
  // @@protoc_insertion_point(field_release:NetMsg.QuestConscription.award)
  
  ::NetMsg::Award* temp = award_;
  award_ = NULL;
  return temp;
}
inline void QuestConscription::set_allocated_award(::NetMsg::Award* award) {
  delete award_;
  award_ = award;
  if (award) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.QuestConscription.award)
}

inline const QuestConscription* QuestConscription::internal_default_instance() {
  return &QuestConscription_default_instance_.get();
}
// -------------------------------------------------------------------

// QuestDiscovery

// optional uint32 title = 1;
inline void QuestDiscovery::clear_title() {
  title_ = 0u;
}
inline ::google::protobuf::uint32 QuestDiscovery::title() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestDiscovery.title)
  return title_;
}
inline void QuestDiscovery::set_title(::google::protobuf::uint32 value) {
  
  title_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.QuestDiscovery.title)
}

// optional uint32 city = 2;
inline void QuestDiscovery::clear_city() {
  city_ = 0u;
}
inline ::google::protobuf::uint32 QuestDiscovery::city() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestDiscovery.city)
  return city_;
}
inline void QuestDiscovery::set_city(::google::protobuf::uint32 value) {
  
  city_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.QuestDiscovery.city)
}

// optional uint32 place = 3;
inline void QuestDiscovery::clear_place() {
  place_ = 0u;
}
inline ::google::protobuf::uint32 QuestDiscovery::place() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestDiscovery.place)
  return place_;
}
inline void QuestDiscovery::set_place(::google::protobuf::uint32 value) {
  
  place_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.QuestDiscovery.place)
}

// optional uint32 enemyPath = 4;
inline void QuestDiscovery::clear_enemypath() {
  enemypath_ = 0u;
}
inline ::google::protobuf::uint32 QuestDiscovery::enemypath() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestDiscovery.enemyPath)
  return enemypath_;
}
inline void QuestDiscovery::set_enemypath(::google::protobuf::uint32 value) {
  
  enemypath_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.QuestDiscovery.enemyPath)
}

// optional float percent = 5;
inline void QuestDiscovery::clear_percent() {
  percent_ = 0;
}
inline float QuestDiscovery::percent() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestDiscovery.percent)
  return percent_;
}
inline void QuestDiscovery::set_percent(float value) {
  
  percent_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.QuestDiscovery.percent)
}

// optional .NetMsg.QuestDiscoveryFinishedType type = 6;
inline void QuestDiscovery::clear_type() {
  type_ = 0;
}
inline ::NetMsg::QuestDiscoveryFinishedType QuestDiscovery::type() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestDiscovery.type)
  return static_cast< ::NetMsg::QuestDiscoveryFinishedType >(type_);
}
inline void QuestDiscovery::set_type(::NetMsg::QuestDiscoveryFinishedType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.QuestDiscovery.type)
}

// optional uint32 item = 7;
inline void QuestDiscovery::clear_item() {
  item_ = 0u;
}
inline ::google::protobuf::uint32 QuestDiscovery::item() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestDiscovery.item)
  return item_;
}
inline void QuestDiscovery::set_item(::google::protobuf::uint32 value) {
  
  item_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.QuestDiscovery.item)
}

// optional uint32 hero = 8;
inline void QuestDiscovery::clear_hero() {
  hero_ = 0u;
}
inline ::google::protobuf::uint32 QuestDiscovery::hero() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestDiscovery.hero)
  return hero_;
}
inline void QuestDiscovery::set_hero(::google::protobuf::uint32 value) {
  
  hero_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.QuestDiscovery.hero)
}

// optional string name = 9;
inline void QuestDiscovery::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QuestDiscovery::name() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestDiscovery.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuestDiscovery::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetMsg.QuestDiscovery.name)
}
inline void QuestDiscovery::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetMsg.QuestDiscovery.name)
}
inline void QuestDiscovery::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetMsg.QuestDiscovery.name)
}
inline ::std::string* QuestDiscovery::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:NetMsg.QuestDiscovery.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QuestDiscovery::release_name() {
  // @@protoc_insertion_point(field_release:NetMsg.QuestDiscovery.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuestDiscovery::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:NetMsg.QuestDiscovery.name)
}

// optional uint32 level = 10;
inline void QuestDiscovery::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 QuestDiscovery::level() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestDiscovery.level)
  return level_;
}
inline void QuestDiscovery::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.QuestDiscovery.level)
}

// optional uint32 starLevel = 11;
inline void QuestDiscovery::clear_starlevel() {
  starlevel_ = 0u;
}
inline ::google::protobuf::uint32 QuestDiscovery::starlevel() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestDiscovery.starLevel)
  return starlevel_;
}
inline void QuestDiscovery::set_starlevel(::google::protobuf::uint32 value) {
  
  starlevel_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.QuestDiscovery.starLevel)
}

// optional .NetMsg.Award award = 12;
inline bool QuestDiscovery::has_award() const {
  return this != internal_default_instance() && award_ != NULL;
}
inline void QuestDiscovery::clear_award() {
  if (GetArenaNoVirtual() == NULL && award_ != NULL) delete award_;
  award_ = NULL;
}
inline const ::NetMsg::Award& QuestDiscovery::award() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestDiscovery.award)
  return award_ != NULL ? *award_
                         : *::NetMsg::Award::internal_default_instance();
}
inline ::NetMsg::Award* QuestDiscovery::mutable_award() {
  
  if (award_ == NULL) {
    award_ = new ::NetMsg::Award;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.QuestDiscovery.award)
  return award_;
}
inline ::NetMsg::Award* QuestDiscovery::release_award() {
  // @@protoc_insertion_point(field_release:NetMsg.QuestDiscovery.award)
  
  ::NetMsg::Award* temp = award_;
  award_ = NULL;
  return temp;
}
inline void QuestDiscovery::set_allocated_award(::NetMsg::Award* award) {
  delete award_;
  award_ = award;
  if (award) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.QuestDiscovery.award)
}

inline const QuestDiscovery* QuestDiscovery::internal_default_instance() {
  return &QuestDiscovery_default_instance_.get();
}
// -------------------------------------------------------------------

// QuestListAck

// repeated uint64 questList = 1;
inline int QuestListAck::questlist_size() const {
  return questlist_.size();
}
inline void QuestListAck::clear_questlist() {
  questlist_.Clear();
}
inline ::google::protobuf::uint64 QuestListAck::questlist(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestListAck.questList)
  return questlist_.Get(index);
}
inline void QuestListAck::set_questlist(int index, ::google::protobuf::uint64 value) {
  questlist_.Set(index, value);
  // @@protoc_insertion_point(field_set:NetMsg.QuestListAck.questList)
}
inline void QuestListAck::add_questlist(::google::protobuf::uint64 value) {
  questlist_.Add(value);
  // @@protoc_insertion_point(field_add:NetMsg.QuestListAck.questList)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
QuestListAck::questlist() const {
  // @@protoc_insertion_point(field_list:NetMsg.QuestListAck.questList)
  return questlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
QuestListAck::mutable_questlist() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.QuestListAck.questList)
  return &questlist_;
}

inline const QuestListAck* QuestListAck::internal_default_instance() {
  return &QuestListAck_default_instance_.get();
}
// -------------------------------------------------------------------

// QuestData

// optional .NetMsg.QuestConsAgriculture agriculture = 1;
inline bool QuestData::has_agriculture() const {
  return info_case() == kAgriculture;
}
inline void QuestData::set_has_agriculture() {
  _oneof_case_[0] = kAgriculture;
}
inline void QuestData::clear_agriculture() {
  if (has_agriculture()) {
    delete info_.agriculture_;
    clear_has_info();
  }
}
inline  const ::NetMsg::QuestConsAgriculture& QuestData::agriculture() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestData.agriculture)
  return has_agriculture()
      ? *info_.agriculture_
      : ::NetMsg::QuestConsAgriculture::default_instance();
}
inline ::NetMsg::QuestConsAgriculture* QuestData::mutable_agriculture() {
  if (!has_agriculture()) {
    clear_info();
    set_has_agriculture();
    info_.agriculture_ = new ::NetMsg::QuestConsAgriculture;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.QuestData.agriculture)
  return info_.agriculture_;
}
inline ::NetMsg::QuestConsAgriculture* QuestData::release_agriculture() {
  // @@protoc_insertion_point(field_release:NetMsg.QuestData.agriculture)
  if (has_agriculture()) {
    clear_has_info();
    ::NetMsg::QuestConsAgriculture* temp = info_.agriculture_;
    info_.agriculture_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void QuestData::set_allocated_agriculture(::NetMsg::QuestConsAgriculture* agriculture) {
  clear_info();
  if (agriculture) {
    set_has_agriculture();
    info_.agriculture_ = agriculture;
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.QuestData.agriculture)
}

// optional .NetMsg.QuestConsBusiness business = 2;
inline bool QuestData::has_business() const {
  return info_case() == kBusiness;
}
inline void QuestData::set_has_business() {
  _oneof_case_[0] = kBusiness;
}
inline void QuestData::clear_business() {
  if (has_business()) {
    delete info_.business_;
    clear_has_info();
  }
}
inline  const ::NetMsg::QuestConsBusiness& QuestData::business() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestData.business)
  return has_business()
      ? *info_.business_
      : ::NetMsg::QuestConsBusiness::default_instance();
}
inline ::NetMsg::QuestConsBusiness* QuestData::mutable_business() {
  if (!has_business()) {
    clear_info();
    set_has_business();
    info_.business_ = new ::NetMsg::QuestConsBusiness;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.QuestData.business)
  return info_.business_;
}
inline ::NetMsg::QuestConsBusiness* QuestData::release_business() {
  // @@protoc_insertion_point(field_release:NetMsg.QuestData.business)
  if (has_business()) {
    clear_has_info();
    ::NetMsg::QuestConsBusiness* temp = info_.business_;
    info_.business_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void QuestData::set_allocated_business(::NetMsg::QuestConsBusiness* business) {
  clear_info();
  if (business) {
    set_has_business();
    info_.business_ = business;
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.QuestData.business)
}

// optional .NetMsg.QuestConsMilitary consMill = 3;
inline bool QuestData::has_consmill() const {
  return info_case() == kConsMill;
}
inline void QuestData::set_has_consmill() {
  _oneof_case_[0] = kConsMill;
}
inline void QuestData::clear_consmill() {
  if (has_consmill()) {
    delete info_.consmill_;
    clear_has_info();
  }
}
inline  const ::NetMsg::QuestConsMilitary& QuestData::consmill() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestData.consMill)
  return has_consmill()
      ? *info_.consmill_
      : ::NetMsg::QuestConsMilitary::default_instance();
}
inline ::NetMsg::QuestConsMilitary* QuestData::mutable_consmill() {
  if (!has_consmill()) {
    clear_info();
    set_has_consmill();
    info_.consmill_ = new ::NetMsg::QuestConsMilitary;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.QuestData.consMill)
  return info_.consmill_;
}
inline ::NetMsg::QuestConsMilitary* QuestData::release_consmill() {
  // @@protoc_insertion_point(field_release:NetMsg.QuestData.consMill)
  if (has_consmill()) {
    clear_has_info();
    ::NetMsg::QuestConsMilitary* temp = info_.consmill_;
    info_.consmill_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void QuestData::set_allocated_consmill(::NetMsg::QuestConsMilitary* consmill) {
  clear_info();
  if (consmill) {
    set_has_consmill();
    info_.consmill_ = consmill;
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.QuestData.consMill)
}

// optional .NetMsg.QuestBattle battle = 4;
inline bool QuestData::has_battle() const {
  return info_case() == kBattle;
}
inline void QuestData::set_has_battle() {
  _oneof_case_[0] = kBattle;
}
inline void QuestData::clear_battle() {
  if (has_battle()) {
    delete info_.battle_;
    clear_has_info();
  }
}
inline  const ::NetMsg::QuestBattle& QuestData::battle() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestData.battle)
  return has_battle()
      ? *info_.battle_
      : ::NetMsg::QuestBattle::default_instance();
}
inline ::NetMsg::QuestBattle* QuestData::mutable_battle() {
  if (!has_battle()) {
    clear_info();
    set_has_battle();
    info_.battle_ = new ::NetMsg::QuestBattle;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.QuestData.battle)
  return info_.battle_;
}
inline ::NetMsg::QuestBattle* QuestData::release_battle() {
  // @@protoc_insertion_point(field_release:NetMsg.QuestData.battle)
  if (has_battle()) {
    clear_has_info();
    ::NetMsg::QuestBattle* temp = info_.battle_;
    info_.battle_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void QuestData::set_allocated_battle(::NetMsg::QuestBattle* battle) {
  clear_info();
  if (battle) {
    set_has_battle();
    info_.battle_ = battle;
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.QuestData.battle)
}

// optional .NetMsg.QuestVisit visit = 5;
inline bool QuestData::has_visit() const {
  return info_case() == kVisit;
}
inline void QuestData::set_has_visit() {
  _oneof_case_[0] = kVisit;
}
inline void QuestData::clear_visit() {
  if (has_visit()) {
    delete info_.visit_;
    clear_has_info();
  }
}
inline  const ::NetMsg::QuestVisit& QuestData::visit() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestData.visit)
  return has_visit()
      ? *info_.visit_
      : ::NetMsg::QuestVisit::default_instance();
}
inline ::NetMsg::QuestVisit* QuestData::mutable_visit() {
  if (!has_visit()) {
    clear_info();
    set_has_visit();
    info_.visit_ = new ::NetMsg::QuestVisit;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.QuestData.visit)
  return info_.visit_;
}
inline ::NetMsg::QuestVisit* QuestData::release_visit() {
  // @@protoc_insertion_point(field_release:NetMsg.QuestData.visit)
  if (has_visit()) {
    clear_has_info();
    ::NetMsg::QuestVisit* temp = info_.visit_;
    info_.visit_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void QuestData::set_allocated_visit(::NetMsg::QuestVisit* visit) {
  clear_info();
  if (visit) {
    set_has_visit();
    info_.visit_ = visit;
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.QuestData.visit)
}

// optional .NetMsg.QuestConscription conscription = 6;
inline bool QuestData::has_conscription() const {
  return info_case() == kConscription;
}
inline void QuestData::set_has_conscription() {
  _oneof_case_[0] = kConscription;
}
inline void QuestData::clear_conscription() {
  if (has_conscription()) {
    delete info_.conscription_;
    clear_has_info();
  }
}
inline  const ::NetMsg::QuestConscription& QuestData::conscription() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestData.conscription)
  return has_conscription()
      ? *info_.conscription_
      : ::NetMsg::QuestConscription::default_instance();
}
inline ::NetMsg::QuestConscription* QuestData::mutable_conscription() {
  if (!has_conscription()) {
    clear_info();
    set_has_conscription();
    info_.conscription_ = new ::NetMsg::QuestConscription;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.QuestData.conscription)
  return info_.conscription_;
}
inline ::NetMsg::QuestConscription* QuestData::release_conscription() {
  // @@protoc_insertion_point(field_release:NetMsg.QuestData.conscription)
  if (has_conscription()) {
    clear_has_info();
    ::NetMsg::QuestConscription* temp = info_.conscription_;
    info_.conscription_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void QuestData::set_allocated_conscription(::NetMsg::QuestConscription* conscription) {
  clear_info();
  if (conscription) {
    set_has_conscription();
    info_.conscription_ = conscription;
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.QuestData.conscription)
}

// optional .NetMsg.QuestDiscovery discovery = 7;
inline bool QuestData::has_discovery() const {
  return info_case() == kDiscovery;
}
inline void QuestData::set_has_discovery() {
  _oneof_case_[0] = kDiscovery;
}
inline void QuestData::clear_discovery() {
  if (has_discovery()) {
    delete info_.discovery_;
    clear_has_info();
  }
}
inline  const ::NetMsg::QuestDiscovery& QuestData::discovery() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestData.discovery)
  return has_discovery()
      ? *info_.discovery_
      : ::NetMsg::QuestDiscovery::default_instance();
}
inline ::NetMsg::QuestDiscovery* QuestData::mutable_discovery() {
  if (!has_discovery()) {
    clear_info();
    set_has_discovery();
    info_.discovery_ = new ::NetMsg::QuestDiscovery;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.QuestData.discovery)
  return info_.discovery_;
}
inline ::NetMsg::QuestDiscovery* QuestData::release_discovery() {
  // @@protoc_insertion_point(field_release:NetMsg.QuestData.discovery)
  if (has_discovery()) {
    clear_has_info();
    ::NetMsg::QuestDiscovery* temp = info_.discovery_;
    info_.discovery_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void QuestData::set_allocated_discovery(::NetMsg::QuestDiscovery* discovery) {
  clear_info();
  if (discovery) {
    set_has_discovery();
    info_.discovery_ = discovery;
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.QuestData.discovery)
}

// optional uint32 dialog = 30;
inline void QuestData::clear_dialog() {
  dialog_ = 0u;
}
inline ::google::protobuf::uint32 QuestData::dialog() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestData.dialog)
  return dialog_;
}
inline void QuestData::set_dialog(::google::protobuf::uint32 value) {
  
  dialog_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.QuestData.dialog)
}

inline bool QuestData::has_info() const {
  return info_case() != INFO_NOT_SET;
}
inline void QuestData::clear_has_info() {
  _oneof_case_[0] = INFO_NOT_SET;
}
inline QuestData::InfoCase QuestData::info_case() const {
  return QuestData::InfoCase(_oneof_case_[0]);
}
inline const QuestData* QuestData::internal_default_instance() {
  return &QuestData_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqQuestInfo

// optional uint64 uid = 1;
inline void ReqQuestInfo::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ReqQuestInfo::uid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqQuestInfo.uid)
  return uid_;
}
inline void ReqQuestInfo::set_uid(::google::protobuf::uint64 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqQuestInfo.uid)
}

inline const ReqQuestInfo* ReqQuestInfo::internal_default_instance() {
  return &ReqQuestInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// QuestInfoAck

// optional uint64 uid = 1;
inline void QuestInfoAck::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 QuestInfoAck::uid() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestInfoAck.uid)
  return uid_;
}
inline void QuestInfoAck::set_uid(::google::protobuf::uint64 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.QuestInfoAck.uid)
}

// optional .NetMsg.QuestType type = 2;
inline void QuestInfoAck::clear_type() {
  type_ = 0;
}
inline ::NetMsg::QuestType QuestInfoAck::type() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestInfoAck.type)
  return static_cast< ::NetMsg::QuestType >(type_);
}
inline void QuestInfoAck::set_type(::NetMsg::QuestType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.QuestInfoAck.type)
}

// optional .NetMsg.QuestData data = 3;
inline bool QuestInfoAck::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
inline void QuestInfoAck::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}
inline const ::NetMsg::QuestData& QuestInfoAck::data() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestInfoAck.data)
  return data_ != NULL ? *data_
                         : *::NetMsg::QuestData::internal_default_instance();
}
inline ::NetMsg::QuestData* QuestInfoAck::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::NetMsg::QuestData;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.QuestInfoAck.data)
  return data_;
}
inline ::NetMsg::QuestData* QuestInfoAck::release_data() {
  // @@protoc_insertion_point(field_release:NetMsg.QuestInfoAck.data)
  
  ::NetMsg::QuestData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void QuestInfoAck::set_allocated_data(::NetMsg::QuestData* data) {
  delete data_;
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.QuestInfoAck.data)
}

// optional .NetMsg.QuestState state = 4;
inline void QuestInfoAck::clear_state() {
  state_ = 0;
}
inline ::NetMsg::QuestState QuestInfoAck::state() const {
  // @@protoc_insertion_point(field_get:NetMsg.QuestInfoAck.state)
  return static_cast< ::NetMsg::QuestState >(state_);
}
inline void QuestInfoAck::set_state(::NetMsg::QuestState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.QuestInfoAck.state)
}

inline const QuestInfoAck* QuestInfoAck::internal_default_instance() {
  return &QuestInfoAck_default_instance_.get();
}
// -------------------------------------------------------------------

// GiveAward

// optional .NetMsg.Award award = 1;
inline bool GiveAward::has_award() const {
  return this != internal_default_instance() && award_ != NULL;
}
inline void GiveAward::clear_award() {
  if (GetArenaNoVirtual() == NULL && award_ != NULL) delete award_;
  award_ = NULL;
}
inline const ::NetMsg::Award& GiveAward::award() const {
  // @@protoc_insertion_point(field_get:NetMsg.GiveAward.award)
  return award_ != NULL ? *award_
                         : *::NetMsg::Award::internal_default_instance();
}
inline ::NetMsg::Award* GiveAward::mutable_award() {
  
  if (award_ == NULL) {
    award_ = new ::NetMsg::Award;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.GiveAward.award)
  return award_;
}
inline ::NetMsg::Award* GiveAward::release_award() {
  // @@protoc_insertion_point(field_release:NetMsg.GiveAward.award)
  
  ::NetMsg::Award* temp = award_;
  award_ = NULL;
  return temp;
}
inline void GiveAward::set_allocated_award(::NetMsg::Award* award) {
  delete award_;
  award_ = award;
  if (award) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.GiveAward.award)
}

inline const GiveAward* GiveAward::internal_default_instance() {
  return &GiveAward_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqDoQuest

// optional uint64 questId = 1;
inline void ReqDoQuest::clear_questid() {
  questid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ReqDoQuest::questid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqDoQuest.questId)
  return questid_;
}
inline void ReqDoQuest::set_questid(::google::protobuf::uint64 value) {
  
  questid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqDoQuest.questId)
}

// repeated uint64 heroIds = 2;
inline int ReqDoQuest::heroids_size() const {
  return heroids_.size();
}
inline void ReqDoQuest::clear_heroids() {
  heroids_.Clear();
}
inline ::google::protobuf::uint64 ReqDoQuest::heroids(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqDoQuest.heroIds)
  return heroids_.Get(index);
}
inline void ReqDoQuest::set_heroids(int index, ::google::protobuf::uint64 value) {
  heroids_.Set(index, value);
  // @@protoc_insertion_point(field_set:NetMsg.ReqDoQuest.heroIds)
}
inline void ReqDoQuest::add_heroids(::google::protobuf::uint64 value) {
  heroids_.Add(value);
  // @@protoc_insertion_point(field_add:NetMsg.ReqDoQuest.heroIds)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ReqDoQuest::heroids() const {
  // @@protoc_insertion_point(field_list:NetMsg.ReqDoQuest.heroIds)
  return heroids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ReqDoQuest::mutable_heroids() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.ReqDoQuest.heroIds)
  return &heroids_;
}

inline const ReqDoQuest* ReqDoQuest::internal_default_instance() {
  return &ReqDoQuest_default_instance_.get();
}
// -------------------------------------------------------------------

// DoQuestAward

// optional uint64 heroId = 1;
inline void DoQuestAward::clear_heroid() {
  heroid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 DoQuestAward::heroid() const {
  // @@protoc_insertion_point(field_get:NetMsg.DoQuestAward.heroId)
  return heroid_;
}
inline void DoQuestAward::set_heroid(::google::protobuf::uint64 value) {
  
  heroid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.DoQuestAward.heroId)
}

// repeated uint32 awardType = 2;
inline int DoQuestAward::awardtype_size() const {
  return awardtype_.size();
}
inline void DoQuestAward::clear_awardtype() {
  awardtype_.Clear();
}
inline ::google::protobuf::uint32 DoQuestAward::awardtype(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.DoQuestAward.awardType)
  return awardtype_.Get(index);
}
inline void DoQuestAward::set_awardtype(int index, ::google::protobuf::uint32 value) {
  awardtype_.Set(index, value);
  // @@protoc_insertion_point(field_set:NetMsg.DoQuestAward.awardType)
}
inline void DoQuestAward::add_awardtype(::google::protobuf::uint32 value) {
  awardtype_.Add(value);
  // @@protoc_insertion_point(field_add:NetMsg.DoQuestAward.awardType)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DoQuestAward::awardtype() const {
  // @@protoc_insertion_point(field_list:NetMsg.DoQuestAward.awardType)
  return awardtype_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DoQuestAward::mutable_awardtype() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.DoQuestAward.awardType)
  return &awardtype_;
}

// repeated uint32 awardnum = 3;
inline int DoQuestAward::awardnum_size() const {
  return awardnum_.size();
}
inline void DoQuestAward::clear_awardnum() {
  awardnum_.Clear();
}
inline ::google::protobuf::uint32 DoQuestAward::awardnum(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.DoQuestAward.awardnum)
  return awardnum_.Get(index);
}
inline void DoQuestAward::set_awardnum(int index, ::google::protobuf::uint32 value) {
  awardnum_.Set(index, value);
  // @@protoc_insertion_point(field_set:NetMsg.DoQuestAward.awardnum)
}
inline void DoQuestAward::add_awardnum(::google::protobuf::uint32 value) {
  awardnum_.Add(value);
  // @@protoc_insertion_point(field_add:NetMsg.DoQuestAward.awardnum)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DoQuestAward::awardnum() const {
  // @@protoc_insertion_point(field_list:NetMsg.DoQuestAward.awardnum)
  return awardnum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DoQuestAward::mutable_awardnum() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.DoQuestAward.awardnum)
  return &awardnum_;
}

inline const DoQuestAward* DoQuestAward::internal_default_instance() {
  return &DoQuestAward_default_instance_.get();
}
// -------------------------------------------------------------------

// DoQuestAck

// optional uint64 questId = 1;
inline void DoQuestAck::clear_questid() {
  questid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 DoQuestAck::questid() const {
  // @@protoc_insertion_point(field_get:NetMsg.DoQuestAck.questId)
  return questid_;
}
inline void DoQuestAck::set_questid(::google::protobuf::uint64 value) {
  
  questid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.DoQuestAck.questId)
}

// optional uint32 error = 2;
inline void DoQuestAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 DoQuestAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.DoQuestAck.error)
  return error_;
}
inline void DoQuestAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.DoQuestAck.error)
}

// optional uint32 effect = 3;
inline void DoQuestAck::clear_effect() {
  effect_ = 0u;
}
inline ::google::protobuf::uint32 DoQuestAck::effect() const {
  // @@protoc_insertion_point(field_get:NetMsg.DoQuestAck.effect)
  return effect_;
}
inline void DoQuestAck::set_effect(::google::protobuf::uint32 value) {
  
  effect_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.DoQuestAck.effect)
}

// repeated .NetMsg.DoQuestAward award = 4;
inline int DoQuestAck::award_size() const {
  return award_.size();
}
inline void DoQuestAck::clear_award() {
  award_.Clear();
}
inline const ::NetMsg::DoQuestAward& DoQuestAck::award(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.DoQuestAck.award)
  return award_.Get(index);
}
inline ::NetMsg::DoQuestAward* DoQuestAck::mutable_award(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.DoQuestAck.award)
  return award_.Mutable(index);
}
inline ::NetMsg::DoQuestAward* DoQuestAck::add_award() {
  // @@protoc_insertion_point(field_add:NetMsg.DoQuestAck.award)
  return award_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::DoQuestAward >*
DoQuestAck::mutable_award() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.DoQuestAck.award)
  return &award_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::DoQuestAward >&
DoQuestAck::award() const {
  // @@protoc_insertion_point(field_list:NetMsg.DoQuestAck.award)
  return award_;
}

inline const DoQuestAck* DoQuestAck::internal_default_instance() {
  return &DoQuestAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqSubmitQuest

// optional uint64 questId = 1;
inline void ReqSubmitQuest::clear_questid() {
  questid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ReqSubmitQuest::questid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqSubmitQuest.questId)
  return questid_;
}
inline void ReqSubmitQuest::set_questid(::google::protobuf::uint64 value) {
  
  questid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqSubmitQuest.questId)
}

inline const ReqSubmitQuest* ReqSubmitQuest::internal_default_instance() {
  return &ReqSubmitQuest_default_instance_.get();
}
// -------------------------------------------------------------------

// SubmitQuestAck

// optional uint32 error = 1;
inline void SubmitQuestAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 SubmitQuestAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.SubmitQuestAck.error)
  return error_;
}
inline void SubmitQuestAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.SubmitQuestAck.error)
}

// optional uint64 questId = 2;
inline void SubmitQuestAck::clear_questid() {
  questid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SubmitQuestAck::questid() const {
  // @@protoc_insertion_point(field_get:NetMsg.SubmitQuestAck.questId)
  return questid_;
}
inline void SubmitQuestAck::set_questid(::google::protobuf::uint64 value) {
  
  questid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.SubmitQuestAck.questId)
}

inline const SubmitQuestAck* SubmitQuestAck::internal_default_instance() {
  return &SubmitQuestAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqAcceptQuest

// optional uint64 questId = 1;
inline void ReqAcceptQuest::clear_questid() {
  questid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ReqAcceptQuest::questid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqAcceptQuest.questId)
  return questid_;
}
inline void ReqAcceptQuest::set_questid(::google::protobuf::uint64 value) {
  
  questid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqAcceptQuest.questId)
}

inline const ReqAcceptQuest* ReqAcceptQuest::internal_default_instance() {
  return &ReqAcceptQuest_default_instance_.get();
}
// -------------------------------------------------------------------

// AcceptQuestAck

// optional uint32 error = 1;
inline void AcceptQuestAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 AcceptQuestAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.AcceptQuestAck.error)
  return error_;
}
inline void AcceptQuestAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.AcceptQuestAck.error)
}

// optional uint64 questId = 2;
inline void AcceptQuestAck::clear_questid() {
  questid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AcceptQuestAck::questid() const {
  // @@protoc_insertion_point(field_get:NetMsg.AcceptQuestAck.questId)
  return questid_;
}
inline void AcceptQuestAck::set_questid(::google::protobuf::uint64 value) {
  
  questid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.AcceptQuestAck.questId)
}

inline const AcceptQuestAck* AcceptQuestAck::internal_default_instance() {
  return &AcceptQuestAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqAddHero

// optional uint32 heroId = 1;
inline void ReqAddHero::clear_heroid() {
  heroid_ = 0u;
}
inline ::google::protobuf::uint32 ReqAddHero::heroid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqAddHero.heroId)
  return heroid_;
}
inline void ReqAddHero::set_heroid(::google::protobuf::uint32 value) {
  
  heroid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqAddHero.heroId)
}

inline const ReqAddHero* ReqAddHero::internal_default_instance() {
  return &ReqAddHero_default_instance_.get();
}
// -------------------------------------------------------------------

// AddHeroAck

// optional uint32 error = 1;
inline void AddHeroAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 AddHeroAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.AddHeroAck.error)
  return error_;
}
inline void AddHeroAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.AddHeroAck.error)
}

// optional uint32 heroId = 2;
inline void AddHeroAck::clear_heroid() {
  heroid_ = 0u;
}
inline ::google::protobuf::uint32 AddHeroAck::heroid() const {
  // @@protoc_insertion_point(field_get:NetMsg.AddHeroAck.heroId)
  return heroid_;
}
inline void AddHeroAck::set_heroid(::google::protobuf::uint32 value) {
  
  heroid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.AddHeroAck.heroId)
}

inline const AddHeroAck* AddHeroAck::internal_default_instance() {
  return &AddHeroAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqClearHeroCD

// optional uint64 heroId = 1;
inline void ReqClearHeroCD::clear_heroid() {
  heroid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ReqClearHeroCD::heroid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqClearHeroCD.heroId)
  return heroid_;
}
inline void ReqClearHeroCD::set_heroid(::google::protobuf::uint64 value) {
  
  heroid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqClearHeroCD.heroId)
}

inline const ReqClearHeroCD* ReqClearHeroCD::internal_default_instance() {
  return &ReqClearHeroCD_default_instance_.get();
}
// -------------------------------------------------------------------

// ClearHeroCDAck

// optional uint32 error = 1;
inline void ClearHeroCDAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 ClearHeroCDAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.ClearHeroCDAck.error)
  return error_;
}
inline void ClearHeroCDAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ClearHeroCDAck.error)
}

// optional uint64 heroId = 2;
inline void ClearHeroCDAck::clear_heroid() {
  heroid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ClearHeroCDAck::heroid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ClearHeroCDAck.heroId)
  return heroid_;
}
inline void ClearHeroCDAck::set_heroid(::google::protobuf::uint64 value) {
  
  heroid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ClearHeroCDAck.heroId)
}

inline const ClearHeroCDAck* ClearHeroCDAck::internal_default_instance() {
  return &ClearHeroCDAck_default_instance_.get();
}
// -------------------------------------------------------------------

// RefreshQuestAck

// optional bool success = 1;
inline void RefreshQuestAck::clear_success() {
  success_ = false;
}
inline bool RefreshQuestAck::success() const {
  // @@protoc_insertion_point(field_get:NetMsg.RefreshQuestAck.success)
  return success_;
}
inline void RefreshQuestAck::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.RefreshQuestAck.success)
}

inline const RefreshQuestAck* RefreshQuestAck::internal_default_instance() {
  return &RefreshQuestAck_default_instance_.get();
}
// -------------------------------------------------------------------

// BattleEnemy

// optional uint32 id = 1;
inline void BattleEnemy::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 BattleEnemy::id() const {
  // @@protoc_insertion_point(field_get:NetMsg.BattleEnemy.id)
  return id_;
}
inline void BattleEnemy::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.BattleEnemy.id)
}

// optional uint32 star = 2;
inline void BattleEnemy::clear_star() {
  star_ = 0u;
}
inline ::google::protobuf::uint32 BattleEnemy::star() const {
  // @@protoc_insertion_point(field_get:NetMsg.BattleEnemy.star)
  return star_;
}
inline void BattleEnemy::set_star(::google::protobuf::uint32 value) {
  
  star_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.BattleEnemy.star)
}

// optional uint32 promotion = 3;
inline void BattleEnemy::clear_promotion() {
  promotion_ = 0u;
}
inline ::google::protobuf::uint32 BattleEnemy::promotion() const {
  // @@protoc_insertion_point(field_get:NetMsg.BattleEnemy.promotion)
  return promotion_;
}
inline void BattleEnemy::set_promotion(::google::protobuf::uint32 value) {
  
  promotion_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.BattleEnemy.promotion)
}

// optional uint32 level = 4;
inline void BattleEnemy::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 BattleEnemy::level() const {
  // @@protoc_insertion_point(field_get:NetMsg.BattleEnemy.level)
  return level_;
}
inline void BattleEnemy::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.BattleEnemy.level)
}

// optional uint32 formation = 5;
inline void BattleEnemy::clear_formation() {
  formation_ = 0u;
}
inline ::google::protobuf::uint32 BattleEnemy::formation() const {
  // @@protoc_insertion_point(field_get:NetMsg.BattleEnemy.formation)
  return formation_;
}
inline void BattleEnemy::set_formation(::google::protobuf::uint32 value) {
  
  formation_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.BattleEnemy.formation)
}

// repeated uint32 skill = 6;
inline int BattleEnemy::skill_size() const {
  return skill_.size();
}
inline void BattleEnemy::clear_skill() {
  skill_.Clear();
}
inline ::google::protobuf::uint32 BattleEnemy::skill(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.BattleEnemy.skill)
  return skill_.Get(index);
}
inline void BattleEnemy::set_skill(int index, ::google::protobuf::uint32 value) {
  skill_.Set(index, value);
  // @@protoc_insertion_point(field_set:NetMsg.BattleEnemy.skill)
}
inline void BattleEnemy::add_skill(::google::protobuf::uint32 value) {
  skill_.Add(value);
  // @@protoc_insertion_point(field_add:NetMsg.BattleEnemy.skill)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BattleEnemy::skill() const {
  // @@protoc_insertion_point(field_list:NetMsg.BattleEnemy.skill)
  return skill_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BattleEnemy::mutable_skill() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.BattleEnemy.skill)
  return &skill_;
}

// repeated uint32 skillLevel = 7;
inline int BattleEnemy::skilllevel_size() const {
  return skilllevel_.size();
}
inline void BattleEnemy::clear_skilllevel() {
  skilllevel_.Clear();
}
inline ::google::protobuf::uint32 BattleEnemy::skilllevel(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.BattleEnemy.skillLevel)
  return skilllevel_.Get(index);
}
inline void BattleEnemy::set_skilllevel(int index, ::google::protobuf::uint32 value) {
  skilllevel_.Set(index, value);
  // @@protoc_insertion_point(field_set:NetMsg.BattleEnemy.skillLevel)
}
inline void BattleEnemy::add_skilllevel(::google::protobuf::uint32 value) {
  skilllevel_.Add(value);
  // @@protoc_insertion_point(field_add:NetMsg.BattleEnemy.skillLevel)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BattleEnemy::skilllevel() const {
  // @@protoc_insertion_point(field_list:NetMsg.BattleEnemy.skillLevel)
  return skilllevel_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BattleEnemy::mutable_skilllevel() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.BattleEnemy.skillLevel)
  return &skilllevel_;
}

// optional float heroHp = 8;
inline void BattleEnemy::clear_herohp() {
  herohp_ = 0;
}
inline float BattleEnemy::herohp() const {
  // @@protoc_insertion_point(field_get:NetMsg.BattleEnemy.heroHp)
  return herohp_;
}
inline void BattleEnemy::set_herohp(float value) {
  
  herohp_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.BattleEnemy.heroHp)
}

// optional float soldierHp = 9;
inline void BattleEnemy::clear_soldierhp() {
  soldierhp_ = 0;
}
inline float BattleEnemy::soldierhp() const {
  // @@protoc_insertion_point(field_get:NetMsg.BattleEnemy.soldierHp)
  return soldierhp_;
}
inline void BattleEnemy::set_soldierhp(float value) {
  
  soldierhp_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.BattleEnemy.soldierHp)
}

inline const BattleEnemy* BattleEnemy::internal_default_instance() {
  return &BattleEnemy_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqBattle

// optional uint64 battleId = 1;
inline void ReqBattle::clear_battleid() {
  battleid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ReqBattle::battleid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqBattle.battleId)
  return battleid_;
}
inline void ReqBattle::set_battleid(::google::protobuf::uint64 value) {
  
  battleid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqBattle.battleId)
}

inline const ReqBattle* ReqBattle::internal_default_instance() {
  return &ReqBattle_default_instance_.get();
}
// -------------------------------------------------------------------

// BattleAck

// optional uint64 battleId = 1;
inline void BattleAck::clear_battleid() {
  battleid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 BattleAck::battleid() const {
  // @@protoc_insertion_point(field_get:NetMsg.BattleAck.battleId)
  return battleid_;
}
inline void BattleAck::set_battleid(::google::protobuf::uint64 value) {
  
  battleid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.BattleAck.battleId)
}

// repeated .NetMsg.BattleEnemy enemys = 2;
inline int BattleAck::enemys_size() const {
  return enemys_.size();
}
inline void BattleAck::clear_enemys() {
  enemys_.Clear();
}
inline const ::NetMsg::BattleEnemy& BattleAck::enemys(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.BattleAck.enemys)
  return enemys_.Get(index);
}
inline ::NetMsg::BattleEnemy* BattleAck::mutable_enemys(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.BattleAck.enemys)
  return enemys_.Mutable(index);
}
inline ::NetMsg::BattleEnemy* BattleAck::add_enemys() {
  // @@protoc_insertion_point(field_add:NetMsg.BattleAck.enemys)
  return enemys_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::BattleEnemy >*
BattleAck::mutable_enemys() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.BattleAck.enemys)
  return &enemys_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::BattleEnemy >&
BattleAck::enemys() const {
  // @@protoc_insertion_point(field_list:NetMsg.BattleAck.enemys)
  return enemys_;
}

// optional uint32 teamId = 3;
inline void BattleAck::clear_teamid() {
  teamid_ = 0u;
}
inline ::google::protobuf::uint32 BattleAck::teamid() const {
  // @@protoc_insertion_point(field_get:NetMsg.BattleAck.teamId)
  return teamid_;
}
inline void BattleAck::set_teamid(::google::protobuf::uint32 value) {
  
  teamid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.BattleAck.teamId)
}

// optional uint32 error = 4;
inline void BattleAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 BattleAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.BattleAck.error)
  return error_;
}
inline void BattleAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.BattleAck.error)
}

inline const BattleAck* BattleAck::internal_default_instance() {
  return &BattleAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqPrepareBattle

// optional uint32 enemyTeam = 1;
inline void ReqPrepareBattle::clear_enemyteam() {
  enemyteam_ = 0u;
}
inline ::google::protobuf::uint32 ReqPrepareBattle::enemyteam() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqPrepareBattle.enemyTeam)
  return enemyteam_;
}
inline void ReqPrepareBattle::set_enemyteam(::google::protobuf::uint32 value) {
  
  enemyteam_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqPrepareBattle.enemyTeam)
}

inline const ReqPrepareBattle* ReqPrepareBattle::internal_default_instance() {
  return &ReqPrepareBattle_default_instance_.get();
}
// -------------------------------------------------------------------

// PrepareBattleAck

// optional uint64 battleId = 1;
inline void PrepareBattleAck::clear_battleid() {
  battleid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PrepareBattleAck::battleid() const {
  // @@protoc_insertion_point(field_get:NetMsg.PrepareBattleAck.battleId)
  return battleid_;
}
inline void PrepareBattleAck::set_battleid(::google::protobuf::uint64 value) {
  
  battleid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.PrepareBattleAck.battleId)
}

// repeated .NetMsg.BattleEnemy enemys = 2;
inline int PrepareBattleAck::enemys_size() const {
  return enemys_.size();
}
inline void PrepareBattleAck::clear_enemys() {
  enemys_.Clear();
}
inline const ::NetMsg::BattleEnemy& PrepareBattleAck::enemys(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.PrepareBattleAck.enemys)
  return enemys_.Get(index);
}
inline ::NetMsg::BattleEnemy* PrepareBattleAck::mutable_enemys(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.PrepareBattleAck.enemys)
  return enemys_.Mutable(index);
}
inline ::NetMsg::BattleEnemy* PrepareBattleAck::add_enemys() {
  // @@protoc_insertion_point(field_add:NetMsg.PrepareBattleAck.enemys)
  return enemys_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::BattleEnemy >*
PrepareBattleAck::mutable_enemys() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.PrepareBattleAck.enemys)
  return &enemys_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::BattleEnemy >&
PrepareBattleAck::enemys() const {
  // @@protoc_insertion_point(field_list:NetMsg.PrepareBattleAck.enemys)
  return enemys_;
}

inline const PrepareBattleAck* PrepareBattleAck::internal_default_instance() {
  return &PrepareBattleAck_default_instance_.get();
}
// -------------------------------------------------------------------

// RecoverBattle

// optional uint64 battleId = 1;
inline void RecoverBattle::clear_battleid() {
  battleid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RecoverBattle::battleid() const {
  // @@protoc_insertion_point(field_get:NetMsg.RecoverBattle.battleId)
  return battleid_;
}
inline void RecoverBattle::set_battleid(::google::protobuf::uint64 value) {
  
  battleid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.RecoverBattle.battleId)
}

inline const RecoverBattle* RecoverBattle::internal_default_instance() {
  return &RecoverBattle_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqBattleEnd

// optional uint64 battleId = 1;
inline void ReqBattleEnd::clear_battleid() {
  battleid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ReqBattleEnd::battleid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqBattleEnd.battleId)
  return battleid_;
}
inline void ReqBattleEnd::set_battleid(::google::protobuf::uint64 value) {
  
  battleid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqBattleEnd.battleId)
}

// optional bool victory = 2;
inline void ReqBattleEnd::clear_victory() {
  victory_ = false;
}
inline bool ReqBattleEnd::victory() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqBattleEnd.victory)
  return victory_;
}
inline void ReqBattleEnd::set_victory(bool value) {
  
  victory_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqBattleEnd.victory)
}

// repeated .NetMsg.BattleEnemy enemys = 3;
inline int ReqBattleEnd::enemys_size() const {
  return enemys_.size();
}
inline void ReqBattleEnd::clear_enemys() {
  enemys_.Clear();
}
inline const ::NetMsg::BattleEnemy& ReqBattleEnd::enemys(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqBattleEnd.enemys)
  return enemys_.Get(index);
}
inline ::NetMsg::BattleEnemy* ReqBattleEnd::mutable_enemys(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.ReqBattleEnd.enemys)
  return enemys_.Mutable(index);
}
inline ::NetMsg::BattleEnemy* ReqBattleEnd::add_enemys() {
  // @@protoc_insertion_point(field_add:NetMsg.ReqBattleEnd.enemys)
  return enemys_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::BattleEnemy >*
ReqBattleEnd::mutable_enemys() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.ReqBattleEnd.enemys)
  return &enemys_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::BattleEnemy >&
ReqBattleEnd::enemys() const {
  // @@protoc_insertion_point(field_list:NetMsg.ReqBattleEnd.enemys)
  return enemys_;
}

inline const ReqBattleEnd* ReqBattleEnd::internal_default_instance() {
  return &ReqBattleEnd_default_instance_.get();
}
// -------------------------------------------------------------------

// BattleEndAck

// optional uint64 battleId = 1;
inline void BattleEndAck::clear_battleid() {
  battleid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 BattleEndAck::battleid() const {
  // @@protoc_insertion_point(field_get:NetMsg.BattleEndAck.battleId)
  return battleid_;
}
inline void BattleEndAck::set_battleid(::google::protobuf::uint64 value) {
  
  battleid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.BattleEndAck.battleId)
}

// optional bool victory = 2;
inline void BattleEndAck::clear_victory() {
  victory_ = false;
}
inline bool BattleEndAck::victory() const {
  // @@protoc_insertion_point(field_get:NetMsg.BattleEndAck.victory)
  return victory_;
}
inline void BattleEndAck::set_victory(bool value) {
  
  victory_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.BattleEndAck.victory)
}

inline const BattleEndAck* BattleEndAck::internal_default_instance() {
  return &BattleEndAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqHeroUseItem

// optional uint64 heroId = 1;
inline void ReqHeroUseItem::clear_heroid() {
  heroid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ReqHeroUseItem::heroid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqHeroUseItem.heroId)
  return heroid_;
}
inline void ReqHeroUseItem::set_heroid(::google::protobuf::uint64 value) {
  
  heroid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqHeroUseItem.heroId)
}

// optional uint64 itemId = 2;
inline void ReqHeroUseItem::clear_itemid() {
  itemid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ReqHeroUseItem::itemid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqHeroUseItem.itemId)
  return itemid_;
}
inline void ReqHeroUseItem::set_itemid(::google::protobuf::uint64 value) {
  
  itemid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqHeroUseItem.itemId)
}

// optional uint32 num = 3;
inline void ReqHeroUseItem::clear_num() {
  num_ = 0u;
}
inline ::google::protobuf::uint32 ReqHeroUseItem::num() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqHeroUseItem.num)
  return num_;
}
inline void ReqHeroUseItem::set_num(::google::protobuf::uint32 value) {
  
  num_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqHeroUseItem.num)
}

inline const ReqHeroUseItem* ReqHeroUseItem::internal_default_instance() {
  return &ReqHeroUseItem_default_instance_.get();
}
// -------------------------------------------------------------------

// HeroUserItemAck

// optional uint64 heroId = 1;
inline void HeroUserItemAck::clear_heroid() {
  heroid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 HeroUserItemAck::heroid() const {
  // @@protoc_insertion_point(field_get:NetMsg.HeroUserItemAck.heroId)
  return heroid_;
}
inline void HeroUserItemAck::set_heroid(::google::protobuf::uint64 value) {
  
  heroid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.HeroUserItemAck.heroId)
}

// optional uint32 error = 2;
inline void HeroUserItemAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 HeroUserItemAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.HeroUserItemAck.error)
  return error_;
}
inline void HeroUserItemAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.HeroUserItemAck.error)
}

inline const HeroUserItemAck* HeroUserItemAck::internal_default_instance() {
  return &HeroUserItemAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqUseItem

// optional uint64 itemId = 1;
inline void ReqUseItem::clear_itemid() {
  itemid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ReqUseItem::itemid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqUseItem.itemId)
  return itemid_;
}
inline void ReqUseItem::set_itemid(::google::protobuf::uint64 value) {
  
  itemid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqUseItem.itemId)
}

// optional uint32 num = 2;
inline void ReqUseItem::clear_num() {
  num_ = 0u;
}
inline ::google::protobuf::uint32 ReqUseItem::num() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqUseItem.num)
  return num_;
}
inline void ReqUseItem::set_num(::google::protobuf::uint32 value) {
  
  num_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqUseItem.num)
}

inline const ReqUseItem* ReqUseItem::internal_default_instance() {
  return &ReqUseItem_default_instance_.get();
}
// -------------------------------------------------------------------

// UseItemAck

// optional uint64 itemId = 1;
inline void UseItemAck::clear_itemid() {
  itemid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UseItemAck::itemid() const {
  // @@protoc_insertion_point(field_get:NetMsg.UseItemAck.itemId)
  return itemid_;
}
inline void UseItemAck::set_itemid(::google::protobuf::uint64 value) {
  
  itemid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.UseItemAck.itemId)
}

// optional uint32 error = 2;
inline void UseItemAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 UseItemAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.UseItemAck.error)
  return error_;
}
inline void UseItemAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.UseItemAck.error)
}

inline const UseItemAck* UseItemAck::internal_default_instance() {
  return &UseItemAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqAddItem

// optional uint32 itemId = 1;
inline void ReqAddItem::clear_itemid() {
  itemid_ = 0u;
}
inline ::google::protobuf::uint32 ReqAddItem::itemid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqAddItem.itemId)
  return itemid_;
}
inline void ReqAddItem::set_itemid(::google::protobuf::uint32 value) {
  
  itemid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqAddItem.itemId)
}

// optional uint32 num = 2;
inline void ReqAddItem::clear_num() {
  num_ = 0u;
}
inline ::google::protobuf::uint32 ReqAddItem::num() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqAddItem.num)
  return num_;
}
inline void ReqAddItem::set_num(::google::protobuf::uint32 value) {
  
  num_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqAddItem.num)
}

inline const ReqAddItem* ReqAddItem::internal_default_instance() {
  return &ReqAddItem_default_instance_.get();
}
// -------------------------------------------------------------------

// AddItemAck

// optional uint32 itemId = 1;
inline void AddItemAck::clear_itemid() {
  itemid_ = 0u;
}
inline ::google::protobuf::uint32 AddItemAck::itemid() const {
  // @@protoc_insertion_point(field_get:NetMsg.AddItemAck.itemId)
  return itemid_;
}
inline void AddItemAck::set_itemid(::google::protobuf::uint32 value) {
  
  itemid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.AddItemAck.itemId)
}

// optional uint32 error = 2;
inline void AddItemAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 AddItemAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.AddItemAck.error)
  return error_;
}
inline void AddItemAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.AddItemAck.error)
}

inline const AddItemAck* AddItemAck::internal_default_instance() {
  return &AddItemAck_default_instance_.get();
}
// -------------------------------------------------------------------

// AdvantureContinuousBattle

// optional uint32 enemyPath = 1;
inline void AdvantureContinuousBattle::clear_enemypath() {
  enemypath_ = 0u;
}
inline ::google::protobuf::uint32 AdvantureContinuousBattle::enemypath() const {
  // @@protoc_insertion_point(field_get:NetMsg.AdvantureContinuousBattle.enemyPath)
  return enemypath_;
}
inline void AdvantureContinuousBattle::set_enemypath(::google::protobuf::uint32 value) {
  
  enemypath_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.AdvantureContinuousBattle.enemyPath)
}

// optional float percent = 2;
inline void AdvantureContinuousBattle::clear_percent() {
  percent_ = 0;
}
inline float AdvantureContinuousBattle::percent() const {
  // @@protoc_insertion_point(field_get:NetMsg.AdvantureContinuousBattle.percent)
  return percent_;
}
inline void AdvantureContinuousBattle::set_percent(float value) {
  
  percent_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.AdvantureContinuousBattle.percent)
}

// optional uint64 battleId = 3;
inline void AdvantureContinuousBattle::clear_battleid() {
  battleid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AdvantureContinuousBattle::battleid() const {
  // @@protoc_insertion_point(field_get:NetMsg.AdvantureContinuousBattle.battleId)
  return battleid_;
}
inline void AdvantureContinuousBattle::set_battleid(::google::protobuf::uint64 value) {
  
  battleid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.AdvantureContinuousBattle.battleId)
}

// optional uint32 enemyTeam = 4;
inline void AdvantureContinuousBattle::clear_enemyteam() {
  enemyteam_ = 0u;
}
inline ::google::protobuf::uint32 AdvantureContinuousBattle::enemyteam() const {
  // @@protoc_insertion_point(field_get:NetMsg.AdvantureContinuousBattle.enemyTeam)
  return enemyteam_;
}
inline void AdvantureContinuousBattle::set_enemyteam(::google::protobuf::uint32 value) {
  
  enemyteam_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.AdvantureContinuousBattle.enemyTeam)
}

inline const AdvantureContinuousBattle* AdvantureContinuousBattle::internal_default_instance() {
  return &AdvantureContinuousBattle_default_instance_.get();
}
// -------------------------------------------------------------------

// AdvantureEvent

// optional uint32 id = 1;
inline void AdvantureEvent::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 AdvantureEvent::id() const {
  // @@protoc_insertion_point(field_get:NetMsg.AdvantureEvent.id)
  return id_;
}
inline void AdvantureEvent::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.AdvantureEvent.id)
}

// optional uint32 type = 2;
inline void AdvantureEvent::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 AdvantureEvent::type() const {
  // @@protoc_insertion_point(field_get:NetMsg.AdvantureEvent.type)
  return type_;
}
inline void AdvantureEvent::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.AdvantureEvent.type)
}

// optional uint32 time = 3;
inline void AdvantureEvent::clear_time() {
  time_ = 0u;
}
inline ::google::protobuf::uint32 AdvantureEvent::time() const {
  // @@protoc_insertion_point(field_get:NetMsg.AdvantureEvent.time)
  return time_;
}
inline void AdvantureEvent::set_time(::google::protobuf::uint32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.AdvantureEvent.time)
}

// optional .NetMsg.Award award = 4;
inline bool AdvantureEvent::has_award() const {
  return this != internal_default_instance() && award_ != NULL;
}
inline void AdvantureEvent::clear_award() {
  if (GetArenaNoVirtual() == NULL && award_ != NULL) delete award_;
  award_ = NULL;
}
inline const ::NetMsg::Award& AdvantureEvent::award() const {
  // @@protoc_insertion_point(field_get:NetMsg.AdvantureEvent.award)
  return award_ != NULL ? *award_
                         : *::NetMsg::Award::internal_default_instance();
}
inline ::NetMsg::Award* AdvantureEvent::mutable_award() {
  
  if (award_ == NULL) {
    award_ = new ::NetMsg::Award;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.AdvantureEvent.award)
  return award_;
}
inline ::NetMsg::Award* AdvantureEvent::release_award() {
  // @@protoc_insertion_point(field_release:NetMsg.AdvantureEvent.award)
  
  ::NetMsg::Award* temp = award_;
  award_ = NULL;
  return temp;
}
inline void AdvantureEvent::set_allocated_award(::NetMsg::Award* award) {
  delete award_;
  award_ = award;
  if (award) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.AdvantureEvent.award)
}

// optional uint32 createTime = 5;
inline void AdvantureEvent::clear_createtime() {
  createtime_ = 0u;
}
inline ::google::protobuf::uint32 AdvantureEvent::createtime() const {
  // @@protoc_insertion_point(field_get:NetMsg.AdvantureEvent.createTime)
  return createtime_;
}
inline void AdvantureEvent::set_createtime(::google::protobuf::uint32 value) {
  
  createtime_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.AdvantureEvent.createTime)
}

// optional .NetMsg.AdvantureContinuousBattle battle = 6;
inline bool AdvantureEvent::has_battle() const {
  return this != internal_default_instance() && battle_ != NULL;
}
inline void AdvantureEvent::clear_battle() {
  if (GetArenaNoVirtual() == NULL && battle_ != NULL) delete battle_;
  battle_ = NULL;
}
inline const ::NetMsg::AdvantureContinuousBattle& AdvantureEvent::battle() const {
  // @@protoc_insertion_point(field_get:NetMsg.AdvantureEvent.battle)
  return battle_ != NULL ? *battle_
                         : *::NetMsg::AdvantureContinuousBattle::internal_default_instance();
}
inline ::NetMsg::AdvantureContinuousBattle* AdvantureEvent::mutable_battle() {
  
  if (battle_ == NULL) {
    battle_ = new ::NetMsg::AdvantureContinuousBattle;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.AdvantureEvent.battle)
  return battle_;
}
inline ::NetMsg::AdvantureContinuousBattle* AdvantureEvent::release_battle() {
  // @@protoc_insertion_point(field_release:NetMsg.AdvantureEvent.battle)
  
  ::NetMsg::AdvantureContinuousBattle* temp = battle_;
  battle_ = NULL;
  return temp;
}
inline void AdvantureEvent::set_allocated_battle(::NetMsg::AdvantureContinuousBattle* battle) {
  delete battle_;
  battle_ = battle;
  if (battle) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.AdvantureEvent.battle)
}

// optional .NetMsg.AdvantureEventStatus status = 7;
inline void AdvantureEvent::clear_status() {
  status_ = 0;
}
inline ::NetMsg::AdvantureEventStatus AdvantureEvent::status() const {
  // @@protoc_insertion_point(field_get:NetMsg.AdvantureEvent.status)
  return static_cast< ::NetMsg::AdvantureEventStatus >(status_);
}
inline void AdvantureEvent::set_status(::NetMsg::AdvantureEventStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.AdvantureEvent.status)
}

inline const AdvantureEvent* AdvantureEvent::internal_default_instance() {
  return &AdvantureEvent_default_instance_.get();
}
// -------------------------------------------------------------------

// AdvantureInfoAck

// optional uint32 times = 1;
inline void AdvantureInfoAck::clear_times() {
  times_ = 0u;
}
inline ::google::protobuf::uint32 AdvantureInfoAck::times() const {
  // @@protoc_insertion_point(field_get:NetMsg.AdvantureInfoAck.times)
  return times_;
}
inline void AdvantureInfoAck::set_times(::google::protobuf::uint32 value) {
  
  times_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.AdvantureInfoAck.times)
}

// optional uint32 timesMax = 2;
inline void AdvantureInfoAck::clear_timesmax() {
  timesmax_ = 0u;
}
inline ::google::protobuf::uint32 AdvantureInfoAck::timesmax() const {
  // @@protoc_insertion_point(field_get:NetMsg.AdvantureInfoAck.timesMax)
  return timesmax_;
}
inline void AdvantureInfoAck::set_timesmax(::google::protobuf::uint32 value) {
  
  timesmax_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.AdvantureInfoAck.timesMax)
}

// optional uint32 nextTime = 3;
inline void AdvantureInfoAck::clear_nexttime() {
  nexttime_ = 0u;
}
inline ::google::protobuf::uint32 AdvantureInfoAck::nexttime() const {
  // @@protoc_insertion_point(field_get:NetMsg.AdvantureInfoAck.nextTime)
  return nexttime_;
}
inline void AdvantureInfoAck::set_nexttime(::google::protobuf::uint32 value) {
  
  nexttime_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.AdvantureInfoAck.nextTime)
}

// repeated .NetMsg.AdvantureEvent events = 4;
inline int AdvantureInfoAck::events_size() const {
  return events_.size();
}
inline void AdvantureInfoAck::clear_events() {
  events_.Clear();
}
inline const ::NetMsg::AdvantureEvent& AdvantureInfoAck::events(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.AdvantureInfoAck.events)
  return events_.Get(index);
}
inline ::NetMsg::AdvantureEvent* AdvantureInfoAck::mutable_events(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.AdvantureInfoAck.events)
  return events_.Mutable(index);
}
inline ::NetMsg::AdvantureEvent* AdvantureInfoAck::add_events() {
  // @@protoc_insertion_point(field_add:NetMsg.AdvantureInfoAck.events)
  return events_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::AdvantureEvent >*
AdvantureInfoAck::mutable_events() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.AdvantureInfoAck.events)
  return &events_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::AdvantureEvent >&
AdvantureInfoAck::events() const {
  // @@protoc_insertion_point(field_list:NetMsg.AdvantureInfoAck.events)
  return events_;
}

// optional uint32 updateTime = 5;
inline void AdvantureInfoAck::clear_updatetime() {
  updatetime_ = 0u;
}
inline ::google::protobuf::uint32 AdvantureInfoAck::updatetime() const {
  // @@protoc_insertion_point(field_get:NetMsg.AdvantureInfoAck.updateTime)
  return updatetime_;
}
inline void AdvantureInfoAck::set_updatetime(::google::protobuf::uint32 value) {
  
  updatetime_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.AdvantureInfoAck.updateTime)
}

// optional uint32 doTimes = 6;
inline void AdvantureInfoAck::clear_dotimes() {
  dotimes_ = 0u;
}
inline ::google::protobuf::uint32 AdvantureInfoAck::dotimes() const {
  // @@protoc_insertion_point(field_get:NetMsg.AdvantureInfoAck.doTimes)
  return dotimes_;
}
inline void AdvantureInfoAck::set_dotimes(::google::protobuf::uint32 value) {
  
  dotimes_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.AdvantureInfoAck.doTimes)
}

inline const AdvantureInfoAck* AdvantureInfoAck::internal_default_instance() {
  return &AdvantureInfoAck_default_instance_.get();
}
// -------------------------------------------------------------------

// AdvantureAck

// optional uint32 times = 1;
inline void AdvantureAck::clear_times() {
  times_ = 0u;
}
inline ::google::protobuf::uint32 AdvantureAck::times() const {
  // @@protoc_insertion_point(field_get:NetMsg.AdvantureAck.times)
  return times_;
}
inline void AdvantureAck::set_times(::google::protobuf::uint32 value) {
  
  times_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.AdvantureAck.times)
}

// optional uint32 nextTime = 2;
inline void AdvantureAck::clear_nexttime() {
  nexttime_ = 0u;
}
inline ::google::protobuf::uint32 AdvantureAck::nexttime() const {
  // @@protoc_insertion_point(field_get:NetMsg.AdvantureAck.nextTime)
  return nexttime_;
}
inline void AdvantureAck::set_nexttime(::google::protobuf::uint32 value) {
  
  nexttime_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.AdvantureAck.nextTime)
}

// optional uint32 gold = 3;
inline void AdvantureAck::clear_gold() {
  gold_ = 0u;
}
inline ::google::protobuf::uint32 AdvantureAck::gold() const {
  // @@protoc_insertion_point(field_get:NetMsg.AdvantureAck.gold)
  return gold_;
}
inline void AdvantureAck::set_gold(::google::protobuf::uint32 value) {
  
  gold_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.AdvantureAck.gold)
}

// optional uint32 exp = 4;
inline void AdvantureAck::clear_exp() {
  exp_ = 0u;
}
inline ::google::protobuf::uint32 AdvantureAck::exp() const {
  // @@protoc_insertion_point(field_get:NetMsg.AdvantureAck.exp)
  return exp_;
}
inline void AdvantureAck::set_exp(::google::protobuf::uint32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.AdvantureAck.exp)
}

// optional uint32 crit = 5;
inline void AdvantureAck::clear_crit() {
  crit_ = 0u;
}
inline ::google::protobuf::uint32 AdvantureAck::crit() const {
  // @@protoc_insertion_point(field_get:NetMsg.AdvantureAck.crit)
  return crit_;
}
inline void AdvantureAck::set_crit(::google::protobuf::uint32 value) {
  
  crit_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.AdvantureAck.crit)
}

// optional .NetMsg.AdvantureEvent event = 6;
inline bool AdvantureAck::has_event() const {
  return this != internal_default_instance() && event_ != NULL;
}
inline void AdvantureAck::clear_event() {
  if (GetArenaNoVirtual() == NULL && event_ != NULL) delete event_;
  event_ = NULL;
}
inline const ::NetMsg::AdvantureEvent& AdvantureAck::event() const {
  // @@protoc_insertion_point(field_get:NetMsg.AdvantureAck.event)
  return event_ != NULL ? *event_
                         : *::NetMsg::AdvantureEvent::internal_default_instance();
}
inline ::NetMsg::AdvantureEvent* AdvantureAck::mutable_event() {
  
  if (event_ == NULL) {
    event_ = new ::NetMsg::AdvantureEvent;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.AdvantureAck.event)
  return event_;
}
inline ::NetMsg::AdvantureEvent* AdvantureAck::release_event() {
  // @@protoc_insertion_point(field_release:NetMsg.AdvantureAck.event)
  
  ::NetMsg::AdvantureEvent* temp = event_;
  event_ = NULL;
  return temp;
}
inline void AdvantureAck::set_allocated_event(::NetMsg::AdvantureEvent* event) {
  delete event_;
  event_ = event;
  if (event) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.AdvantureAck.event)
}

inline const AdvantureAck* AdvantureAck::internal_default_instance() {
  return &AdvantureAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqAdvantureEventDone

// optional uint32 id = 1;
inline void ReqAdvantureEventDone::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 ReqAdvantureEventDone::id() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqAdvantureEventDone.id)
  return id_;
}
inline void ReqAdvantureEventDone::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqAdvantureEventDone.id)
}

inline const ReqAdvantureEventDone* ReqAdvantureEventDone::internal_default_instance() {
  return &ReqAdvantureEventDone_default_instance_.get();
}
// -------------------------------------------------------------------

// AdvantureEventDoneAck

// optional uint32 id = 1;
inline void AdvantureEventDoneAck::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 AdvantureEventDoneAck::id() const {
  // @@protoc_insertion_point(field_get:NetMsg.AdvantureEventDoneAck.id)
  return id_;
}
inline void AdvantureEventDoneAck::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.AdvantureEventDoneAck.id)
}

// optional uint32 error = 2;
inline void AdvantureEventDoneAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 AdvantureEventDoneAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.AdvantureEventDoneAck.error)
  return error_;
}
inline void AdvantureEventDoneAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.AdvantureEventDoneAck.error)
}

inline const AdvantureEventDoneAck* AdvantureEventDoneAck::internal_default_instance() {
  return &AdvantureEventDoneAck_default_instance_.get();
}
// -------------------------------------------------------------------

// HeroFriendship

// optional uint32 heroClass = 1;
inline void HeroFriendship::clear_heroclass() {
  heroclass_ = 0u;
}
inline ::google::protobuf::uint32 HeroFriendship::heroclass() const {
  // @@protoc_insertion_point(field_get:NetMsg.HeroFriendship.heroClass)
  return heroclass_;
}
inline void HeroFriendship::set_heroclass(::google::protobuf::uint32 value) {
  
  heroclass_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.HeroFriendship.heroClass)
}

// optional uint32 friendshipExp = 2;
inline void HeroFriendship::clear_friendshipexp() {
  friendshipexp_ = 0u;
}
inline ::google::protobuf::uint32 HeroFriendship::friendshipexp() const {
  // @@protoc_insertion_point(field_get:NetMsg.HeroFriendship.friendshipExp)
  return friendshipexp_;
}
inline void HeroFriendship::set_friendshipexp(::google::protobuf::uint32 value) {
  
  friendshipexp_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.HeroFriendship.friendshipExp)
}

// optional uint32 friendshipLv = 3;
inline void HeroFriendship::clear_friendshiplv() {
  friendshiplv_ = 0u;
}
inline ::google::protobuf::uint32 HeroFriendship::friendshiplv() const {
  // @@protoc_insertion_point(field_get:NetMsg.HeroFriendship.friendshipLv)
  return friendshiplv_;
}
inline void HeroFriendship::set_friendshiplv(::google::protobuf::uint32 value) {
  
  friendshiplv_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.HeroFriendship.friendshipLv)
}

inline const HeroFriendship* HeroFriendship::internal_default_instance() {
  return &HeroFriendship_default_instance_.get();
}
// -------------------------------------------------------------------

// HeroFriendshipAck

// repeated .NetMsg.HeroFriendship heroFri = 1;
inline int HeroFriendshipAck::herofri_size() const {
  return herofri_.size();
}
inline void HeroFriendshipAck::clear_herofri() {
  herofri_.Clear();
}
inline const ::NetMsg::HeroFriendship& HeroFriendshipAck::herofri(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.HeroFriendshipAck.heroFri)
  return herofri_.Get(index);
}
inline ::NetMsg::HeroFriendship* HeroFriendshipAck::mutable_herofri(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.HeroFriendshipAck.heroFri)
  return herofri_.Mutable(index);
}
inline ::NetMsg::HeroFriendship* HeroFriendshipAck::add_herofri() {
  // @@protoc_insertion_point(field_add:NetMsg.HeroFriendshipAck.heroFri)
  return herofri_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::HeroFriendship >*
HeroFriendshipAck::mutable_herofri() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.HeroFriendshipAck.heroFri)
  return &herofri_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::HeroFriendship >&
HeroFriendshipAck::herofri() const {
  // @@protoc_insertion_point(field_list:NetMsg.HeroFriendshipAck.heroFri)
  return herofri_;
}

inline const HeroFriendshipAck* HeroFriendshipAck::internal_default_instance() {
  return &HeroFriendshipAck_default_instance_.get();
}
// -------------------------------------------------------------------

// HeroGeneralSoul

// optional uint32 heroClass = 1;
inline void HeroGeneralSoul::clear_heroclass() {
  heroclass_ = 0u;
}
inline ::google::protobuf::uint32 HeroGeneralSoul::heroclass() const {
  // @@protoc_insertion_point(field_get:NetMsg.HeroGeneralSoul.heroClass)
  return heroclass_;
}
inline void HeroGeneralSoul::set_heroclass(::google::protobuf::uint32 value) {
  
  heroclass_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.HeroGeneralSoul.heroClass)
}

// optional uint32 num = 2;
inline void HeroGeneralSoul::clear_num() {
  num_ = 0u;
}
inline ::google::protobuf::uint32 HeroGeneralSoul::num() const {
  // @@protoc_insertion_point(field_get:NetMsg.HeroGeneralSoul.num)
  return num_;
}
inline void HeroGeneralSoul::set_num(::google::protobuf::uint32 value) {
  
  num_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.HeroGeneralSoul.num)
}

inline const HeroGeneralSoul* HeroGeneralSoul::internal_default_instance() {
  return &HeroGeneralSoul_default_instance_.get();
}
// -------------------------------------------------------------------

// HeroGeneralSoulAck

// repeated .NetMsg.HeroGeneralSoul heroSoul = 1;
inline int HeroGeneralSoulAck::herosoul_size() const {
  return herosoul_.size();
}
inline void HeroGeneralSoulAck::clear_herosoul() {
  herosoul_.Clear();
}
inline const ::NetMsg::HeroGeneralSoul& HeroGeneralSoulAck::herosoul(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.HeroGeneralSoulAck.heroSoul)
  return herosoul_.Get(index);
}
inline ::NetMsg::HeroGeneralSoul* HeroGeneralSoulAck::mutable_herosoul(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.HeroGeneralSoulAck.heroSoul)
  return herosoul_.Mutable(index);
}
inline ::NetMsg::HeroGeneralSoul* HeroGeneralSoulAck::add_herosoul() {
  // @@protoc_insertion_point(field_add:NetMsg.HeroGeneralSoulAck.heroSoul)
  return herosoul_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::HeroGeneralSoul >*
HeroGeneralSoulAck::mutable_herosoul() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.HeroGeneralSoulAck.heroSoul)
  return &herosoul_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::HeroGeneralSoul >&
HeroGeneralSoulAck::herosoul() const {
  // @@protoc_insertion_point(field_list:NetMsg.HeroGeneralSoulAck.heroSoul)
  return herosoul_;
}

inline const HeroGeneralSoulAck* HeroGeneralSoulAck::internal_default_instance() {
  return &HeroGeneralSoulAck_default_instance_.get();
}
// -------------------------------------------------------------------

// UserLearnVsCDInfo

// optional uint32 heroClass = 1;
inline void UserLearnVsCDInfo::clear_heroclass() {
  heroclass_ = 0u;
}
inline ::google::protobuf::uint32 UserLearnVsCDInfo::heroclass() const {
  // @@protoc_insertion_point(field_get:NetMsg.UserLearnVsCDInfo.heroClass)
  return heroclass_;
}
inline void UserLearnVsCDInfo::set_heroclass(::google::protobuf::uint32 value) {
  
  heroclass_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.UserLearnVsCDInfo.heroClass)
}

// optional uint32 UserLearnVsCD = 2;
inline void UserLearnVsCDInfo::clear_userlearnvscd() {
  userlearnvscd_ = 0u;
}
inline ::google::protobuf::uint32 UserLearnVsCDInfo::userlearnvscd() const {
  // @@protoc_insertion_point(field_get:NetMsg.UserLearnVsCDInfo.UserLearnVsCD)
  return userlearnvscd_;
}
inline void UserLearnVsCDInfo::set_userlearnvscd(::google::protobuf::uint32 value) {
  
  userlearnvscd_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.UserLearnVsCDInfo.UserLearnVsCD)
}

inline const UserLearnVsCDInfo* UserLearnVsCDInfo::internal_default_instance() {
  return &UserLearnVsCDInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// UserLearnVsCDAck

// repeated .NetMsg.UserLearnVsCDInfo cdInfo = 1;
inline int UserLearnVsCDAck::cdinfo_size() const {
  return cdinfo_.size();
}
inline void UserLearnVsCDAck::clear_cdinfo() {
  cdinfo_.Clear();
}
inline const ::NetMsg::UserLearnVsCDInfo& UserLearnVsCDAck::cdinfo(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.UserLearnVsCDAck.cdInfo)
  return cdinfo_.Get(index);
}
inline ::NetMsg::UserLearnVsCDInfo* UserLearnVsCDAck::mutable_cdinfo(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.UserLearnVsCDAck.cdInfo)
  return cdinfo_.Mutable(index);
}
inline ::NetMsg::UserLearnVsCDInfo* UserLearnVsCDAck::add_cdinfo() {
  // @@protoc_insertion_point(field_add:NetMsg.UserLearnVsCDAck.cdInfo)
  return cdinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::UserLearnVsCDInfo >*
UserLearnVsCDAck::mutable_cdinfo() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.UserLearnVsCDAck.cdInfo)
  return &cdinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::UserLearnVsCDInfo >&
UserLearnVsCDAck::cdinfo() const {
  // @@protoc_insertion_point(field_list:NetMsg.UserLearnVsCDAck.cdInfo)
  return cdinfo_;
}

inline const UserLearnVsCDAck* UserLearnVsCDAck::internal_default_instance() {
  return &UserLearnVsCDAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqGiveHeroGift

// optional uint32 heroClass = 1;
inline void ReqGiveHeroGift::clear_heroclass() {
  heroclass_ = 0u;
}
inline ::google::protobuf::uint32 ReqGiveHeroGift::heroclass() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqGiveHeroGift.heroClass)
  return heroclass_;
}
inline void ReqGiveHeroGift::set_heroclass(::google::protobuf::uint32 value) {
  
  heroclass_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqGiveHeroGift.heroClass)
}

// optional uint64 itemId = 2;
inline void ReqGiveHeroGift::clear_itemid() {
  itemid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ReqGiveHeroGift::itemid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqGiveHeroGift.itemId)
  return itemid_;
}
inline void ReqGiveHeroGift::set_itemid(::google::protobuf::uint64 value) {
  
  itemid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqGiveHeroGift.itemId)
}

// optional uint32 itemNum = 3;
inline void ReqGiveHeroGift::clear_itemnum() {
  itemnum_ = 0u;
}
inline ::google::protobuf::uint32 ReqGiveHeroGift::itemnum() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqGiveHeroGift.itemNum)
  return itemnum_;
}
inline void ReqGiveHeroGift::set_itemnum(::google::protobuf::uint32 value) {
  
  itemnum_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqGiveHeroGift.itemNum)
}

inline const ReqGiveHeroGift* ReqGiveHeroGift::internal_default_instance() {
  return &ReqGiveHeroGift_default_instance_.get();
}
// -------------------------------------------------------------------

// GiveHeroGiftAck

// optional uint64 itemId = 1;
inline void GiveHeroGiftAck::clear_itemid() {
  itemid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GiveHeroGiftAck::itemid() const {
  // @@protoc_insertion_point(field_get:NetMsg.GiveHeroGiftAck.itemId)
  return itemid_;
}
inline void GiveHeroGiftAck::set_itemid(::google::protobuf::uint64 value) {
  
  itemid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.GiveHeroGiftAck.itemId)
}

// optional uint32 error = 2;
inline void GiveHeroGiftAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 GiveHeroGiftAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.GiveHeroGiftAck.error)
  return error_;
}
inline void GiveHeroGiftAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.GiveHeroGiftAck.error)
}

inline const GiveHeroGiftAck* GiveHeroGiftAck::internal_default_instance() {
  return &GiveHeroGiftAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqGeneralSoulExchangeHero

// optional uint32 heroId = 1;
inline void ReqGeneralSoulExchangeHero::clear_heroid() {
  heroid_ = 0u;
}
inline ::google::protobuf::uint32 ReqGeneralSoulExchangeHero::heroid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqGeneralSoulExchangeHero.heroId)
  return heroid_;
}
inline void ReqGeneralSoulExchangeHero::set_heroid(::google::protobuf::uint32 value) {
  
  heroid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqGeneralSoulExchangeHero.heroId)
}

inline const ReqGeneralSoulExchangeHero* ReqGeneralSoulExchangeHero::internal_default_instance() {
  return &ReqGeneralSoulExchangeHero_default_instance_.get();
}
// -------------------------------------------------------------------

// GeneralSoulExchangeHeroAck

// optional uint32 error = 1;
inline void GeneralSoulExchangeHeroAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 GeneralSoulExchangeHeroAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.GeneralSoulExchangeHeroAck.error)
  return error_;
}
inline void GeneralSoulExchangeHeroAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.GeneralSoulExchangeHeroAck.error)
}

// optional uint32 heroId = 2;
inline void GeneralSoulExchangeHeroAck::clear_heroid() {
  heroid_ = 0u;
}
inline ::google::protobuf::uint32 GeneralSoulExchangeHeroAck::heroid() const {
  // @@protoc_insertion_point(field_get:NetMsg.GeneralSoulExchangeHeroAck.heroId)
  return heroid_;
}
inline void GeneralSoulExchangeHeroAck::set_heroid(::google::protobuf::uint32 value) {
  
  heroid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.GeneralSoulExchangeHeroAck.heroId)
}

inline const GeneralSoulExchangeHeroAck* GeneralSoulExchangeHeroAck::internal_default_instance() {
  return &GeneralSoulExchangeHeroAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqShopItem

// optional uint32 shopId = 1;
inline void ReqShopItem::clear_shopid() {
  shopid_ = 0u;
}
inline ::google::protobuf::uint32 ReqShopItem::shopid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqShopItem.shopId)
  return shopid_;
}
inline void ReqShopItem::set_shopid(::google::protobuf::uint32 value) {
  
  shopid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqShopItem.shopId)
}

inline const ReqShopItem* ReqShopItem::internal_default_instance() {
  return &ReqShopItem_default_instance_.get();
}
// -------------------------------------------------------------------

// ShopItem

// optional uint32 itemId = 1;
inline void ShopItem::clear_itemid() {
  itemid_ = 0u;
}
inline ::google::protobuf::uint32 ShopItem::itemid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ShopItem.itemId)
  return itemid_;
}
inline void ShopItem::set_itemid(::google::protobuf::uint32 value) {
  
  itemid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ShopItem.itemId)
}

// optional uint32 itemNum = 2;
inline void ShopItem::clear_itemnum() {
  itemnum_ = 0u;
}
inline ::google::protobuf::uint32 ShopItem::itemnum() const {
  // @@protoc_insertion_point(field_get:NetMsg.ShopItem.itemNum)
  return itemnum_;
}
inline void ShopItem::set_itemnum(::google::protobuf::uint32 value) {
  
  itemnum_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ShopItem.itemNum)
}

// optional uint32 currencyType = 3;
inline void ShopItem::clear_currencytype() {
  currencytype_ = 0u;
}
inline ::google::protobuf::uint32 ShopItem::currencytype() const {
  // @@protoc_insertion_point(field_get:NetMsg.ShopItem.currencyType)
  return currencytype_;
}
inline void ShopItem::set_currencytype(::google::protobuf::uint32 value) {
  
  currencytype_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ShopItem.currencyType)
}

// optional uint32 price = 4;
inline void ShopItem::clear_price() {
  price_ = 0u;
}
inline ::google::protobuf::uint32 ShopItem::price() const {
  // @@protoc_insertion_point(field_get:NetMsg.ShopItem.price)
  return price_;
}
inline void ShopItem::set_price(::google::protobuf::uint32 value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ShopItem.price)
}

// optional uint32 buyTimes = 5;
inline void ShopItem::clear_buytimes() {
  buytimes_ = 0u;
}
inline ::google::protobuf::uint32 ShopItem::buytimes() const {
  // @@protoc_insertion_point(field_get:NetMsg.ShopItem.buyTimes)
  return buytimes_;
}
inline void ShopItem::set_buytimes(::google::protobuf::uint32 value) {
  
  buytimes_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ShopItem.buyTimes)
}

inline const ShopItem* ShopItem::internal_default_instance() {
  return &ShopItem_default_instance_.get();
}
// -------------------------------------------------------------------

// ShopItemAck

// optional uint32 shopId = 1;
inline void ShopItemAck::clear_shopid() {
  shopid_ = 0u;
}
inline ::google::protobuf::uint32 ShopItemAck::shopid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ShopItemAck.shopId)
  return shopid_;
}
inline void ShopItemAck::set_shopid(::google::protobuf::uint32 value) {
  
  shopid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ShopItemAck.shopId)
}

// optional uint32 refreshTime = 2;
inline void ShopItemAck::clear_refreshtime() {
  refreshtime_ = 0u;
}
inline ::google::protobuf::uint32 ShopItemAck::refreshtime() const {
  // @@protoc_insertion_point(field_get:NetMsg.ShopItemAck.refreshTime)
  return refreshtime_;
}
inline void ShopItemAck::set_refreshtime(::google::protobuf::uint32 value) {
  
  refreshtime_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ShopItemAck.refreshTime)
}

// repeated .NetMsg.ShopItem items = 3;
inline int ShopItemAck::items_size() const {
  return items_.size();
}
inline void ShopItemAck::clear_items() {
  items_.Clear();
}
inline const ::NetMsg::ShopItem& ShopItemAck::items(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.ShopItemAck.items)
  return items_.Get(index);
}
inline ::NetMsg::ShopItem* ShopItemAck::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.ShopItemAck.items)
  return items_.Mutable(index);
}
inline ::NetMsg::ShopItem* ShopItemAck::add_items() {
  // @@protoc_insertion_point(field_add:NetMsg.ShopItemAck.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::ShopItem >*
ShopItemAck::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.ShopItemAck.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::ShopItem >&
ShopItemAck::items() const {
  // @@protoc_insertion_point(field_list:NetMsg.ShopItemAck.items)
  return items_;
}

inline const ShopItemAck* ShopItemAck::internal_default_instance() {
  return &ShopItemAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqBuyShop

// optional uint32 shopId = 1;
inline void ReqBuyShop::clear_shopid() {
  shopid_ = 0u;
}
inline ::google::protobuf::uint32 ReqBuyShop::shopid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqBuyShop.shopId)
  return shopid_;
}
inline void ReqBuyShop::set_shopid(::google::protobuf::uint32 value) {
  
  shopid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqBuyShop.shopId)
}

// optional uint32 shopPos = 2;
inline void ReqBuyShop::clear_shoppos() {
  shoppos_ = 0u;
}
inline ::google::protobuf::uint32 ReqBuyShop::shoppos() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqBuyShop.shopPos)
  return shoppos_;
}
inline void ReqBuyShop::set_shoppos(::google::protobuf::uint32 value) {
  
  shoppos_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqBuyShop.shopPos)
}

inline const ReqBuyShop* ReqBuyShop::internal_default_instance() {
  return &ReqBuyShop_default_instance_.get();
}
// -------------------------------------------------------------------

// BuyShopAck

// optional uint32 shopId = 1;
inline void BuyShopAck::clear_shopid() {
  shopid_ = 0u;
}
inline ::google::protobuf::uint32 BuyShopAck::shopid() const {
  // @@protoc_insertion_point(field_get:NetMsg.BuyShopAck.shopId)
  return shopid_;
}
inline void BuyShopAck::set_shopid(::google::protobuf::uint32 value) {
  
  shopid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.BuyShopAck.shopId)
}

// optional uint32 shopPos = 2;
inline void BuyShopAck::clear_shoppos() {
  shoppos_ = 0u;
}
inline ::google::protobuf::uint32 BuyShopAck::shoppos() const {
  // @@protoc_insertion_point(field_get:NetMsg.BuyShopAck.shopPos)
  return shoppos_;
}
inline void BuyShopAck::set_shoppos(::google::protobuf::uint32 value) {
  
  shoppos_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.BuyShopAck.shopPos)
}

// optional uint32 error = 3;
inline void BuyShopAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 BuyShopAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.BuyShopAck.error)
  return error_;
}
inline void BuyShopAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.BuyShopAck.error)
}

inline const BuyShopAck* BuyShopAck::internal_default_instance() {
  return &BuyShopAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqRefreshShop

inline const ReqRefreshShop* ReqRefreshShop::internal_default_instance() {
  return &ReqRefreshShop_default_instance_.get();
}
// -------------------------------------------------------------------

// RefreshShopAck

inline const RefreshShopAck* RefreshShopAck::internal_default_instance() {
  return &RefreshShopAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqEvolveHero

// optional uint64 heroId = 1;
inline void ReqEvolveHero::clear_heroid() {
  heroid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ReqEvolveHero::heroid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqEvolveHero.heroId)
  return heroid_;
}
inline void ReqEvolveHero::set_heroid(::google::protobuf::uint64 value) {
  
  heroid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqEvolveHero.heroId)
}

// optional uint64 eatHeroId = 2;
inline void ReqEvolveHero::clear_eatheroid() {
  eatheroid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ReqEvolveHero::eatheroid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqEvolveHero.eatHeroId)
  return eatheroid_;
}
inline void ReqEvolveHero::set_eatheroid(::google::protobuf::uint64 value) {
  
  eatheroid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqEvolveHero.eatHeroId)
}

inline const ReqEvolveHero* ReqEvolveHero::internal_default_instance() {
  return &ReqEvolveHero_default_instance_.get();
}
// -------------------------------------------------------------------

// EvolveHeroAck

// optional uint64 heroId = 1;
inline void EvolveHeroAck::clear_heroid() {
  heroid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 EvolveHeroAck::heroid() const {
  // @@protoc_insertion_point(field_get:NetMsg.EvolveHeroAck.heroId)
  return heroid_;
}
inline void EvolveHeroAck::set_heroid(::google::protobuf::uint64 value) {
  
  heroid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.EvolveHeroAck.heroId)
}

// optional uint32 error = 2;
inline void EvolveHeroAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 EvolveHeroAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.EvolveHeroAck.error)
  return error_;
}
inline void EvolveHeroAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.EvolveHeroAck.error)
}

inline const EvolveHeroAck* EvolveHeroAck::internal_default_instance() {
  return &EvolveHeroAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqAdvancementRank

// optional uint32 rank = 1;
inline void ReqAdvancementRank::clear_rank() {
  rank_ = 0u;
}
inline ::google::protobuf::uint32 ReqAdvancementRank::rank() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqAdvancementRank.rank)
  return rank_;
}
inline void ReqAdvancementRank::set_rank(::google::protobuf::uint32 value) {
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqAdvancementRank.rank)
}

inline const ReqAdvancementRank* ReqAdvancementRank::internal_default_instance() {
  return &ReqAdvancementRank_default_instance_.get();
}
// -------------------------------------------------------------------

// AdvancementRankAck

// optional uint32 rank = 1;
inline void AdvancementRankAck::clear_rank() {
  rank_ = 0u;
}
inline ::google::protobuf::uint32 AdvancementRankAck::rank() const {
  // @@protoc_insertion_point(field_get:NetMsg.AdvancementRankAck.rank)
  return rank_;
}
inline void AdvancementRankAck::set_rank(::google::protobuf::uint32 value) {
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.AdvancementRankAck.rank)
}

// optional uint32 error = 2;
inline void AdvancementRankAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 AdvancementRankAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.AdvancementRankAck.error)
  return error_;
}
inline void AdvancementRankAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.AdvancementRankAck.error)
}

inline const AdvancementRankAck* AdvancementRankAck::internal_default_instance() {
  return &AdvancementRankAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqRankTitle

// optional uint32 rank = 1;
inline void ReqRankTitle::clear_rank() {
  rank_ = 0u;
}
inline ::google::protobuf::uint32 ReqRankTitle::rank() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqRankTitle.rank)
  return rank_;
}
inline void ReqRankTitle::set_rank(::google::protobuf::uint32 value) {
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqRankTitle.rank)
}

inline const ReqRankTitle* ReqRankTitle::internal_default_instance() {
  return &ReqRankTitle_default_instance_.get();
}
// -------------------------------------------------------------------

// RankTitlePlayer

// optional uint32 title = 1;
inline void RankTitlePlayer::clear_title() {
  title_ = 0u;
}
inline ::google::protobuf::uint32 RankTitlePlayer::title() const {
  // @@protoc_insertion_point(field_get:NetMsg.RankTitlePlayer.title)
  return title_;
}
inline void RankTitlePlayer::set_title(::google::protobuf::uint32 value) {
  
  title_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.RankTitlePlayer.title)
}

// optional uint32 playerNum = 2;
inline void RankTitlePlayer::clear_playernum() {
  playernum_ = 0u;
}
inline ::google::protobuf::uint32 RankTitlePlayer::playernum() const {
  // @@protoc_insertion_point(field_get:NetMsg.RankTitlePlayer.playerNum)
  return playernum_;
}
inline void RankTitlePlayer::set_playernum(::google::protobuf::uint32 value) {
  
  playernum_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.RankTitlePlayer.playerNum)
}

inline const RankTitlePlayer* RankTitlePlayer::internal_default_instance() {
  return &RankTitlePlayer_default_instance_.get();
}
// -------------------------------------------------------------------

// RankTitleAck

// optional uint32 rank = 1;
inline void RankTitleAck::clear_rank() {
  rank_ = 0u;
}
inline ::google::protobuf::uint32 RankTitleAck::rank() const {
  // @@protoc_insertion_point(field_get:NetMsg.RankTitleAck.rank)
  return rank_;
}
inline void RankTitleAck::set_rank(::google::protobuf::uint32 value) {
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.RankTitleAck.rank)
}

// repeated .NetMsg.RankTitlePlayer players = 2;
inline int RankTitleAck::players_size() const {
  return players_.size();
}
inline void RankTitleAck::clear_players() {
  players_.Clear();
}
inline const ::NetMsg::RankTitlePlayer& RankTitleAck::players(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.RankTitleAck.players)
  return players_.Get(index);
}
inline ::NetMsg::RankTitlePlayer* RankTitleAck::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.RankTitleAck.players)
  return players_.Mutable(index);
}
inline ::NetMsg::RankTitlePlayer* RankTitleAck::add_players() {
  // @@protoc_insertion_point(field_add:NetMsg.RankTitleAck.players)
  return players_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::RankTitlePlayer >*
RankTitleAck::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.RankTitleAck.players)
  return &players_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::RankTitlePlayer >&
RankTitleAck::players() const {
  // @@protoc_insertion_point(field_list:NetMsg.RankTitleAck.players)
  return players_;
}

inline const RankTitleAck* RankTitleAck::internal_default_instance() {
  return &RankTitleAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqTitleInfo

// optional uint32 title = 1;
inline void ReqTitleInfo::clear_title() {
  title_ = 0u;
}
inline ::google::protobuf::uint32 ReqTitleInfo::title() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqTitleInfo.title)
  return title_;
}
inline void ReqTitleInfo::set_title(::google::protobuf::uint32 value) {
  
  title_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqTitleInfo.title)
}

inline const ReqTitleInfo* ReqTitleInfo::internal_default_instance() {
  return &ReqTitleInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// TitleInfoPlayer

// optional uint32 id = 1;
inline void TitleInfoPlayer::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 TitleInfoPlayer::id() const {
  // @@protoc_insertion_point(field_get:NetMsg.TitleInfoPlayer.id)
  return id_;
}
inline void TitleInfoPlayer::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.TitleInfoPlayer.id)
}

// optional string name = 2;
inline void TitleInfoPlayer::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TitleInfoPlayer::name() const {
  // @@protoc_insertion_point(field_get:NetMsg.TitleInfoPlayer.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TitleInfoPlayer::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetMsg.TitleInfoPlayer.name)
}
inline void TitleInfoPlayer::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetMsg.TitleInfoPlayer.name)
}
inline void TitleInfoPlayer::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetMsg.TitleInfoPlayer.name)
}
inline ::std::string* TitleInfoPlayer::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:NetMsg.TitleInfoPlayer.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TitleInfoPlayer::release_name() {
  // @@protoc_insertion_point(field_release:NetMsg.TitleInfoPlayer.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TitleInfoPlayer::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:NetMsg.TitleInfoPlayer.name)
}

inline const TitleInfoPlayer* TitleInfoPlayer::internal_default_instance() {
  return &TitleInfoPlayer_default_instance_.get();
}
// -------------------------------------------------------------------

// TitleInfoAck

// optional uint32 title = 1;
inline void TitleInfoAck::clear_title() {
  title_ = 0u;
}
inline ::google::protobuf::uint32 TitleInfoAck::title() const {
  // @@protoc_insertion_point(field_get:NetMsg.TitleInfoAck.title)
  return title_;
}
inline void TitleInfoAck::set_title(::google::protobuf::uint32 value) {
  
  title_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.TitleInfoAck.title)
}

// optional uint32 leftTime = 2;
inline void TitleInfoAck::clear_lefttime() {
  lefttime_ = 0u;
}
inline ::google::protobuf::uint32 TitleInfoAck::lefttime() const {
  // @@protoc_insertion_point(field_get:NetMsg.TitleInfoAck.leftTime)
  return lefttime_;
}
inline void TitleInfoAck::set_lefttime(::google::protobuf::uint32 value) {
  
  lefttime_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.TitleInfoAck.leftTime)
}

// optional uint32 curPlayerNum = 3;
inline void TitleInfoAck::clear_curplayernum() {
  curplayernum_ = 0u;
}
inline ::google::protobuf::uint32 TitleInfoAck::curplayernum() const {
  // @@protoc_insertion_point(field_get:NetMsg.TitleInfoAck.curPlayerNum)
  return curplayernum_;
}
inline void TitleInfoAck::set_curplayernum(::google::protobuf::uint32 value) {
  
  curplayernum_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.TitleInfoAck.curPlayerNum)
}

// repeated .NetMsg.TitleInfoPlayer players = 4;
inline int TitleInfoAck::players_size() const {
  return players_.size();
}
inline void TitleInfoAck::clear_players() {
  players_.Clear();
}
inline const ::NetMsg::TitleInfoPlayer& TitleInfoAck::players(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.TitleInfoAck.players)
  return players_.Get(index);
}
inline ::NetMsg::TitleInfoPlayer* TitleInfoAck::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.TitleInfoAck.players)
  return players_.Mutable(index);
}
inline ::NetMsg::TitleInfoPlayer* TitleInfoAck::add_players() {
  // @@protoc_insertion_point(field_add:NetMsg.TitleInfoAck.players)
  return players_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::TitleInfoPlayer >*
TitleInfoAck::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.TitleInfoAck.players)
  return &players_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::TitleInfoPlayer >&
TitleInfoAck::players() const {
  // @@protoc_insertion_point(field_list:NetMsg.TitleInfoAck.players)
  return players_;
}

// optional bool meIsElection = 5;
inline void TitleInfoAck::clear_meiselection() {
  meiselection_ = false;
}
inline bool TitleInfoAck::meiselection() const {
  // @@protoc_insertion_point(field_get:NetMsg.TitleInfoAck.meIsElection)
  return meiselection_;
}
inline void TitleInfoAck::set_meiselection(bool value) {
  
  meiselection_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.TitleInfoAck.meIsElection)
}

// optional uint32 electionData = 6;
inline void TitleInfoAck::clear_electiondata() {
  electiondata_ = 0u;
}
inline ::google::protobuf::uint32 TitleInfoAck::electiondata() const {
  // @@protoc_insertion_point(field_get:NetMsg.TitleInfoAck.electionData)
  return electiondata_;
}
inline void TitleInfoAck::set_electiondata(::google::protobuf::uint32 value) {
  
  electiondata_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.TitleInfoAck.electionData)
}

inline const TitleInfoAck* TitleInfoAck::internal_default_instance() {
  return &TitleInfoAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqElectionTitle

// optional uint32 title = 1;
inline void ReqElectionTitle::clear_title() {
  title_ = 0u;
}
inline ::google::protobuf::uint32 ReqElectionTitle::title() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqElectionTitle.title)
  return title_;
}
inline void ReqElectionTitle::set_title(::google::protobuf::uint32 value) {
  
  title_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqElectionTitle.title)
}

inline const ReqElectionTitle* ReqElectionTitle::internal_default_instance() {
  return &ReqElectionTitle_default_instance_.get();
}
// -------------------------------------------------------------------

// ElectionTitleAck

// optional uint32 title = 1;
inline void ElectionTitleAck::clear_title() {
  title_ = 0u;
}
inline ::google::protobuf::uint32 ElectionTitleAck::title() const {
  // @@protoc_insertion_point(field_get:NetMsg.ElectionTitleAck.title)
  return title_;
}
inline void ElectionTitleAck::set_title(::google::protobuf::uint32 value) {
  
  title_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ElectionTitleAck.title)
}

// optional uint32 error = 2;
inline void ElectionTitleAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 ElectionTitleAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.ElectionTitleAck.error)
  return error_;
}
inline void ElectionTitleAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ElectionTitleAck.error)
}

// optional uint32 playerNum = 3;
inline void ElectionTitleAck::clear_playernum() {
  playernum_ = 0u;
}
inline ::google::protobuf::uint32 ElectionTitleAck::playernum() const {
  // @@protoc_insertion_point(field_get:NetMsg.ElectionTitleAck.playerNum)
  return playernum_;
}
inline void ElectionTitleAck::set_playernum(::google::protobuf::uint32 value) {
  
  playernum_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ElectionTitleAck.playerNum)
}

inline const ElectionTitleAck* ElectionTitleAck::internal_default_instance() {
  return &ElectionTitleAck_default_instance_.get();
}
// -------------------------------------------------------------------

// HeroClassSkill

// optional uint32 skillId = 1;
inline void HeroClassSkill::clear_skillid() {
  skillid_ = 0u;
}
inline ::google::protobuf::uint32 HeroClassSkill::skillid() const {
  // @@protoc_insertion_point(field_get:NetMsg.HeroClassSkill.skillId)
  return skillid_;
}
inline void HeroClassSkill::set_skillid(::google::protobuf::uint32 value) {
  
  skillid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.HeroClassSkill.skillId)
}

// optional uint32 skillLv = 2;
inline void HeroClassSkill::clear_skilllv() {
  skilllv_ = 0u;
}
inline ::google::protobuf::uint32 HeroClassSkill::skilllv() const {
  // @@protoc_insertion_point(field_get:NetMsg.HeroClassSkill.skillLv)
  return skilllv_;
}
inline void HeroClassSkill::set_skilllv(::google::protobuf::uint32 value) {
  
  skilllv_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.HeroClassSkill.skillLv)
}

// optional uint32 exp = 3;
inline void HeroClassSkill::clear_exp() {
  exp_ = 0u;
}
inline ::google::protobuf::uint32 HeroClassSkill::exp() const {
  // @@protoc_insertion_point(field_get:NetMsg.HeroClassSkill.exp)
  return exp_;
}
inline void HeroClassSkill::set_exp(::google::protobuf::uint32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.HeroClassSkill.exp)
}

inline const HeroClassSkill* HeroClassSkill::internal_default_instance() {
  return &HeroClassSkill_default_instance_.get();
}
// -------------------------------------------------------------------

// HeroClassInfo

// optional uint32 classId = 1;
inline void HeroClassInfo::clear_classid() {
  classid_ = 0u;
}
inline ::google::protobuf::uint32 HeroClassInfo::classid() const {
  // @@protoc_insertion_point(field_get:NetMsg.HeroClassInfo.classId)
  return classid_;
}
inline void HeroClassInfo::set_classid(::google::protobuf::uint32 value) {
  
  classid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.HeroClassInfo.classId)
}

// optional uint32 force = 2;
inline void HeroClassInfo::clear_force() {
  force_ = 0u;
}
inline ::google::protobuf::uint32 HeroClassInfo::force() const {
  // @@protoc_insertion_point(field_get:NetMsg.HeroClassInfo.force)
  return force_;
}
inline void HeroClassInfo::set_force(::google::protobuf::uint32 value) {
  
  force_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.HeroClassInfo.force)
}

// optional .NetMsg.HeroAttr star = 3;
inline bool HeroClassInfo::has_star() const {
  return this != internal_default_instance() && star_ != NULL;
}
inline void HeroClassInfo::clear_star() {
  if (GetArenaNoVirtual() == NULL && star_ != NULL) delete star_;
  star_ = NULL;
}
inline const ::NetMsg::HeroAttr& HeroClassInfo::star() const {
  // @@protoc_insertion_point(field_get:NetMsg.HeroClassInfo.star)
  return star_ != NULL ? *star_
                         : *::NetMsg::HeroAttr::internal_default_instance();
}
inline ::NetMsg::HeroAttr* HeroClassInfo::mutable_star() {
  
  if (star_ == NULL) {
    star_ = new ::NetMsg::HeroAttr;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.HeroClassInfo.star)
  return star_;
}
inline ::NetMsg::HeroAttr* HeroClassInfo::release_star() {
  // @@protoc_insertion_point(field_release:NetMsg.HeroClassInfo.star)
  
  ::NetMsg::HeroAttr* temp = star_;
  star_ = NULL;
  return temp;
}
inline void HeroClassInfo::set_allocated_star(::NetMsg::HeroAttr* star) {
  delete star_;
  star_ = star;
  if (star) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.HeroClassInfo.star)
}

// optional .NetMsg.HeroAttr strength = 4;
inline bool HeroClassInfo::has_strength() const {
  return this != internal_default_instance() && strength_ != NULL;
}
inline void HeroClassInfo::clear_strength() {
  if (GetArenaNoVirtual() == NULL && strength_ != NULL) delete strength_;
  strength_ = NULL;
}
inline const ::NetMsg::HeroAttr& HeroClassInfo::strength() const {
  // @@protoc_insertion_point(field_get:NetMsg.HeroClassInfo.strength)
  return strength_ != NULL ? *strength_
                         : *::NetMsg::HeroAttr::internal_default_instance();
}
inline ::NetMsg::HeroAttr* HeroClassInfo::mutable_strength() {
  
  if (strength_ == NULL) {
    strength_ = new ::NetMsg::HeroAttr;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.HeroClassInfo.strength)
  return strength_;
}
inline ::NetMsg::HeroAttr* HeroClassInfo::release_strength() {
  // @@protoc_insertion_point(field_release:NetMsg.HeroClassInfo.strength)
  
  ::NetMsg::HeroAttr* temp = strength_;
  strength_ = NULL;
  return temp;
}
inline void HeroClassInfo::set_allocated_strength(::NetMsg::HeroAttr* strength) {
  delete strength_;
  strength_ = strength;
  if (strength) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.HeroClassInfo.strength)
}

// optional .NetMsg.HeroAttr leadership = 5;
inline bool HeroClassInfo::has_leadership() const {
  return this != internal_default_instance() && leadership_ != NULL;
}
inline void HeroClassInfo::clear_leadership() {
  if (GetArenaNoVirtual() == NULL && leadership_ != NULL) delete leadership_;
  leadership_ = NULL;
}
inline const ::NetMsg::HeroAttr& HeroClassInfo::leadership() const {
  // @@protoc_insertion_point(field_get:NetMsg.HeroClassInfo.leadership)
  return leadership_ != NULL ? *leadership_
                         : *::NetMsg::HeroAttr::internal_default_instance();
}
inline ::NetMsg::HeroAttr* HeroClassInfo::mutable_leadership() {
  
  if (leadership_ == NULL) {
    leadership_ = new ::NetMsg::HeroAttr;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.HeroClassInfo.leadership)
  return leadership_;
}
inline ::NetMsg::HeroAttr* HeroClassInfo::release_leadership() {
  // @@protoc_insertion_point(field_release:NetMsg.HeroClassInfo.leadership)
  
  ::NetMsg::HeroAttr* temp = leadership_;
  leadership_ = NULL;
  return temp;
}
inline void HeroClassInfo::set_allocated_leadership(::NetMsg::HeroAttr* leadership) {
  delete leadership_;
  leadership_ = leadership;
  if (leadership) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.HeroClassInfo.leadership)
}

// optional .NetMsg.HeroAttr wisdom = 6;
inline bool HeroClassInfo::has_wisdom() const {
  return this != internal_default_instance() && wisdom_ != NULL;
}
inline void HeroClassInfo::clear_wisdom() {
  if (GetArenaNoVirtual() == NULL && wisdom_ != NULL) delete wisdom_;
  wisdom_ = NULL;
}
inline const ::NetMsg::HeroAttr& HeroClassInfo::wisdom() const {
  // @@protoc_insertion_point(field_get:NetMsg.HeroClassInfo.wisdom)
  return wisdom_ != NULL ? *wisdom_
                         : *::NetMsg::HeroAttr::internal_default_instance();
}
inline ::NetMsg::HeroAttr* HeroClassInfo::mutable_wisdom() {
  
  if (wisdom_ == NULL) {
    wisdom_ = new ::NetMsg::HeroAttr;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.HeroClassInfo.wisdom)
  return wisdom_;
}
inline ::NetMsg::HeroAttr* HeroClassInfo::release_wisdom() {
  // @@protoc_insertion_point(field_release:NetMsg.HeroClassInfo.wisdom)
  
  ::NetMsg::HeroAttr* temp = wisdom_;
  wisdom_ = NULL;
  return temp;
}
inline void HeroClassInfo::set_allocated_wisdom(::NetMsg::HeroAttr* wisdom) {
  delete wisdom_;
  wisdom_ = wisdom;
  if (wisdom) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.HeroClassInfo.wisdom)
}

// optional .NetMsg.HeroAttr charm = 7;
inline bool HeroClassInfo::has_charm() const {
  return this != internal_default_instance() && charm_ != NULL;
}
inline void HeroClassInfo::clear_charm() {
  if (GetArenaNoVirtual() == NULL && charm_ != NULL) delete charm_;
  charm_ = NULL;
}
inline const ::NetMsg::HeroAttr& HeroClassInfo::charm() const {
  // @@protoc_insertion_point(field_get:NetMsg.HeroClassInfo.charm)
  return charm_ != NULL ? *charm_
                         : *::NetMsg::HeroAttr::internal_default_instance();
}
inline ::NetMsg::HeroAttr* HeroClassInfo::mutable_charm() {
  
  if (charm_ == NULL) {
    charm_ = new ::NetMsg::HeroAttr;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.HeroClassInfo.charm)
  return charm_;
}
inline ::NetMsg::HeroAttr* HeroClassInfo::release_charm() {
  // @@protoc_insertion_point(field_release:NetMsg.HeroClassInfo.charm)
  
  ::NetMsg::HeroAttr* temp = charm_;
  charm_ = NULL;
  return temp;
}
inline void HeroClassInfo::set_allocated_charm(::NetMsg::HeroAttr* charm) {
  delete charm_;
  charm_ = charm;
  if (charm) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.HeroClassInfo.charm)
}

// optional .NetMsg.HeroAttr luck = 8;
inline bool HeroClassInfo::has_luck() const {
  return this != internal_default_instance() && luck_ != NULL;
}
inline void HeroClassInfo::clear_luck() {
  if (GetArenaNoVirtual() == NULL && luck_ != NULL) delete luck_;
  luck_ = NULL;
}
inline const ::NetMsg::HeroAttr& HeroClassInfo::luck() const {
  // @@protoc_insertion_point(field_get:NetMsg.HeroClassInfo.luck)
  return luck_ != NULL ? *luck_
                         : *::NetMsg::HeroAttr::internal_default_instance();
}
inline ::NetMsg::HeroAttr* HeroClassInfo::mutable_luck() {
  
  if (luck_ == NULL) {
    luck_ = new ::NetMsg::HeroAttr;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.HeroClassInfo.luck)
  return luck_;
}
inline ::NetMsg::HeroAttr* HeroClassInfo::release_luck() {
  // @@protoc_insertion_point(field_release:NetMsg.HeroClassInfo.luck)
  
  ::NetMsg::HeroAttr* temp = luck_;
  luck_ = NULL;
  return temp;
}
inline void HeroClassInfo::set_allocated_luck(::NetMsg::HeroAttr* luck) {
  delete luck_;
  luck_ = luck;
  if (luck) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.HeroClassInfo.luck)
}

// repeated .NetMsg.HeroClassSkill skills = 9;
inline int HeroClassInfo::skills_size() const {
  return skills_.size();
}
inline void HeroClassInfo::clear_skills() {
  skills_.Clear();
}
inline const ::NetMsg::HeroClassSkill& HeroClassInfo::skills(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.HeroClassInfo.skills)
  return skills_.Get(index);
}
inline ::NetMsg::HeroClassSkill* HeroClassInfo::mutable_skills(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.HeroClassInfo.skills)
  return skills_.Mutable(index);
}
inline ::NetMsg::HeroClassSkill* HeroClassInfo::add_skills() {
  // @@protoc_insertion_point(field_add:NetMsg.HeroClassInfo.skills)
  return skills_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::HeroClassSkill >*
HeroClassInfo::mutable_skills() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.HeroClassInfo.skills)
  return &skills_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::HeroClassSkill >&
HeroClassInfo::skills() const {
  // @@protoc_insertion_point(field_list:NetMsg.HeroClassInfo.skills)
  return skills_;
}

inline const HeroClassInfo* HeroClassInfo::internal_default_instance() {
  return &HeroClassInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqHeroClass

// optional uint32 classId = 1;
inline void ReqHeroClass::clear_classid() {
  classid_ = 0u;
}
inline ::google::protobuf::uint32 ReqHeroClass::classid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqHeroClass.classId)
  return classid_;
}
inline void ReqHeroClass::set_classid(::google::protobuf::uint32 value) {
  
  classid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqHeroClass.classId)
}

inline const ReqHeroClass* ReqHeroClass::internal_default_instance() {
  return &ReqHeroClass_default_instance_.get();
}
// -------------------------------------------------------------------

// HeroClassAck

// optional .NetMsg.HeroClassInfo hero = 1;
inline bool HeroClassAck::has_hero() const {
  return this != internal_default_instance() && hero_ != NULL;
}
inline void HeroClassAck::clear_hero() {
  if (GetArenaNoVirtual() == NULL && hero_ != NULL) delete hero_;
  hero_ = NULL;
}
inline const ::NetMsg::HeroClassInfo& HeroClassAck::hero() const {
  // @@protoc_insertion_point(field_get:NetMsg.HeroClassAck.hero)
  return hero_ != NULL ? *hero_
                         : *::NetMsg::HeroClassInfo::internal_default_instance();
}
inline ::NetMsg::HeroClassInfo* HeroClassAck::mutable_hero() {
  
  if (hero_ == NULL) {
    hero_ = new ::NetMsg::HeroClassInfo;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.HeroClassAck.hero)
  return hero_;
}
inline ::NetMsg::HeroClassInfo* HeroClassAck::release_hero() {
  // @@protoc_insertion_point(field_release:NetMsg.HeroClassAck.hero)
  
  ::NetMsg::HeroClassInfo* temp = hero_;
  hero_ = NULL;
  return temp;
}
inline void HeroClassAck::set_allocated_hero(::NetMsg::HeroClassInfo* hero) {
  delete hero_;
  hero_ = hero;
  if (hero) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.HeroClassAck.hero)
}

inline const HeroClassAck* HeroClassAck::internal_default_instance() {
  return &HeroClassAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqStudySkill

// optional uint64 heroId = 1;
inline void ReqStudySkill::clear_heroid() {
  heroid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ReqStudySkill::heroid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqStudySkill.heroId)
  return heroid_;
}
inline void ReqStudySkill::set_heroid(::google::protobuf::uint64 value) {
  
  heroid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqStudySkill.heroId)
}

// optional uint32 heroClass = 2;
inline void ReqStudySkill::clear_heroclass() {
  heroclass_ = 0u;
}
inline ::google::protobuf::uint32 ReqStudySkill::heroclass() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqStudySkill.heroClass)
  return heroclass_;
}
inline void ReqStudySkill::set_heroclass(::google::protobuf::uint32 value) {
  
  heroclass_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqStudySkill.heroClass)
}

// optional uint32 skillId = 3;
inline void ReqStudySkill::clear_skillid() {
  skillid_ = 0u;
}
inline ::google::protobuf::uint32 ReqStudySkill::skillid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqStudySkill.skillId)
  return skillid_;
}
inline void ReqStudySkill::set_skillid(::google::protobuf::uint32 value) {
  
  skillid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqStudySkill.skillId)
}

inline const ReqStudySkill* ReqStudySkill::internal_default_instance() {
  return &ReqStudySkill_default_instance_.get();
}
// -------------------------------------------------------------------

// StudySkillAck

// optional uint64 heroId = 1;
inline void StudySkillAck::clear_heroid() {
  heroid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 StudySkillAck::heroid() const {
  // @@protoc_insertion_point(field_get:NetMsg.StudySkillAck.heroId)
  return heroid_;
}
inline void StudySkillAck::set_heroid(::google::protobuf::uint64 value) {
  
  heroid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.StudySkillAck.heroId)
}

// optional uint32 heroClass = 2;
inline void StudySkillAck::clear_heroclass() {
  heroclass_ = 0u;
}
inline ::google::protobuf::uint32 StudySkillAck::heroclass() const {
  // @@protoc_insertion_point(field_get:NetMsg.StudySkillAck.heroClass)
  return heroclass_;
}
inline void StudySkillAck::set_heroclass(::google::protobuf::uint32 value) {
  
  heroclass_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.StudySkillAck.heroClass)
}

// optional uint32 skillId = 3;
inline void StudySkillAck::clear_skillid() {
  skillid_ = 0u;
}
inline ::google::protobuf::uint32 StudySkillAck::skillid() const {
  // @@protoc_insertion_point(field_get:NetMsg.StudySkillAck.skillId)
  return skillid_;
}
inline void StudySkillAck::set_skillid(::google::protobuf::uint32 value) {
  
  skillid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.StudySkillAck.skillId)
}

// optional uint32 exp = 4;
inline void StudySkillAck::clear_exp() {
  exp_ = 0u;
}
inline ::google::protobuf::uint32 StudySkillAck::exp() const {
  // @@protoc_insertion_point(field_get:NetMsg.StudySkillAck.exp)
  return exp_;
}
inline void StudySkillAck::set_exp(::google::protobuf::uint32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.StudySkillAck.exp)
}

// optional uint32 crit = 5;
inline void StudySkillAck::clear_crit() {
  crit_ = 0u;
}
inline ::google::protobuf::uint32 StudySkillAck::crit() const {
  // @@protoc_insertion_point(field_get:NetMsg.StudySkillAck.crit)
  return crit_;
}
inline void StudySkillAck::set_crit(::google::protobuf::uint32 value) {
  
  crit_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.StudySkillAck.crit)
}

// optional uint32 error = 6;
inline void StudySkillAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 StudySkillAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.StudySkillAck.error)
  return error_;
}
inline void StudySkillAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.StudySkillAck.error)
}

inline const StudySkillAck* StudySkillAck::internal_default_instance() {
  return &StudySkillAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqStudyProperty

// optional uint64 heroId = 1;
inline void ReqStudyProperty::clear_heroid() {
  heroid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ReqStudyProperty::heroid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqStudyProperty.heroId)
  return heroid_;
}
inline void ReqStudyProperty::set_heroid(::google::protobuf::uint64 value) {
  
  heroid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqStudyProperty.heroId)
}

// optional uint32 heroClass = 2;
inline void ReqStudyProperty::clear_heroclass() {
  heroclass_ = 0u;
}
inline ::google::protobuf::uint32 ReqStudyProperty::heroclass() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqStudyProperty.heroClass)
  return heroclass_;
}
inline void ReqStudyProperty::set_heroclass(::google::protobuf::uint32 value) {
  
  heroclass_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqStudyProperty.heroClass)
}

// optional .NetMsg.HeroPropertyType type = 3;
inline void ReqStudyProperty::clear_type() {
  type_ = 0;
}
inline ::NetMsg::HeroPropertyType ReqStudyProperty::type() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqStudyProperty.type)
  return static_cast< ::NetMsg::HeroPropertyType >(type_);
}
inline void ReqStudyProperty::set_type(::NetMsg::HeroPropertyType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqStudyProperty.type)
}

inline const ReqStudyProperty* ReqStudyProperty::internal_default_instance() {
  return &ReqStudyProperty_default_instance_.get();
}
// -------------------------------------------------------------------

// StudyPropertyAck

// optional uint64 heroId = 1;
inline void StudyPropertyAck::clear_heroid() {
  heroid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 StudyPropertyAck::heroid() const {
  // @@protoc_insertion_point(field_get:NetMsg.StudyPropertyAck.heroId)
  return heroid_;
}
inline void StudyPropertyAck::set_heroid(::google::protobuf::uint64 value) {
  
  heroid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.StudyPropertyAck.heroId)
}

// optional uint32 heroClass = 2;
inline void StudyPropertyAck::clear_heroclass() {
  heroclass_ = 0u;
}
inline ::google::protobuf::uint32 StudyPropertyAck::heroclass() const {
  // @@protoc_insertion_point(field_get:NetMsg.StudyPropertyAck.heroClass)
  return heroclass_;
}
inline void StudyPropertyAck::set_heroclass(::google::protobuf::uint32 value) {
  
  heroclass_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.StudyPropertyAck.heroClass)
}

// optional .NetMsg.HeroPropertyType type = 3;
inline void StudyPropertyAck::clear_type() {
  type_ = 0;
}
inline ::NetMsg::HeroPropertyType StudyPropertyAck::type() const {
  // @@protoc_insertion_point(field_get:NetMsg.StudyPropertyAck.type)
  return static_cast< ::NetMsg::HeroPropertyType >(type_);
}
inline void StudyPropertyAck::set_type(::NetMsg::HeroPropertyType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.StudyPropertyAck.type)
}

// optional uint32 property = 4;
inline void StudyPropertyAck::clear_property() {
  property_ = 0u;
}
inline ::google::protobuf::uint32 StudyPropertyAck::property() const {
  // @@protoc_insertion_point(field_get:NetMsg.StudyPropertyAck.property)
  return property_;
}
inline void StudyPropertyAck::set_property(::google::protobuf::uint32 value) {
  
  property_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.StudyPropertyAck.property)
}

// optional uint32 crit = 5;
inline void StudyPropertyAck::clear_crit() {
  crit_ = 0u;
}
inline ::google::protobuf::uint32 StudyPropertyAck::crit() const {
  // @@protoc_insertion_point(field_get:NetMsg.StudyPropertyAck.crit)
  return crit_;
}
inline void StudyPropertyAck::set_crit(::google::protobuf::uint32 value) {
  
  crit_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.StudyPropertyAck.crit)
}

// optional uint32 error = 6;
inline void StudyPropertyAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 StudyPropertyAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.StudyPropertyAck.error)
  return error_;
}
inline void StudyPropertyAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.StudyPropertyAck.error)
}

inline const StudyPropertyAck* StudyPropertyAck::internal_default_instance() {
  return &StudyPropertyAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqRaffleHero

// optional uint32 id = 1;
inline void ReqRaffleHero::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 ReqRaffleHero::id() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqRaffleHero.id)
  return id_;
}
inline void ReqRaffleHero::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqRaffleHero.id)
}

// optional uint32 num = 2;
inline void ReqRaffleHero::clear_num() {
  num_ = 0u;
}
inline ::google::protobuf::uint32 ReqRaffleHero::num() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqRaffleHero.num)
  return num_;
}
inline void ReqRaffleHero::set_num(::google::protobuf::uint32 value) {
  
  num_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqRaffleHero.num)
}

inline const ReqRaffleHero* ReqRaffleHero::internal_default_instance() {
  return &ReqRaffleHero_default_instance_.get();
}
// -------------------------------------------------------------------

// RaffleHeroAck

// repeated uint64 heroUId = 1;
inline int RaffleHeroAck::herouid_size() const {
  return herouid_.size();
}
inline void RaffleHeroAck::clear_herouid() {
  herouid_.Clear();
}
inline ::google::protobuf::uint64 RaffleHeroAck::herouid(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.RaffleHeroAck.heroUId)
  return herouid_.Get(index);
}
inline void RaffleHeroAck::set_herouid(int index, ::google::protobuf::uint64 value) {
  herouid_.Set(index, value);
  // @@protoc_insertion_point(field_set:NetMsg.RaffleHeroAck.heroUId)
}
inline void RaffleHeroAck::add_herouid(::google::protobuf::uint64 value) {
  herouid_.Add(value);
  // @@protoc_insertion_point(field_add:NetMsg.RaffleHeroAck.heroUId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
RaffleHeroAck::herouid() const {
  // @@protoc_insertion_point(field_list:NetMsg.RaffleHeroAck.heroUId)
  return herouid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
RaffleHeroAck::mutable_herouid() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.RaffleHeroAck.heroUId)
  return &herouid_;
}

// optional uint32 error = 2;
inline void RaffleHeroAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 RaffleHeroAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.RaffleHeroAck.error)
  return error_;
}
inline void RaffleHeroAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.RaffleHeroAck.error)
}

inline const RaffleHeroAck* RaffleHeroAck::internal_default_instance() {
  return &RaffleHeroAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqRaffleHeroTimes

// optional uint32 id = 1;
inline void ReqRaffleHeroTimes::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 ReqRaffleHeroTimes::id() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqRaffleHeroTimes.id)
  return id_;
}
inline void ReqRaffleHeroTimes::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqRaffleHeroTimes.id)
}

inline const ReqRaffleHeroTimes* ReqRaffleHeroTimes::internal_default_instance() {
  return &ReqRaffleHeroTimes_default_instance_.get();
}
// -------------------------------------------------------------------

// RaffleHeroTimesAck

// optional uint32 id = 1;
inline void RaffleHeroTimesAck::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 RaffleHeroTimesAck::id() const {
  // @@protoc_insertion_point(field_get:NetMsg.RaffleHeroTimesAck.id)
  return id_;
}
inline void RaffleHeroTimesAck::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.RaffleHeroTimesAck.id)
}

// optional uint32 times = 2;
inline void RaffleHeroTimesAck::clear_times() {
  times_ = 0u;
}
inline ::google::protobuf::uint32 RaffleHeroTimesAck::times() const {
  // @@protoc_insertion_point(field_get:NetMsg.RaffleHeroTimesAck.times)
  return times_;
}
inline void RaffleHeroTimesAck::set_times(::google::protobuf::uint32 value) {
  
  times_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.RaffleHeroTimesAck.times)
}

// optional uint32 oneRaffTime = 3;
inline void RaffleHeroTimesAck::clear_onerafftime() {
  onerafftime_ = 0u;
}
inline ::google::protobuf::uint32 RaffleHeroTimesAck::onerafftime() const {
  // @@protoc_insertion_point(field_get:NetMsg.RaffleHeroTimesAck.oneRaffTime)
  return onerafftime_;
}
inline void RaffleHeroTimesAck::set_onerafftime(::google::protobuf::uint32 value) {
  
  onerafftime_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.RaffleHeroTimesAck.oneRaffTime)
}

inline const RaffleHeroTimesAck* RaffleHeroTimesAck::internal_default_instance() {
  return &RaffleHeroTimesAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqAddMoney

// optional int32 type = 1;
inline void ReqAddMoney::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 ReqAddMoney::type() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqAddMoney.type)
  return type_;
}
inline void ReqAddMoney::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqAddMoney.type)
}

// optional int32 add = 2;
inline void ReqAddMoney::clear_add() {
  add_ = 0;
}
inline ::google::protobuf::int32 ReqAddMoney::add() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqAddMoney.add)
  return add_;
}
inline void ReqAddMoney::set_add(::google::protobuf::int32 value) {
  
  add_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqAddMoney.add)
}

inline const ReqAddMoney* ReqAddMoney::internal_default_instance() {
  return &ReqAddMoney_default_instance_.get();
}
// -------------------------------------------------------------------

// AddMoneyAck

// optional int32 type = 1;
inline void AddMoneyAck::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 AddMoneyAck::type() const {
  // @@protoc_insertion_point(field_get:NetMsg.AddMoneyAck.type)
  return type_;
}
inline void AddMoneyAck::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.AddMoneyAck.type)
}

// optional int32 add = 2;
inline void AddMoneyAck::clear_add() {
  add_ = 0;
}
inline ::google::protobuf::int32 AddMoneyAck::add() const {
  // @@protoc_insertion_point(field_get:NetMsg.AddMoneyAck.add)
  return add_;
}
inline void AddMoneyAck::set_add(::google::protobuf::int32 value) {
  
  add_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.AddMoneyAck.add)
}

// optional uint32 error = 3;
inline void AddMoneyAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 AddMoneyAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.AddMoneyAck.error)
  return error_;
}
inline void AddMoneyAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.AddMoneyAck.error)
}

inline const AddMoneyAck* AddMoneyAck::internal_default_instance() {
  return &AddMoneyAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqLevelUpCamp

// optional .NetMsg.CampType type = 1;
inline void ReqLevelUpCamp::clear_type() {
  type_ = 0;
}
inline ::NetMsg::CampType ReqLevelUpCamp::type() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqLevelUpCamp.type)
  return static_cast< ::NetMsg::CampType >(type_);
}
inline void ReqLevelUpCamp::set_type(::NetMsg::CampType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqLevelUpCamp.type)
}

inline const ReqLevelUpCamp* ReqLevelUpCamp::internal_default_instance() {
  return &ReqLevelUpCamp_default_instance_.get();
}
// -------------------------------------------------------------------

// LevelUpCampAck

// optional .NetMsg.CampType type = 1;
inline void LevelUpCampAck::clear_type() {
  type_ = 0;
}
inline ::NetMsg::CampType LevelUpCampAck::type() const {
  // @@protoc_insertion_point(field_get:NetMsg.LevelUpCampAck.type)
  return static_cast< ::NetMsg::CampType >(type_);
}
inline void LevelUpCampAck::set_type(::NetMsg::CampType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.LevelUpCampAck.type)
}

// optional uint32 error = 3;
inline void LevelUpCampAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 LevelUpCampAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.LevelUpCampAck.error)
  return error_;
}
inline void LevelUpCampAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.LevelUpCampAck.error)
}

inline const LevelUpCampAck* LevelUpCampAck::internal_default_instance() {
  return &LevelUpCampAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqClearCampCD

// optional .NetMsg.CampType type = 1;
inline void ReqClearCampCD::clear_type() {
  type_ = 0;
}
inline ::NetMsg::CampType ReqClearCampCD::type() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqClearCampCD.type)
  return static_cast< ::NetMsg::CampType >(type_);
}
inline void ReqClearCampCD::set_type(::NetMsg::CampType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqClearCampCD.type)
}

inline const ReqClearCampCD* ReqClearCampCD::internal_default_instance() {
  return &ReqClearCampCD_default_instance_.get();
}
// -------------------------------------------------------------------

// ClearCampCDAck

// optional .NetMsg.CampType type = 1;
inline void ClearCampCDAck::clear_type() {
  type_ = 0;
}
inline ::NetMsg::CampType ClearCampCDAck::type() const {
  // @@protoc_insertion_point(field_get:NetMsg.ClearCampCDAck.type)
  return static_cast< ::NetMsg::CampType >(type_);
}
inline void ClearCampCDAck::set_type(::NetMsg::CampType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ClearCampCDAck.type)
}

// optional uint32 error = 2;
inline void ClearCampCDAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 ClearCampCDAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.ClearCampCDAck.error)
  return error_;
}
inline void ClearCampCDAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ClearCampCDAck.error)
}

inline const ClearCampCDAck* ClearCampCDAck::internal_default_instance() {
  return &ClearCampCDAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqCampState

// repeated .NetMsg.CampType types = 1;
inline int ReqCampState::types_size() const {
  return types_.size();
}
inline void ReqCampState::clear_types() {
  types_.Clear();
}
inline ::NetMsg::CampType ReqCampState::types(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqCampState.types)
  return static_cast< ::NetMsg::CampType >(types_.Get(index));
}
inline void ReqCampState::set_types(int index, ::NetMsg::CampType value) {
  types_.Set(index, value);
  // @@protoc_insertion_point(field_set:NetMsg.ReqCampState.types)
}
inline void ReqCampState::add_types(::NetMsg::CampType value) {
  types_.Add(value);
  // @@protoc_insertion_point(field_add:NetMsg.ReqCampState.types)
}
inline const ::google::protobuf::RepeatedField<int>&
ReqCampState::types() const {
  // @@protoc_insertion_point(field_list:NetMsg.ReqCampState.types)
  return types_;
}
inline ::google::protobuf::RepeatedField<int>*
ReqCampState::mutable_types() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.ReqCampState.types)
  return &types_;
}

inline const ReqCampState* ReqCampState::internal_default_instance() {
  return &ReqCampState_default_instance_.get();
}
// -------------------------------------------------------------------

// CampState

// optional .NetMsg.CampType type = 1;
inline void CampState::clear_type() {
  type_ = 0;
}
inline ::NetMsg::CampType CampState::type() const {
  // @@protoc_insertion_point(field_get:NetMsg.CampState.type)
  return static_cast< ::NetMsg::CampType >(type_);
}
inline void CampState::set_type(::NetMsg::CampType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CampState.type)
}

// optional uint32 level = 2;
inline void CampState::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 CampState::level() const {
  // @@protoc_insertion_point(field_get:NetMsg.CampState.level)
  return level_;
}
inline void CampState::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CampState.level)
}

// optional uint32 outputData = 3;
inline void CampState::clear_outputdata() {
  outputdata_ = 0u;
}
inline ::google::protobuf::uint32 CampState::outputdata() const {
  // @@protoc_insertion_point(field_get:NetMsg.CampState.outputData)
  return outputdata_;
}
inline void CampState::set_outputdata(::google::protobuf::uint32 value) {
  
  outputdata_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CampState.outputData)
}

// optional uint32 leftTime = 4;
inline void CampState::clear_lefttime() {
  lefttime_ = 0u;
}
inline ::google::protobuf::uint32 CampState::lefttime() const {
  // @@protoc_insertion_point(field_get:NetMsg.CampState.leftTime)
  return lefttime_;
}
inline void CampState::set_lefttime(::google::protobuf::uint32 value) {
  
  lefttime_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CampState.leftTime)
}

inline const CampState* CampState::internal_default_instance() {
  return &CampState_default_instance_.get();
}
// -------------------------------------------------------------------

// CampStateAck

// repeated .NetMsg.CampState states = 1;
inline int CampStateAck::states_size() const {
  return states_.size();
}
inline void CampStateAck::clear_states() {
  states_.Clear();
}
inline const ::NetMsg::CampState& CampStateAck::states(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.CampStateAck.states)
  return states_.Get(index);
}
inline ::NetMsg::CampState* CampStateAck::mutable_states(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.CampStateAck.states)
  return states_.Mutable(index);
}
inline ::NetMsg::CampState* CampStateAck::add_states() {
  // @@protoc_insertion_point(field_add:NetMsg.CampStateAck.states)
  return states_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::CampState >*
CampStateAck::mutable_states() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.CampStateAck.states)
  return &states_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::CampState >&
CampStateAck::states() const {
  // @@protoc_insertion_point(field_list:NetMsg.CampStateAck.states)
  return states_;
}

inline const CampStateAck* CampStateAck::internal_default_instance() {
  return &CampStateAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqGetCampOut

// optional .NetMsg.CampType type = 1;
inline void ReqGetCampOut::clear_type() {
  type_ = 0;
}
inline ::NetMsg::CampType ReqGetCampOut::type() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqGetCampOut.type)
  return static_cast< ::NetMsg::CampType >(type_);
}
inline void ReqGetCampOut::set_type(::NetMsg::CampType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqGetCampOut.type)
}

inline const ReqGetCampOut* ReqGetCampOut::internal_default_instance() {
  return &ReqGetCampOut_default_instance_.get();
}
// -------------------------------------------------------------------

// GetCampOutAck

// optional .NetMsg.CampType type = 1;
inline void GetCampOutAck::clear_type() {
  type_ = 0;
}
inline ::NetMsg::CampType GetCampOutAck::type() const {
  // @@protoc_insertion_point(field_get:NetMsg.GetCampOutAck.type)
  return static_cast< ::NetMsg::CampType >(type_);
}
inline void GetCampOutAck::set_type(::NetMsg::CampType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.GetCampOutAck.type)
}

// optional uint32 output = 2;
inline void GetCampOutAck::clear_output() {
  output_ = 0u;
}
inline ::google::protobuf::uint32 GetCampOutAck::output() const {
  // @@protoc_insertion_point(field_get:NetMsg.GetCampOutAck.output)
  return output_;
}
inline void GetCampOutAck::set_output(::google::protobuf::uint32 value) {
  
  output_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.GetCampOutAck.output)
}

inline const GetCampOutAck* GetCampOutAck::internal_default_instance() {
  return &GetCampOutAck_default_instance_.get();
}
// -------------------------------------------------------------------

// CycleBattleAck

// optional uint32 maxDifficulty = 1;
inline void CycleBattleAck::clear_maxdifficulty() {
  maxdifficulty_ = 0u;
}
inline ::google::protobuf::uint32 CycleBattleAck::maxdifficulty() const {
  // @@protoc_insertion_point(field_get:NetMsg.CycleBattleAck.maxDifficulty)
  return maxdifficulty_;
}
inline void CycleBattleAck::set_maxdifficulty(::google::protobuf::uint32 value) {
  
  maxdifficulty_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CycleBattleAck.maxDifficulty)
}

// optional uint32 curDifficulty = 2;
inline void CycleBattleAck::clear_curdifficulty() {
  curdifficulty_ = 0u;
}
inline ::google::protobuf::uint32 CycleBattleAck::curdifficulty() const {
  // @@protoc_insertion_point(field_get:NetMsg.CycleBattleAck.curDifficulty)
  return curdifficulty_;
}
inline void CycleBattleAck::set_curdifficulty(::google::protobuf::uint32 value) {
  
  curdifficulty_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CycleBattleAck.curDifficulty)
}

// optional uint32 curRound = 3;
inline void CycleBattleAck::clear_curround() {
  curround_ = 0u;
}
inline ::google::protobuf::uint32 CycleBattleAck::curround() const {
  // @@protoc_insertion_point(field_get:NetMsg.CycleBattleAck.curRound)
  return curround_;
}
inline void CycleBattleAck::set_curround(::google::protobuf::uint32 value) {
  
  curround_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CycleBattleAck.curRound)
}

// optional uint32 leftUnlockTimes = 4;
inline void CycleBattleAck::clear_leftunlocktimes() {
  leftunlocktimes_ = 0u;
}
inline ::google::protobuf::uint32 CycleBattleAck::leftunlocktimes() const {
  // @@protoc_insertion_point(field_get:NetMsg.CycleBattleAck.leftUnlockTimes)
  return leftunlocktimes_;
}
inline void CycleBattleAck::set_leftunlocktimes(::google::protobuf::uint32 value) {
  
  leftunlocktimes_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CycleBattleAck.leftUnlockTimes)
}

// optional uint32 leftTime = 5;
inline void CycleBattleAck::clear_lefttime() {
  lefttime_ = 0u;
}
inline ::google::protobuf::uint32 CycleBattleAck::lefttime() const {
  // @@protoc_insertion_point(field_get:NetMsg.CycleBattleAck.leftTime)
  return lefttime_;
}
inline void CycleBattleAck::set_lefttime(::google::protobuf::uint32 value) {
  
  lefttime_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CycleBattleAck.leftTime)
}

inline const CycleBattleAck* CycleBattleAck::internal_default_instance() {
  return &CycleBattleAck_default_instance_.get();
}
// -------------------------------------------------------------------

// RefresshCycleAck

// optional uint32 error = 1;
inline void RefresshCycleAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 RefresshCycleAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.RefresshCycleAck.error)
  return error_;
}
inline void RefresshCycleAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.RefresshCycleAck.error)
}

inline const RefresshCycleAck* RefresshCycleAck::internal_default_instance() {
  return &RefresshCycleAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqSelectCycleDiff

// optional uint32 difficulty = 1;
inline void ReqSelectCycleDiff::clear_difficulty() {
  difficulty_ = 0u;
}
inline ::google::protobuf::uint32 ReqSelectCycleDiff::difficulty() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqSelectCycleDiff.difficulty)
  return difficulty_;
}
inline void ReqSelectCycleDiff::set_difficulty(::google::protobuf::uint32 value) {
  
  difficulty_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqSelectCycleDiff.difficulty)
}

inline const ReqSelectCycleDiff* ReqSelectCycleDiff::internal_default_instance() {
  return &ReqSelectCycleDiff_default_instance_.get();
}
// -------------------------------------------------------------------

// SelectCycleDiffAck

// optional uint32 difficulty = 1;
inline void SelectCycleDiffAck::clear_difficulty() {
  difficulty_ = 0u;
}
inline ::google::protobuf::uint32 SelectCycleDiffAck::difficulty() const {
  // @@protoc_insertion_point(field_get:NetMsg.SelectCycleDiffAck.difficulty)
  return difficulty_;
}
inline void SelectCycleDiffAck::set_difficulty(::google::protobuf::uint32 value) {
  
  difficulty_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.SelectCycleDiffAck.difficulty)
}

// optional uint32 error = 2;
inline void SelectCycleDiffAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 SelectCycleDiffAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.SelectCycleDiffAck.error)
  return error_;
}
inline void SelectCycleDiffAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.SelectCycleDiffAck.error)
}

inline const SelectCycleDiffAck* SelectCycleDiffAck::internal_default_instance() {
  return &SelectCycleDiffAck_default_instance_.get();
}
// -------------------------------------------------------------------

// CycleBattleInfoAck

// optional uint32 enemyPath = 1;
inline void CycleBattleInfoAck::clear_enemypath() {
  enemypath_ = 0u;
}
inline ::google::protobuf::uint32 CycleBattleInfoAck::enemypath() const {
  // @@protoc_insertion_point(field_get:NetMsg.CycleBattleInfoAck.enemyPath)
  return enemypath_;
}
inline void CycleBattleInfoAck::set_enemypath(::google::protobuf::uint32 value) {
  
  enemypath_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CycleBattleInfoAck.enemyPath)
}

// optional float percent = 2;
inline void CycleBattleInfoAck::clear_percent() {
  percent_ = 0;
}
inline float CycleBattleInfoAck::percent() const {
  // @@protoc_insertion_point(field_get:NetMsg.CycleBattleInfoAck.percent)
  return percent_;
}
inline void CycleBattleInfoAck::set_percent(float value) {
  
  percent_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CycleBattleInfoAck.percent)
}

// optional uint64 battleId = 3;
inline void CycleBattleInfoAck::clear_battleid() {
  battleid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CycleBattleInfoAck::battleid() const {
  // @@protoc_insertion_point(field_get:NetMsg.CycleBattleInfoAck.battleId)
  return battleid_;
}
inline void CycleBattleInfoAck::set_battleid(::google::protobuf::uint64 value) {
  
  battleid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CycleBattleInfoAck.battleId)
}

// optional uint32 enemyTeam = 4;
inline void CycleBattleInfoAck::clear_enemyteam() {
  enemyteam_ = 0u;
}
inline ::google::protobuf::uint32 CycleBattleInfoAck::enemyteam() const {
  // @@protoc_insertion_point(field_get:NetMsg.CycleBattleInfoAck.enemyTeam)
  return enemyteam_;
}
inline void CycleBattleInfoAck::set_enemyteam(::google::protobuf::uint32 value) {
  
  enemyteam_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CycleBattleInfoAck.enemyTeam)
}

inline const CycleBattleInfoAck* CycleBattleInfoAck::internal_default_instance() {
  return &CycleBattleInfoAck_default_instance_.get();
}
// -------------------------------------------------------------------

// AdvantureEventStatusChange

// optional uint32 advEventId = 1;
inline void AdvantureEventStatusChange::clear_adveventid() {
  adveventid_ = 0u;
}
inline ::google::protobuf::uint32 AdvantureEventStatusChange::adveventid() const {
  // @@protoc_insertion_point(field_get:NetMsg.AdvantureEventStatusChange.advEventId)
  return adveventid_;
}
inline void AdvantureEventStatusChange::set_adveventid(::google::protobuf::uint32 value) {
  
  adveventid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.AdvantureEventStatusChange.advEventId)
}

// optional .NetMsg.AdvantureEventStatus advEventStatus = 2;
inline void AdvantureEventStatusChange::clear_adveventstatus() {
  adveventstatus_ = 0;
}
inline ::NetMsg::AdvantureEventStatus AdvantureEventStatusChange::adveventstatus() const {
  // @@protoc_insertion_point(field_get:NetMsg.AdvantureEventStatusChange.advEventStatus)
  return static_cast< ::NetMsg::AdvantureEventStatus >(adveventstatus_);
}
inline void AdvantureEventStatusChange::set_adveventstatus(::NetMsg::AdvantureEventStatus value) {
  
  adveventstatus_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.AdvantureEventStatusChange.advEventStatus)
}

inline const AdvantureEventStatusChange* AdvantureEventStatusChange::internal_default_instance() {
  return &AdvantureEventStatusChange_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqRecruitHero

// optional uint32 recruitId = 1;
inline void ReqRecruitHero::clear_recruitid() {
  recruitid_ = 0u;
}
inline ::google::protobuf::uint32 ReqRecruitHero::recruitid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqRecruitHero.recruitId)
  return recruitid_;
}
inline void ReqRecruitHero::set_recruitid(::google::protobuf::uint32 value) {
  
  recruitid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqRecruitHero.recruitId)
}

inline const ReqRecruitHero* ReqRecruitHero::internal_default_instance() {
  return &ReqRecruitHero_default_instance_.get();
}
// -------------------------------------------------------------------

// RecruitHeroAck

// optional uint32 recruitId = 1;
inline void RecruitHeroAck::clear_recruitid() {
  recruitid_ = 0u;
}
inline ::google::protobuf::uint32 RecruitHeroAck::recruitid() const {
  // @@protoc_insertion_point(field_get:NetMsg.RecruitHeroAck.recruitId)
  return recruitid_;
}
inline void RecruitHeroAck::set_recruitid(::google::protobuf::uint32 value) {
  
  recruitid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.RecruitHeroAck.recruitId)
}

// optional uint32 error = 2;
inline void RecruitHeroAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 RecruitHeroAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.RecruitHeroAck.error)
  return error_;
}
inline void RecruitHeroAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.RecruitHeroAck.error)
}

inline const RecruitHeroAck* RecruitHeroAck::internal_default_instance() {
  return &RecruitHeroAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqRecruitedHero

// repeated uint32 recruitIds = 1;
inline int ReqRecruitedHero::recruitids_size() const {
  return recruitids_.size();
}
inline void ReqRecruitedHero::clear_recruitids() {
  recruitids_.Clear();
}
inline ::google::protobuf::uint32 ReqRecruitedHero::recruitids(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqRecruitedHero.recruitIds)
  return recruitids_.Get(index);
}
inline void ReqRecruitedHero::set_recruitids(int index, ::google::protobuf::uint32 value) {
  recruitids_.Set(index, value);
  // @@protoc_insertion_point(field_set:NetMsg.ReqRecruitedHero.recruitIds)
}
inline void ReqRecruitedHero::add_recruitids(::google::protobuf::uint32 value) {
  recruitids_.Add(value);
  // @@protoc_insertion_point(field_add:NetMsg.ReqRecruitedHero.recruitIds)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ReqRecruitedHero::recruitids() const {
  // @@protoc_insertion_point(field_list:NetMsg.ReqRecruitedHero.recruitIds)
  return recruitids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ReqRecruitedHero::mutable_recruitids() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.ReqRecruitedHero.recruitIds)
  return &recruitids_;
}

inline const ReqRecruitedHero* ReqRecruitedHero::internal_default_instance() {
  return &ReqRecruitedHero_default_instance_.get();
}
// -------------------------------------------------------------------

// RecruitedHeroAck

// repeated uint32 recruitId = 1;
inline int RecruitedHeroAck::recruitid_size() const {
  return recruitid_.size();
}
inline void RecruitedHeroAck::clear_recruitid() {
  recruitid_.Clear();
}
inline ::google::protobuf::uint32 RecruitedHeroAck::recruitid(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.RecruitedHeroAck.recruitId)
  return recruitid_.Get(index);
}
inline void RecruitedHeroAck::set_recruitid(int index, ::google::protobuf::uint32 value) {
  recruitid_.Set(index, value);
  // @@protoc_insertion_point(field_set:NetMsg.RecruitedHeroAck.recruitId)
}
inline void RecruitedHeroAck::add_recruitid(::google::protobuf::uint32 value) {
  recruitid_.Add(value);
  // @@protoc_insertion_point(field_add:NetMsg.RecruitedHeroAck.recruitId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
RecruitedHeroAck::recruitid() const {
  // @@protoc_insertion_point(field_list:NetMsg.RecruitedHeroAck.recruitId)
  return recruitid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
RecruitedHeroAck::mutable_recruitid() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.RecruitedHeroAck.recruitId)
  return &recruitid_;
}

// repeated bool recruited = 2;
inline int RecruitedHeroAck::recruited_size() const {
  return recruited_.size();
}
inline void RecruitedHeroAck::clear_recruited() {
  recruited_.Clear();
}
inline bool RecruitedHeroAck::recruited(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.RecruitedHeroAck.recruited)
  return recruited_.Get(index);
}
inline void RecruitedHeroAck::set_recruited(int index, bool value) {
  recruited_.Set(index, value);
  // @@protoc_insertion_point(field_set:NetMsg.RecruitedHeroAck.recruited)
}
inline void RecruitedHeroAck::add_recruited(bool value) {
  recruited_.Add(value);
  // @@protoc_insertion_point(field_add:NetMsg.RecruitedHeroAck.recruited)
}
inline const ::google::protobuf::RepeatedField< bool >&
RecruitedHeroAck::recruited() const {
  // @@protoc_insertion_point(field_list:NetMsg.RecruitedHeroAck.recruited)
  return recruited_;
}
inline ::google::protobuf::RepeatedField< bool >*
RecruitedHeroAck::mutable_recruited() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.RecruitedHeroAck.recruited)
  return &recruited_;
}

inline const RecruitedHeroAck* RecruitedHeroAck::internal_default_instance() {
  return &RecruitedHeroAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqVSBattleBegin

// optional uint32 type = 1;
inline void ReqVSBattleBegin::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 ReqVSBattleBegin::type() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqVSBattleBegin.type)
  return type_;
}
inline void ReqVSBattleBegin::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqVSBattleBegin.type)
}

// optional uint32 id = 2;
inline void ReqVSBattleBegin::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 ReqVSBattleBegin::id() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqVSBattleBegin.id)
  return id_;
}
inline void ReqVSBattleBegin::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqVSBattleBegin.id)
}

// optional uint64 heroId = 3;
inline void ReqVSBattleBegin::clear_heroid() {
  heroid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ReqVSBattleBegin::heroid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqVSBattleBegin.heroId)
  return heroid_;
}
inline void ReqVSBattleBegin::set_heroid(::google::protobuf::uint64 value) {
  
  heroid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqVSBattleBegin.heroId)
}

inline const ReqVSBattleBegin* ReqVSBattleBegin::internal_default_instance() {
  return &ReqVSBattleBegin_default_instance_.get();
}
// -------------------------------------------------------------------

// VSBattleEnemy

// optional uint32 id = 1;
inline void VSBattleEnemy::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 VSBattleEnemy::id() const {
  // @@protoc_insertion_point(field_get:NetMsg.VSBattleEnemy.id)
  return id_;
}
inline void VSBattleEnemy::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.VSBattleEnemy.id)
}

// optional uint32 star = 2;
inline void VSBattleEnemy::clear_star() {
  star_ = 0u;
}
inline ::google::protobuf::uint32 VSBattleEnemy::star() const {
  // @@protoc_insertion_point(field_get:NetMsg.VSBattleEnemy.star)
  return star_;
}
inline void VSBattleEnemy::set_star(::google::protobuf::uint32 value) {
  
  star_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.VSBattleEnemy.star)
}

// optional uint32 nuqi = 3;
inline void VSBattleEnemy::clear_nuqi() {
  nuqi_ = 0u;
}
inline ::google::protobuf::uint32 VSBattleEnemy::nuqi() const {
  // @@protoc_insertion_point(field_get:NetMsg.VSBattleEnemy.nuqi)
  return nuqi_;
}
inline void VSBattleEnemy::set_nuqi(::google::protobuf::uint32 value) {
  
  nuqi_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.VSBattleEnemy.nuqi)
}

inline const VSBattleEnemy* VSBattleEnemy::internal_default_instance() {
  return &VSBattleEnemy_default_instance_.get();
}
// -------------------------------------------------------------------

// VSBattleBeginAck

// optional uint64 battleId = 1;
inline void VSBattleBeginAck::clear_battleid() {
  battleid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 VSBattleBeginAck::battleid() const {
  // @@protoc_insertion_point(field_get:NetMsg.VSBattleBeginAck.battleId)
  return battleid_;
}
inline void VSBattleBeginAck::set_battleid(::google::protobuf::uint64 value) {
  
  battleid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.VSBattleBeginAck.battleId)
}

// optional uint32 type = 2;
inline void VSBattleBeginAck::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 VSBattleBeginAck::type() const {
  // @@protoc_insertion_point(field_get:NetMsg.VSBattleBeginAck.type)
  return type_;
}
inline void VSBattleBeginAck::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.VSBattleBeginAck.type)
}

// optional uint32 id = 3;
inline void VSBattleBeginAck::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 VSBattleBeginAck::id() const {
  // @@protoc_insertion_point(field_get:NetMsg.VSBattleBeginAck.id)
  return id_;
}
inline void VSBattleBeginAck::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.VSBattleBeginAck.id)
}

// repeated .NetMsg.VSBattleEnemy enemys = 4;
inline int VSBattleBeginAck::enemys_size() const {
  return enemys_.size();
}
inline void VSBattleBeginAck::clear_enemys() {
  enemys_.Clear();
}
inline const ::NetMsg::VSBattleEnemy& VSBattleBeginAck::enemys(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.VSBattleBeginAck.enemys)
  return enemys_.Get(index);
}
inline ::NetMsg::VSBattleEnemy* VSBattleBeginAck::mutable_enemys(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.VSBattleBeginAck.enemys)
  return enemys_.Mutable(index);
}
inline ::NetMsg::VSBattleEnemy* VSBattleBeginAck::add_enemys() {
  // @@protoc_insertion_point(field_add:NetMsg.VSBattleBeginAck.enemys)
  return enemys_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::VSBattleEnemy >*
VSBattleBeginAck::mutable_enemys() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.VSBattleBeginAck.enemys)
  return &enemys_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::VSBattleEnemy >&
VSBattleBeginAck::enemys() const {
  // @@protoc_insertion_point(field_list:NetMsg.VSBattleBeginAck.enemys)
  return enemys_;
}

// optional uint32 error = 5;
inline void VSBattleBeginAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 VSBattleBeginAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.VSBattleBeginAck.error)
  return error_;
}
inline void VSBattleBeginAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.VSBattleBeginAck.error)
}

inline const VSBattleBeginAck* VSBattleBeginAck::internal_default_instance() {
  return &VSBattleBeginAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqVSBattleReady

// optional uint64 battleId = 1;
inline void ReqVSBattleReady::clear_battleid() {
  battleid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ReqVSBattleReady::battleid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqVSBattleReady.battleId)
  return battleid_;
}
inline void ReqVSBattleReady::set_battleid(::google::protobuf::uint64 value) {
  
  battleid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqVSBattleReady.battleId)
}

inline const ReqVSBattleReady* ReqVSBattleReady::internal_default_instance() {
  return &ReqVSBattleReady_default_instance_.get();
}
// -------------------------------------------------------------------

// VSBattleReadyAck

// optional uint64 battleId = 1;
inline void VSBattleReadyAck::clear_battleid() {
  battleid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 VSBattleReadyAck::battleid() const {
  // @@protoc_insertion_point(field_get:NetMsg.VSBattleReadyAck.battleId)
  return battleid_;
}
inline void VSBattleReadyAck::set_battleid(::google::protobuf::uint64 value) {
  
  battleid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.VSBattleReadyAck.battleId)
}

inline const VSBattleReadyAck* VSBattleReadyAck::internal_default_instance() {
  return &VSBattleReadyAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqVSBattleOpt

// optional uint64 battleId = 1;
inline void ReqVSBattleOpt::clear_battleid() {
  battleid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ReqVSBattleOpt::battleid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqVSBattleOpt.battleId)
  return battleid_;
}
inline void ReqVSBattleOpt::set_battleid(::google::protobuf::uint64 value) {
  
  battleid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqVSBattleOpt.battleId)
}

// optional uint32 type = 2;
inline void ReqVSBattleOpt::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 ReqVSBattleOpt::type() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqVSBattleOpt.type)
  return type_;
}
inline void ReqVSBattleOpt::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqVSBattleOpt.type)
}

// optional uint32 turn = 3;
inline void ReqVSBattleOpt::clear_turn() {
  turn_ = 0u;
}
inline ::google::protobuf::uint32 ReqVSBattleOpt::turn() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqVSBattleOpt.turn)
  return turn_;
}
inline void ReqVSBattleOpt::set_turn(::google::protobuf::uint32 value) {
  
  turn_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqVSBattleOpt.turn)
}

inline const ReqVSBattleOpt* ReqVSBattleOpt::internal_default_instance() {
  return &ReqVSBattleOpt_default_instance_.get();
}
// -------------------------------------------------------------------

// VSBattleOptAck

// optional uint64 battleId = 1;
inline void VSBattleOptAck::clear_battleid() {
  battleid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 VSBattleOptAck::battleid() const {
  // @@protoc_insertion_point(field_get:NetMsg.VSBattleOptAck.battleId)
  return battleid_;
}
inline void VSBattleOptAck::set_battleid(::google::protobuf::uint64 value) {
  
  battleid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.VSBattleOptAck.battleId)
}

// optional uint32 type = 2;
inline void VSBattleOptAck::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 VSBattleOptAck::type() const {
  // @@protoc_insertion_point(field_get:NetMsg.VSBattleOptAck.type)
  return type_;
}
inline void VSBattleOptAck::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.VSBattleOptAck.type)
}

// optional uint32 turn = 3;
inline void VSBattleOptAck::clear_turn() {
  turn_ = 0u;
}
inline ::google::protobuf::uint32 VSBattleOptAck::turn() const {
  // @@protoc_insertion_point(field_get:NetMsg.VSBattleOptAck.turn)
  return turn_;
}
inline void VSBattleOptAck::set_turn(::google::protobuf::uint32 value) {
  
  turn_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.VSBattleOptAck.turn)
}

inline const VSBattleOptAck* VSBattleOptAck::internal_default_instance() {
  return &VSBattleOptAck_default_instance_.get();
}
// -------------------------------------------------------------------

// VSBattleUnitState

// optional uint64 battleId = 1;
inline void VSBattleUnitState::clear_battleid() {
  battleid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 VSBattleUnitState::battleid() const {
  // @@protoc_insertion_point(field_get:NetMsg.VSBattleUnitState.battleId)
  return battleid_;
}
inline void VSBattleUnitState::set_battleid(::google::protobuf::uint64 value) {
  
  battleid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.VSBattleUnitState.battleId)
}

// optional uint32 hp = 2;
inline void VSBattleUnitState::clear_hp() {
  hp_ = 0u;
}
inline ::google::protobuf::uint32 VSBattleUnitState::hp() const {
  // @@protoc_insertion_point(field_get:NetMsg.VSBattleUnitState.hp)
  return hp_;
}
inline void VSBattleUnitState::set_hp(::google::protobuf::uint32 value) {
  
  hp_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.VSBattleUnitState.hp)
}

// optional uint32 nuqi = 3;
inline void VSBattleUnitState::clear_nuqi() {
  nuqi_ = 0u;
}
inline ::google::protobuf::uint32 VSBattleUnitState::nuqi() const {
  // @@protoc_insertion_point(field_get:NetMsg.VSBattleUnitState.nuqi)
  return nuqi_;
}
inline void VSBattleUnitState::set_nuqi(::google::protobuf::uint32 value) {
  
  nuqi_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.VSBattleUnitState.nuqi)
}

// optional uint32 optType = 4;
inline void VSBattleUnitState::clear_opttype() {
  opttype_ = 0u;
}
inline ::google::protobuf::uint32 VSBattleUnitState::opttype() const {
  // @@protoc_insertion_point(field_get:NetMsg.VSBattleUnitState.optType)
  return opttype_;
}
inline void VSBattleUnitState::set_opttype(::google::protobuf::uint32 value) {
  
  opttype_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.VSBattleUnitState.optType)
}

inline const VSBattleUnitState* VSBattleUnitState::internal_default_instance() {
  return &VSBattleUnitState_default_instance_.get();
}
// -------------------------------------------------------------------

// VSBattleTurn

// optional uint64 battleId = 1;
inline void VSBattleTurn::clear_battleid() {
  battleid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 VSBattleTurn::battleid() const {
  // @@protoc_insertion_point(field_get:NetMsg.VSBattleTurn.battleId)
  return battleid_;
}
inline void VSBattleTurn::set_battleid(::google::protobuf::uint64 value) {
  
  battleid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.VSBattleTurn.battleId)
}

// optional .NetMsg.VSBattleUnitState meState = 2;
inline bool VSBattleTurn::has_mestate() const {
  return this != internal_default_instance() && mestate_ != NULL;
}
inline void VSBattleTurn::clear_mestate() {
  if (GetArenaNoVirtual() == NULL && mestate_ != NULL) delete mestate_;
  mestate_ = NULL;
}
inline const ::NetMsg::VSBattleUnitState& VSBattleTurn::mestate() const {
  // @@protoc_insertion_point(field_get:NetMsg.VSBattleTurn.meState)
  return mestate_ != NULL ? *mestate_
                         : *::NetMsg::VSBattleUnitState::internal_default_instance();
}
inline ::NetMsg::VSBattleUnitState* VSBattleTurn::mutable_mestate() {
  
  if (mestate_ == NULL) {
    mestate_ = new ::NetMsg::VSBattleUnitState;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.VSBattleTurn.meState)
  return mestate_;
}
inline ::NetMsg::VSBattleUnitState* VSBattleTurn::release_mestate() {
  // @@protoc_insertion_point(field_release:NetMsg.VSBattleTurn.meState)
  
  ::NetMsg::VSBattleUnitState* temp = mestate_;
  mestate_ = NULL;
  return temp;
}
inline void VSBattleTurn::set_allocated_mestate(::NetMsg::VSBattleUnitState* mestate) {
  delete mestate_;
  mestate_ = mestate;
  if (mestate) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.VSBattleTurn.meState)
}

// optional .NetMsg.VSBattleUnitState otherState = 3;
inline bool VSBattleTurn::has_otherstate() const {
  return this != internal_default_instance() && otherstate_ != NULL;
}
inline void VSBattleTurn::clear_otherstate() {
  if (GetArenaNoVirtual() == NULL && otherstate_ != NULL) delete otherstate_;
  otherstate_ = NULL;
}
inline const ::NetMsg::VSBattleUnitState& VSBattleTurn::otherstate() const {
  // @@protoc_insertion_point(field_get:NetMsg.VSBattleTurn.otherState)
  return otherstate_ != NULL ? *otherstate_
                         : *::NetMsg::VSBattleUnitState::internal_default_instance();
}
inline ::NetMsg::VSBattleUnitState* VSBattleTurn::mutable_otherstate() {
  
  if (otherstate_ == NULL) {
    otherstate_ = new ::NetMsg::VSBattleUnitState;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.VSBattleTurn.otherState)
  return otherstate_;
}
inline ::NetMsg::VSBattleUnitState* VSBattleTurn::release_otherstate() {
  // @@protoc_insertion_point(field_release:NetMsg.VSBattleTurn.otherState)
  
  ::NetMsg::VSBattleUnitState* temp = otherstate_;
  otherstate_ = NULL;
  return temp;
}
inline void VSBattleTurn::set_allocated_otherstate(::NetMsg::VSBattleUnitState* otherstate) {
  delete otherstate_;
  otherstate_ = otherstate;
  if (otherstate) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.VSBattleTurn.otherState)
}

inline const VSBattleTurn* VSBattleTurn::internal_default_instance() {
  return &VSBattleTurn_default_instance_.get();
}
// -------------------------------------------------------------------

// VSBattleEnd

// optional uint64 battleId = 1;
inline void VSBattleEnd::clear_battleid() {
  battleid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 VSBattleEnd::battleid() const {
  // @@protoc_insertion_point(field_get:NetMsg.VSBattleEnd.battleId)
  return battleid_;
}
inline void VSBattleEnd::set_battleid(::google::protobuf::uint64 value) {
  
  battleid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.VSBattleEnd.battleId)
}

// optional uint32 victory = 2;
inline void VSBattleEnd::clear_victory() {
  victory_ = 0u;
}
inline ::google::protobuf::uint32 VSBattleEnd::victory() const {
  // @@protoc_insertion_point(field_get:NetMsg.VSBattleEnd.victory)
  return victory_;
}
inline void VSBattleEnd::set_victory(::google::protobuf::uint32 value) {
  
  victory_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.VSBattleEnd.victory)
}

inline const VSBattleEnd* VSBattleEnd::internal_default_instance() {
  return &VSBattleEnd_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqBioHeroInfo

// optional uint32 heroClass = 1;
inline void ReqBioHeroInfo::clear_heroclass() {
  heroclass_ = 0u;
}
inline ::google::protobuf::uint32 ReqBioHeroInfo::heroclass() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqBioHeroInfo.heroClass)
  return heroclass_;
}
inline void ReqBioHeroInfo::set_heroclass(::google::protobuf::uint32 value) {
  
  heroclass_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqBioHeroInfo.heroClass)
}

inline const ReqBioHeroInfo* ReqBioHeroInfo::internal_default_instance() {
  return &ReqBioHeroInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// BioHeroStepData

// optional uint32 id = 1;
inline void BioHeroStepData::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 BioHeroStepData::id() const {
  // @@protoc_insertion_point(field_get:NetMsg.BioHeroStepData.id)
  return id_;
}
inline void BioHeroStepData::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.BioHeroStepData.id)
}

// optional bool lock = 2;
inline void BioHeroStepData::clear_lock() {
  lock_ = false;
}
inline bool BioHeroStepData::lock() const {
  // @@protoc_insertion_point(field_get:NetMsg.BioHeroStepData.lock)
  return lock_;
}
inline void BioHeroStepData::set_lock(bool value) {
  
  lock_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.BioHeroStepData.lock)
}

// repeated uint32 branchesComplete = 3;
inline int BioHeroStepData::branchescomplete_size() const {
  return branchescomplete_.size();
}
inline void BioHeroStepData::clear_branchescomplete() {
  branchescomplete_.Clear();
}
inline ::google::protobuf::uint32 BioHeroStepData::branchescomplete(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.BioHeroStepData.branchesComplete)
  return branchescomplete_.Get(index);
}
inline void BioHeroStepData::set_branchescomplete(int index, ::google::protobuf::uint32 value) {
  branchescomplete_.Set(index, value);
  // @@protoc_insertion_point(field_set:NetMsg.BioHeroStepData.branchesComplete)
}
inline void BioHeroStepData::add_branchescomplete(::google::protobuf::uint32 value) {
  branchescomplete_.Add(value);
  // @@protoc_insertion_point(field_add:NetMsg.BioHeroStepData.branchesComplete)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BioHeroStepData::branchescomplete() const {
  // @@protoc_insertion_point(field_list:NetMsg.BioHeroStepData.branchesComplete)
  return branchescomplete_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BioHeroStepData::mutable_branchescomplete() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.BioHeroStepData.branchesComplete)
  return &branchescomplete_;
}

inline const BioHeroStepData* BioHeroStepData::internal_default_instance() {
  return &BioHeroStepData_default_instance_.get();
}
// -------------------------------------------------------------------

// BioHeroInfoAck

// optional uint32 heroClass = 2;
inline void BioHeroInfoAck::clear_heroclass() {
  heroclass_ = 0u;
}
inline ::google::protobuf::uint32 BioHeroInfoAck::heroclass() const {
  // @@protoc_insertion_point(field_get:NetMsg.BioHeroInfoAck.heroClass)
  return heroclass_;
}
inline void BioHeroInfoAck::set_heroclass(::google::protobuf::uint32 value) {
  
  heroclass_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.BioHeroInfoAck.heroClass)
}

// repeated .NetMsg.BioHeroStepData steps = 1;
inline int BioHeroInfoAck::steps_size() const {
  return steps_.size();
}
inline void BioHeroInfoAck::clear_steps() {
  steps_.Clear();
}
inline const ::NetMsg::BioHeroStepData& BioHeroInfoAck::steps(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.BioHeroInfoAck.steps)
  return steps_.Get(index);
}
inline ::NetMsg::BioHeroStepData* BioHeroInfoAck::mutable_steps(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.BioHeroInfoAck.steps)
  return steps_.Mutable(index);
}
inline ::NetMsg::BioHeroStepData* BioHeroInfoAck::add_steps() {
  // @@protoc_insertion_point(field_add:NetMsg.BioHeroInfoAck.steps)
  return steps_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::BioHeroStepData >*
BioHeroInfoAck::mutable_steps() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.BioHeroInfoAck.steps)
  return &steps_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::BioHeroStepData >&
BioHeroInfoAck::steps() const {
  // @@protoc_insertion_point(field_list:NetMsg.BioHeroInfoAck.steps)
  return steps_;
}

inline const BioHeroInfoAck* BioHeroInfoAck::internal_default_instance() {
  return &BioHeroInfoAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqBioHeroStepDone

// optional uint32 heroClass = 1;
inline void ReqBioHeroStepDone::clear_heroclass() {
  heroclass_ = 0u;
}
inline ::google::protobuf::uint32 ReqBioHeroStepDone::heroclass() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqBioHeroStepDone.heroClass)
  return heroclass_;
}
inline void ReqBioHeroStepDone::set_heroclass(::google::protobuf::uint32 value) {
  
  heroclass_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqBioHeroStepDone.heroClass)
}

// optional uint32 stepId = 2;
inline void ReqBioHeroStepDone::clear_stepid() {
  stepid_ = 0u;
}
inline ::google::protobuf::uint32 ReqBioHeroStepDone::stepid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqBioHeroStepDone.stepId)
  return stepid_;
}
inline void ReqBioHeroStepDone::set_stepid(::google::protobuf::uint32 value) {
  
  stepid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqBioHeroStepDone.stepId)
}

// optional uint32 branchId = 3;
inline void ReqBioHeroStepDone::clear_branchid() {
  branchid_ = 0u;
}
inline ::google::protobuf::uint32 ReqBioHeroStepDone::branchid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqBioHeroStepDone.branchId)
  return branchid_;
}
inline void ReqBioHeroStepDone::set_branchid(::google::protobuf::uint32 value) {
  
  branchid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqBioHeroStepDone.branchId)
}

inline const ReqBioHeroStepDone* ReqBioHeroStepDone::internal_default_instance() {
  return &ReqBioHeroStepDone_default_instance_.get();
}
// -------------------------------------------------------------------

// BioHeroStepDoneAck

// optional uint32 heroClass = 1;
inline void BioHeroStepDoneAck::clear_heroclass() {
  heroclass_ = 0u;
}
inline ::google::protobuf::uint32 BioHeroStepDoneAck::heroclass() const {
  // @@protoc_insertion_point(field_get:NetMsg.BioHeroStepDoneAck.heroClass)
  return heroclass_;
}
inline void BioHeroStepDoneAck::set_heroclass(::google::protobuf::uint32 value) {
  
  heroclass_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.BioHeroStepDoneAck.heroClass)
}

// optional uint32 stepId = 2;
inline void BioHeroStepDoneAck::clear_stepid() {
  stepid_ = 0u;
}
inline ::google::protobuf::uint32 BioHeroStepDoneAck::stepid() const {
  // @@protoc_insertion_point(field_get:NetMsg.BioHeroStepDoneAck.stepId)
  return stepid_;
}
inline void BioHeroStepDoneAck::set_stepid(::google::protobuf::uint32 value) {
  
  stepid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.BioHeroStepDoneAck.stepId)
}

// repeated uint32 unlockStepIds = 4;
inline int BioHeroStepDoneAck::unlockstepids_size() const {
  return unlockstepids_.size();
}
inline void BioHeroStepDoneAck::clear_unlockstepids() {
  unlockstepids_.Clear();
}
inline ::google::protobuf::uint32 BioHeroStepDoneAck::unlockstepids(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.BioHeroStepDoneAck.unlockStepIds)
  return unlockstepids_.Get(index);
}
inline void BioHeroStepDoneAck::set_unlockstepids(int index, ::google::protobuf::uint32 value) {
  unlockstepids_.Set(index, value);
  // @@protoc_insertion_point(field_set:NetMsg.BioHeroStepDoneAck.unlockStepIds)
}
inline void BioHeroStepDoneAck::add_unlockstepids(::google::protobuf::uint32 value) {
  unlockstepids_.Add(value);
  // @@protoc_insertion_point(field_add:NetMsg.BioHeroStepDoneAck.unlockStepIds)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BioHeroStepDoneAck::unlockstepids() const {
  // @@protoc_insertion_point(field_list:NetMsg.BioHeroStepDoneAck.unlockStepIds)
  return unlockstepids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BioHeroStepDoneAck::mutable_unlockstepids() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.BioHeroStepDoneAck.unlockStepIds)
  return &unlockstepids_;
}

inline const BioHeroStepDoneAck* BioHeroStepDoneAck::internal_default_instance() {
  return &BioHeroStepDoneAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqAddFriend

// optional uint32 userId = 1;
inline void ReqAddFriend::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 ReqAddFriend::userid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqAddFriend.userId)
  return userid_;
}
inline void ReqAddFriend::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqAddFriend.userId)
}

inline const ReqAddFriend* ReqAddFriend::internal_default_instance() {
  return &ReqAddFriend_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqRemoveFriend

// optional uint32 userId = 1;
inline void ReqRemoveFriend::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 ReqRemoveFriend::userid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqRemoveFriend.userId)
  return userid_;
}
inline void ReqRemoveFriend::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqRemoveFriend.userId)
}

inline const ReqRemoveFriend* ReqRemoveFriend::internal_default_instance() {
  return &ReqRemoveFriend_default_instance_.get();
}
// -------------------------------------------------------------------

// RemoveFriendAck

// optional uint32 userId = 1;
inline void RemoveFriendAck::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 RemoveFriendAck::userid() const {
  // @@protoc_insertion_point(field_get:NetMsg.RemoveFriendAck.userId)
  return userid_;
}
inline void RemoveFriendAck::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.RemoveFriendAck.userId)
}

inline const RemoveFriendAck* RemoveFriendAck::internal_default_instance() {
  return &RemoveFriendAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqTopList

// optional .NetMsg.TopListType type = 1;
inline void ReqTopList::clear_type() {
  type_ = 0;
}
inline ::NetMsg::TopListType ReqTopList::type() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqTopList.type)
  return static_cast< ::NetMsg::TopListType >(type_);
}
inline void ReqTopList::set_type(::NetMsg::TopListType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqTopList.type)
}

inline const ReqTopList* ReqTopList::internal_default_instance() {
  return &ReqTopList_default_instance_.get();
}
// -------------------------------------------------------------------

// TopListAck

// optional .NetMsg.TopListType type = 1;
inline void TopListAck::clear_type() {
  type_ = 0;
}
inline ::NetMsg::TopListType TopListAck::type() const {
  // @@protoc_insertion_point(field_get:NetMsg.TopListAck.type)
  return static_cast< ::NetMsg::TopListType >(type_);
}
inline void TopListAck::set_type(::NetMsg::TopListType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.TopListAck.type)
}

// repeated .NetMsg.TopListData topData = 2;
inline int TopListAck::topdata_size() const {
  return topdata_.size();
}
inline void TopListAck::clear_topdata() {
  topdata_.Clear();
}
inline const ::NetMsg::TopListData& TopListAck::topdata(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.TopListAck.topData)
  return topdata_.Get(index);
}
inline ::NetMsg::TopListData* TopListAck::mutable_topdata(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.TopListAck.topData)
  return topdata_.Mutable(index);
}
inline ::NetMsg::TopListData* TopListAck::add_topdata() {
  // @@protoc_insertion_point(field_add:NetMsg.TopListAck.topData)
  return topdata_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::TopListData >*
TopListAck::mutable_topdata() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.TopListAck.topData)
  return &topdata_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::TopListData >&
TopListAck::topdata() const {
  // @@protoc_insertion_point(field_list:NetMsg.TopListAck.topData)
  return topdata_;
}

// optional uint32 myRanking = 3;
inline void TopListAck::clear_myranking() {
  myranking_ = 0u;
}
inline ::google::protobuf::uint32 TopListAck::myranking() const {
  // @@protoc_insertion_point(field_get:NetMsg.TopListAck.myRanking)
  return myranking_;
}
inline void TopListAck::set_myranking(::google::protobuf::uint32 value) {
  
  myranking_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.TopListAck.myRanking)
}

inline const TopListAck* TopListAck::internal_default_instance() {
  return &TopListAck_default_instance_.get();
}
// -------------------------------------------------------------------

// TopListData

// optional .NetMsg.SortReputationData sortReputation = 1;
inline bool TopListData::has_sortreputation() const {
  return info_case() == kSortReputation;
}
inline void TopListData::set_has_sortreputation() {
  _oneof_case_[0] = kSortReputation;
}
inline void TopListData::clear_sortreputation() {
  if (has_sortreputation()) {
    delete info_.sortreputation_;
    clear_has_info();
  }
}
inline  const ::NetMsg::SortReputationData& TopListData::sortreputation() const {
  // @@protoc_insertion_point(field_get:NetMsg.TopListData.sortReputation)
  return has_sortreputation()
      ? *info_.sortreputation_
      : ::NetMsg::SortReputationData::default_instance();
}
inline ::NetMsg::SortReputationData* TopListData::mutable_sortreputation() {
  if (!has_sortreputation()) {
    clear_info();
    set_has_sortreputation();
    info_.sortreputation_ = new ::NetMsg::SortReputationData;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.TopListData.sortReputation)
  return info_.sortreputation_;
}
inline ::NetMsg::SortReputationData* TopListData::release_sortreputation() {
  // @@protoc_insertion_point(field_release:NetMsg.TopListData.sortReputation)
  if (has_sortreputation()) {
    clear_has_info();
    ::NetMsg::SortReputationData* temp = info_.sortreputation_;
    info_.sortreputation_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void TopListData::set_allocated_sortreputation(::NetMsg::SortReputationData* sortreputation) {
  clear_info();
  if (sortreputation) {
    set_has_sortreputation();
    info_.sortreputation_ = sortreputation;
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.TopListData.sortReputation)
}

// optional .NetMsg.SortMilitaryData sortMilitary = 2;
inline bool TopListData::has_sortmilitary() const {
  return info_case() == kSortMilitary;
}
inline void TopListData::set_has_sortmilitary() {
  _oneof_case_[0] = kSortMilitary;
}
inline void TopListData::clear_sortmilitary() {
  if (has_sortmilitary()) {
    delete info_.sortmilitary_;
    clear_has_info();
  }
}
inline  const ::NetMsg::SortMilitaryData& TopListData::sortmilitary() const {
  // @@protoc_insertion_point(field_get:NetMsg.TopListData.sortMilitary)
  return has_sortmilitary()
      ? *info_.sortmilitary_
      : ::NetMsg::SortMilitaryData::default_instance();
}
inline ::NetMsg::SortMilitaryData* TopListData::mutable_sortmilitary() {
  if (!has_sortmilitary()) {
    clear_info();
    set_has_sortmilitary();
    info_.sortmilitary_ = new ::NetMsg::SortMilitaryData;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.TopListData.sortMilitary)
  return info_.sortmilitary_;
}
inline ::NetMsg::SortMilitaryData* TopListData::release_sortmilitary() {
  // @@protoc_insertion_point(field_release:NetMsg.TopListData.sortMilitary)
  if (has_sortmilitary()) {
    clear_has_info();
    ::NetMsg::SortMilitaryData* temp = info_.sortmilitary_;
    info_.sortmilitary_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void TopListData::set_allocated_sortmilitary(::NetMsg::SortMilitaryData* sortmilitary) {
  clear_info();
  if (sortmilitary) {
    set_has_sortmilitary();
    info_.sortmilitary_ = sortmilitary;
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.TopListData.sortMilitary)
}

// optional .NetMsg.SortLevelData sortLevel = 3;
inline bool TopListData::has_sortlevel() const {
  return info_case() == kSortLevel;
}
inline void TopListData::set_has_sortlevel() {
  _oneof_case_[0] = kSortLevel;
}
inline void TopListData::clear_sortlevel() {
  if (has_sortlevel()) {
    delete info_.sortlevel_;
    clear_has_info();
  }
}
inline  const ::NetMsg::SortLevelData& TopListData::sortlevel() const {
  // @@protoc_insertion_point(field_get:NetMsg.TopListData.sortLevel)
  return has_sortlevel()
      ? *info_.sortlevel_
      : ::NetMsg::SortLevelData::default_instance();
}
inline ::NetMsg::SortLevelData* TopListData::mutable_sortlevel() {
  if (!has_sortlevel()) {
    clear_info();
    set_has_sortlevel();
    info_.sortlevel_ = new ::NetMsg::SortLevelData;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.TopListData.sortLevel)
  return info_.sortlevel_;
}
inline ::NetMsg::SortLevelData* TopListData::release_sortlevel() {
  // @@protoc_insertion_point(field_release:NetMsg.TopListData.sortLevel)
  if (has_sortlevel()) {
    clear_has_info();
    ::NetMsg::SortLevelData* temp = info_.sortlevel_;
    info_.sortlevel_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void TopListData::set_allocated_sortlevel(::NetMsg::SortLevelData* sortlevel) {
  clear_info();
  if (sortlevel) {
    set_has_sortlevel();
    info_.sortlevel_ = sortlevel;
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.TopListData.sortLevel)
}

inline bool TopListData::has_info() const {
  return info_case() != INFO_NOT_SET;
}
inline void TopListData::clear_has_info() {
  _oneof_case_[0] = INFO_NOT_SET;
}
inline TopListData::InfoCase TopListData::info_case() const {
  return TopListData::InfoCase(_oneof_case_[0]);
}
inline const TopListData* TopListData::internal_default_instance() {
  return &TopListData_default_instance_.get();
}
// -------------------------------------------------------------------

// SortReputationData

// optional uint32 userID = 1;
inline void SortReputationData::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 SortReputationData::userid() const {
  // @@protoc_insertion_point(field_get:NetMsg.SortReputationData.userID)
  return userid_;
}
inline void SortReputationData::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.SortReputationData.userID)
}

// optional uint32 sortID = 2;
inline void SortReputationData::clear_sortid() {
  sortid_ = 0u;
}
inline ::google::protobuf::uint32 SortReputationData::sortid() const {
  // @@protoc_insertion_point(field_get:NetMsg.SortReputationData.sortID)
  return sortid_;
}
inline void SortReputationData::set_sortid(::google::protobuf::uint32 value) {
  
  sortid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.SortReputationData.sortID)
}

// optional string playerName = 3;
inline void SortReputationData::clear_playername() {
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SortReputationData::playername() const {
  // @@protoc_insertion_point(field_get:NetMsg.SortReputationData.playerName)
  return playername_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SortReputationData::set_playername(const ::std::string& value) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetMsg.SortReputationData.playerName)
}
inline void SortReputationData::set_playername(const char* value) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetMsg.SortReputationData.playerName)
}
inline void SortReputationData::set_playername(const char* value, size_t size) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetMsg.SortReputationData.playerName)
}
inline ::std::string* SortReputationData::mutable_playername() {
  
  // @@protoc_insertion_point(field_mutable:NetMsg.SortReputationData.playerName)
  return playername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SortReputationData::release_playername() {
  // @@protoc_insertion_point(field_release:NetMsg.SortReputationData.playerName)
  
  return playername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SortReputationData::set_allocated_playername(::std::string* playername) {
  if (playername != NULL) {
    
  } else {
    
  }
  playername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playername);
  // @@protoc_insertion_point(field_set_allocated:NetMsg.SortReputationData.playerName)
}

// optional uint32 force = 4;
inline void SortReputationData::clear_force() {
  force_ = 0u;
}
inline ::google::protobuf::uint32 SortReputationData::force() const {
  // @@protoc_insertion_point(field_get:NetMsg.SortReputationData.force)
  return force_;
}
inline void SortReputationData::set_force(::google::protobuf::uint32 value) {
  
  force_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.SortReputationData.force)
}

// optional uint32 level = 5;
inline void SortReputationData::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 SortReputationData::level() const {
  // @@protoc_insertion_point(field_get:NetMsg.SortReputationData.level)
  return level_;
}
inline void SortReputationData::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.SortReputationData.level)
}

// optional uint32 title = 6;
inline void SortReputationData::clear_title() {
  title_ = 0u;
}
inline ::google::protobuf::uint32 SortReputationData::title() const {
  // @@protoc_insertion_point(field_get:NetMsg.SortReputationData.title)
  return title_;
}
inline void SortReputationData::set_title(::google::protobuf::uint32 value) {
  
  title_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.SortReputationData.title)
}

// optional uint32 reputation = 7;
inline void SortReputationData::clear_reputation() {
  reputation_ = 0u;
}
inline ::google::protobuf::uint32 SortReputationData::reputation() const {
  // @@protoc_insertion_point(field_get:NetMsg.SortReputationData.reputation)
  return reputation_;
}
inline void SortReputationData::set_reputation(::google::protobuf::uint32 value) {
  
  reputation_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.SortReputationData.reputation)
}

// optional uint32 icon = 8;
inline void SortReputationData::clear_icon() {
  icon_ = 0u;
}
inline ::google::protobuf::uint32 SortReputationData::icon() const {
  // @@protoc_insertion_point(field_get:NetMsg.SortReputationData.icon)
  return icon_;
}
inline void SortReputationData::set_icon(::google::protobuf::uint32 value) {
  
  icon_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.SortReputationData.icon)
}

inline const SortReputationData* SortReputationData::internal_default_instance() {
  return &SortReputationData_default_instance_.get();
}
// -------------------------------------------------------------------

// SortMilitaryData

// optional uint32 userID = 1;
inline void SortMilitaryData::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 SortMilitaryData::userid() const {
  // @@protoc_insertion_point(field_get:NetMsg.SortMilitaryData.userID)
  return userid_;
}
inline void SortMilitaryData::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.SortMilitaryData.userID)
}

// optional uint32 sortID = 2;
inline void SortMilitaryData::clear_sortid() {
  sortid_ = 0u;
}
inline ::google::protobuf::uint32 SortMilitaryData::sortid() const {
  // @@protoc_insertion_point(field_get:NetMsg.SortMilitaryData.sortID)
  return sortid_;
}
inline void SortMilitaryData::set_sortid(::google::protobuf::uint32 value) {
  
  sortid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.SortMilitaryData.sortID)
}

// optional string playerName = 3;
inline void SortMilitaryData::clear_playername() {
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SortMilitaryData::playername() const {
  // @@protoc_insertion_point(field_get:NetMsg.SortMilitaryData.playerName)
  return playername_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SortMilitaryData::set_playername(const ::std::string& value) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetMsg.SortMilitaryData.playerName)
}
inline void SortMilitaryData::set_playername(const char* value) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetMsg.SortMilitaryData.playerName)
}
inline void SortMilitaryData::set_playername(const char* value, size_t size) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetMsg.SortMilitaryData.playerName)
}
inline ::std::string* SortMilitaryData::mutable_playername() {
  
  // @@protoc_insertion_point(field_mutable:NetMsg.SortMilitaryData.playerName)
  return playername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SortMilitaryData::release_playername() {
  // @@protoc_insertion_point(field_release:NetMsg.SortMilitaryData.playerName)
  
  return playername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SortMilitaryData::set_allocated_playername(::std::string* playername) {
  if (playername != NULL) {
    
  } else {
    
  }
  playername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playername);
  // @@protoc_insertion_point(field_set_allocated:NetMsg.SortMilitaryData.playerName)
}

// optional uint32 force = 4;
inline void SortMilitaryData::clear_force() {
  force_ = 0u;
}
inline ::google::protobuf::uint32 SortMilitaryData::force() const {
  // @@protoc_insertion_point(field_get:NetMsg.SortMilitaryData.force)
  return force_;
}
inline void SortMilitaryData::set_force(::google::protobuf::uint32 value) {
  
  force_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.SortMilitaryData.force)
}

// optional uint32 level = 5;
inline void SortMilitaryData::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 SortMilitaryData::level() const {
  // @@protoc_insertion_point(field_get:NetMsg.SortMilitaryData.level)
  return level_;
}
inline void SortMilitaryData::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.SortMilitaryData.level)
}

// optional uint32 title = 6;
inline void SortMilitaryData::clear_title() {
  title_ = 0u;
}
inline ::google::protobuf::uint32 SortMilitaryData::title() const {
  // @@protoc_insertion_point(field_get:NetMsg.SortMilitaryData.title)
  return title_;
}
inline void SortMilitaryData::set_title(::google::protobuf::uint32 value) {
  
  title_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.SortMilitaryData.title)
}

// optional uint32 military = 7;
inline void SortMilitaryData::clear_military() {
  military_ = 0u;
}
inline ::google::protobuf::uint32 SortMilitaryData::military() const {
  // @@protoc_insertion_point(field_get:NetMsg.SortMilitaryData.military)
  return military_;
}
inline void SortMilitaryData::set_military(::google::protobuf::uint32 value) {
  
  military_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.SortMilitaryData.military)
}

// optional uint32 icon = 8;
inline void SortMilitaryData::clear_icon() {
  icon_ = 0u;
}
inline ::google::protobuf::uint32 SortMilitaryData::icon() const {
  // @@protoc_insertion_point(field_get:NetMsg.SortMilitaryData.icon)
  return icon_;
}
inline void SortMilitaryData::set_icon(::google::protobuf::uint32 value) {
  
  icon_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.SortMilitaryData.icon)
}

inline const SortMilitaryData* SortMilitaryData::internal_default_instance() {
  return &SortMilitaryData_default_instance_.get();
}
// -------------------------------------------------------------------

// SortLevelData

// optional uint32 userID = 1;
inline void SortLevelData::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 SortLevelData::userid() const {
  // @@protoc_insertion_point(field_get:NetMsg.SortLevelData.userID)
  return userid_;
}
inline void SortLevelData::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.SortLevelData.userID)
}

// optional uint32 sortID = 2;
inline void SortLevelData::clear_sortid() {
  sortid_ = 0u;
}
inline ::google::protobuf::uint32 SortLevelData::sortid() const {
  // @@protoc_insertion_point(field_get:NetMsg.SortLevelData.sortID)
  return sortid_;
}
inline void SortLevelData::set_sortid(::google::protobuf::uint32 value) {
  
  sortid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.SortLevelData.sortID)
}

// optional string playerName = 3;
inline void SortLevelData::clear_playername() {
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SortLevelData::playername() const {
  // @@protoc_insertion_point(field_get:NetMsg.SortLevelData.playerName)
  return playername_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SortLevelData::set_playername(const ::std::string& value) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetMsg.SortLevelData.playerName)
}
inline void SortLevelData::set_playername(const char* value) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetMsg.SortLevelData.playerName)
}
inline void SortLevelData::set_playername(const char* value, size_t size) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetMsg.SortLevelData.playerName)
}
inline ::std::string* SortLevelData::mutable_playername() {
  
  // @@protoc_insertion_point(field_mutable:NetMsg.SortLevelData.playerName)
  return playername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SortLevelData::release_playername() {
  // @@protoc_insertion_point(field_release:NetMsg.SortLevelData.playerName)
  
  return playername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SortLevelData::set_allocated_playername(::std::string* playername) {
  if (playername != NULL) {
    
  } else {
    
  }
  playername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playername);
  // @@protoc_insertion_point(field_set_allocated:NetMsg.SortLevelData.playerName)
}

// optional uint32 force = 4;
inline void SortLevelData::clear_force() {
  force_ = 0u;
}
inline ::google::protobuf::uint32 SortLevelData::force() const {
  // @@protoc_insertion_point(field_get:NetMsg.SortLevelData.force)
  return force_;
}
inline void SortLevelData::set_force(::google::protobuf::uint32 value) {
  
  force_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.SortLevelData.force)
}

// optional uint32 title = 5;
inline void SortLevelData::clear_title() {
  title_ = 0u;
}
inline ::google::protobuf::uint32 SortLevelData::title() const {
  // @@protoc_insertion_point(field_get:NetMsg.SortLevelData.title)
  return title_;
}
inline void SortLevelData::set_title(::google::protobuf::uint32 value) {
  
  title_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.SortLevelData.title)
}

// optional uint32 military = 6;
inline void SortLevelData::clear_military() {
  military_ = 0u;
}
inline ::google::protobuf::uint32 SortLevelData::military() const {
  // @@protoc_insertion_point(field_get:NetMsg.SortLevelData.military)
  return military_;
}
inline void SortLevelData::set_military(::google::protobuf::uint32 value) {
  
  military_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.SortLevelData.military)
}

// optional uint32 level = 7;
inline void SortLevelData::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 SortLevelData::level() const {
  // @@protoc_insertion_point(field_get:NetMsg.SortLevelData.level)
  return level_;
}
inline void SortLevelData::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.SortLevelData.level)
}

// optional uint32 icon = 8;
inline void SortLevelData::clear_icon() {
  icon_ = 0u;
}
inline ::google::protobuf::uint32 SortLevelData::icon() const {
  // @@protoc_insertion_point(field_get:NetMsg.SortLevelData.icon)
  return icon_;
}
inline void SortLevelData::set_icon(::google::protobuf::uint32 value) {
  
  icon_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.SortLevelData.icon)
}

inline const SortLevelData* SortLevelData::internal_default_instance() {
  return &SortLevelData_default_instance_.get();
}
// -------------------------------------------------------------------

// FriendInfo

// optional uint32 userId = 1;
inline void FriendInfo::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 FriendInfo::userid() const {
  // @@protoc_insertion_point(field_get:NetMsg.FriendInfo.userId)
  return userid_;
}
inline void FriendInfo::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.FriendInfo.userId)
}

// optional string name = 2;
inline void FriendInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FriendInfo::name() const {
  // @@protoc_insertion_point(field_get:NetMsg.FriendInfo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FriendInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetMsg.FriendInfo.name)
}
inline void FriendInfo::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetMsg.FriendInfo.name)
}
inline void FriendInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetMsg.FriendInfo.name)
}
inline ::std::string* FriendInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:NetMsg.FriendInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FriendInfo::release_name() {
  // @@protoc_insertion_point(field_release:NetMsg.FriendInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FriendInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:NetMsg.FriendInfo.name)
}

// optional uint32 icon = 3;
inline void FriendInfo::clear_icon() {
  icon_ = 0u;
}
inline ::google::protobuf::uint32 FriendInfo::icon() const {
  // @@protoc_insertion_point(field_get:NetMsg.FriendInfo.icon)
  return icon_;
}
inline void FriendInfo::set_icon(::google::protobuf::uint32 value) {
  
  icon_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.FriendInfo.icon)
}

// optional uint32 force = 4;
inline void FriendInfo::clear_force() {
  force_ = 0u;
}
inline ::google::protobuf::uint32 FriendInfo::force() const {
  // @@protoc_insertion_point(field_get:NetMsg.FriendInfo.force)
  return force_;
}
inline void FriendInfo::set_force(::google::protobuf::uint32 value) {
  
  force_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.FriendInfo.force)
}

// optional uint32 rank = 5;
inline void FriendInfo::clear_rank() {
  rank_ = 0u;
}
inline ::google::protobuf::uint32 FriendInfo::rank() const {
  // @@protoc_insertion_point(field_get:NetMsg.FriendInfo.rank)
  return rank_;
}
inline void FriendInfo::set_rank(::google::protobuf::uint32 value) {
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.FriendInfo.rank)
}

// optional uint32 title = 6;
inline void FriendInfo::clear_title() {
  title_ = 0u;
}
inline ::google::protobuf::uint32 FriendInfo::title() const {
  // @@protoc_insertion_point(field_get:NetMsg.FriendInfo.title)
  return title_;
}
inline void FriendInfo::set_title(::google::protobuf::uint32 value) {
  
  title_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.FriendInfo.title)
}

// optional bool online = 7;
inline void FriendInfo::clear_online() {
  online_ = false;
}
inline bool FriendInfo::online() const {
  // @@protoc_insertion_point(field_get:NetMsg.FriendInfo.online)
  return online_;
}
inline void FriendInfo::set_online(bool value) {
  
  online_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.FriendInfo.online)
}

inline const FriendInfo* FriendInfo::internal_default_instance() {
  return &FriendInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// FriendsInfoAck

// repeated .NetMsg.FriendInfo friends = 1;
inline int FriendsInfoAck::friends_size() const {
  return friends_.size();
}
inline void FriendsInfoAck::clear_friends() {
  friends_.Clear();
}
inline const ::NetMsg::FriendInfo& FriendsInfoAck::friends(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.FriendsInfoAck.friends)
  return friends_.Get(index);
}
inline ::NetMsg::FriendInfo* FriendsInfoAck::mutable_friends(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.FriendsInfoAck.friends)
  return friends_.Mutable(index);
}
inline ::NetMsg::FriendInfo* FriendsInfoAck::add_friends() {
  // @@protoc_insertion_point(field_add:NetMsg.FriendsInfoAck.friends)
  return friends_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::FriendInfo >*
FriendsInfoAck::mutable_friends() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.FriendsInfoAck.friends)
  return &friends_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::FriendInfo >&
FriendsInfoAck::friends() const {
  // @@protoc_insertion_point(field_list:NetMsg.FriendsInfoAck.friends)
  return friends_;
}

inline const FriendsInfoAck* FriendsInfoAck::internal_default_instance() {
  return &FriendsInfoAck_default_instance_.get();
}
// -------------------------------------------------------------------

// MailSender

// optional uint32 id = 1;
inline void MailSender::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 MailSender::id() const {
  // @@protoc_insertion_point(field_get:NetMsg.MailSender.id)
  return id_;
}
inline void MailSender::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.MailSender.id)
}

// optional string name = 2;
inline void MailSender::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MailSender::name() const {
  // @@protoc_insertion_point(field_get:NetMsg.MailSender.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MailSender::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetMsg.MailSender.name)
}
inline void MailSender::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetMsg.MailSender.name)
}
inline void MailSender::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetMsg.MailSender.name)
}
inline ::std::string* MailSender::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:NetMsg.MailSender.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MailSender::release_name() {
  // @@protoc_insertion_point(field_release:NetMsg.MailSender.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MailSender::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:NetMsg.MailSender.name)
}

// optional uint32 icon = 3;
inline void MailSender::clear_icon() {
  icon_ = 0u;
}
inline ::google::protobuf::uint32 MailSender::icon() const {
  // @@protoc_insertion_point(field_get:NetMsg.MailSender.icon)
  return icon_;
}
inline void MailSender::set_icon(::google::protobuf::uint32 value) {
  
  icon_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.MailSender.icon)
}

// optional uint32 title = 4;
inline void MailSender::clear_title() {
  title_ = 0u;
}
inline ::google::protobuf::uint32 MailSender::title() const {
  // @@protoc_insertion_point(field_get:NetMsg.MailSender.title)
  return title_;
}
inline void MailSender::set_title(::google::protobuf::uint32 value) {
  
  title_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.MailSender.title)
}

inline const MailSender* MailSender::internal_default_instance() {
  return &MailSender_default_instance_.get();
}
// -------------------------------------------------------------------

// MailData

// optional uint32 id = 1;
inline void MailData::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 MailData::id() const {
  // @@protoc_insertion_point(field_get:NetMsg.MailData.id)
  return id_;
}
inline void MailData::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.MailData.id)
}

// optional int64 sendTime = 2;
inline void MailData::clear_sendtime() {
  sendtime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MailData::sendtime() const {
  // @@protoc_insertion_point(field_get:NetMsg.MailData.sendTime)
  return sendtime_;
}
inline void MailData::set_sendtime(::google::protobuf::int64 value) {
  
  sendtime_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.MailData.sendTime)
}

// optional .NetMsg.MailSender sender = 3;
inline bool MailData::has_sender() const {
  return this != internal_default_instance() && sender_ != NULL;
}
inline void MailData::clear_sender() {
  if (GetArenaNoVirtual() == NULL && sender_ != NULL) delete sender_;
  sender_ = NULL;
}
inline const ::NetMsg::MailSender& MailData::sender() const {
  // @@protoc_insertion_point(field_get:NetMsg.MailData.sender)
  return sender_ != NULL ? *sender_
                         : *::NetMsg::MailSender::internal_default_instance();
}
inline ::NetMsg::MailSender* MailData::mutable_sender() {
  
  if (sender_ == NULL) {
    sender_ = new ::NetMsg::MailSender;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.MailData.sender)
  return sender_;
}
inline ::NetMsg::MailSender* MailData::release_sender() {
  // @@protoc_insertion_point(field_release:NetMsg.MailData.sender)
  
  ::NetMsg::MailSender* temp = sender_;
  sender_ = NULL;
  return temp;
}
inline void MailData::set_allocated_sender(::NetMsg::MailSender* sender) {
  delete sender_;
  sender_ = sender;
  if (sender) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.MailData.sender)
}

// optional string title = 4;
inline void MailData::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MailData::title() const {
  // @@protoc_insertion_point(field_get:NetMsg.MailData.title)
  return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MailData::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetMsg.MailData.title)
}
inline void MailData::set_title(const char* value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetMsg.MailData.title)
}
inline void MailData::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetMsg.MailData.title)
}
inline ::std::string* MailData::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:NetMsg.MailData.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MailData::release_title() {
  // @@protoc_insertion_point(field_release:NetMsg.MailData.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MailData::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:NetMsg.MailData.title)
}

// optional bool hasAward = 5;
inline void MailData::clear_hasaward() {
  hasaward_ = false;
}
inline bool MailData::hasaward() const {
  // @@protoc_insertion_point(field_get:NetMsg.MailData.hasAward)
  return hasaward_;
}
inline void MailData::set_hasaward(bool value) {
  
  hasaward_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.MailData.hasAward)
}

// optional bool isRead = 6;
inline void MailData::clear_isread() {
  isread_ = false;
}
inline bool MailData::isread() const {
  // @@protoc_insertion_point(field_get:NetMsg.MailData.isRead)
  return isread_;
}
inline void MailData::set_isread(bool value) {
  
  isread_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.MailData.isRead)
}

// optional bool isGetAward = 7;
inline void MailData::clear_isgetaward() {
  isgetaward_ = false;
}
inline bool MailData::isgetaward() const {
  // @@protoc_insertion_point(field_get:NetMsg.MailData.isGetAward)
  return isgetaward_;
}
inline void MailData::set_isgetaward(bool value) {
  
  isgetaward_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.MailData.isGetAward)
}

// optional .NetMsg.MailType type = 8;
inline void MailData::clear_type() {
  type_ = 0;
}
inline ::NetMsg::MailType MailData::type() const {
  // @@protoc_insertion_point(field_get:NetMsg.MailData.type)
  return static_cast< ::NetMsg::MailType >(type_);
}
inline void MailData::set_type(::NetMsg::MailType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.MailData.type)
}

inline const MailData* MailData::internal_default_instance() {
  return &MailData_default_instance_.get();
}
// -------------------------------------------------------------------

// MailInfoAck

// repeated .NetMsg.MailData mails = 1;
inline int MailInfoAck::mails_size() const {
  return mails_.size();
}
inline void MailInfoAck::clear_mails() {
  mails_.Clear();
}
inline const ::NetMsg::MailData& MailInfoAck::mails(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.MailInfoAck.mails)
  return mails_.Get(index);
}
inline ::NetMsg::MailData* MailInfoAck::mutable_mails(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.MailInfoAck.mails)
  return mails_.Mutable(index);
}
inline ::NetMsg::MailData* MailInfoAck::add_mails() {
  // @@protoc_insertion_point(field_add:NetMsg.MailInfoAck.mails)
  return mails_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::MailData >*
MailInfoAck::mutable_mails() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.MailInfoAck.mails)
  return &mails_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::MailData >&
MailInfoAck::mails() const {
  // @@protoc_insertion_point(field_list:NetMsg.MailInfoAck.mails)
  return mails_;
}

inline const MailInfoAck* MailInfoAck::internal_default_instance() {
  return &MailInfoAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqMailDetail

// optional uint32 id = 1;
inline void ReqMailDetail::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 ReqMailDetail::id() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqMailDetail.id)
  return id_;
}
inline void ReqMailDetail::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqMailDetail.id)
}

inline const ReqMailDetail* ReqMailDetail::internal_default_instance() {
  return &ReqMailDetail_default_instance_.get();
}
// -------------------------------------------------------------------

// MailDetailAck

// optional uint32 id = 1;
inline void MailDetailAck::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 MailDetailAck::id() const {
  // @@protoc_insertion_point(field_get:NetMsg.MailDetailAck.id)
  return id_;
}
inline void MailDetailAck::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.MailDetailAck.id)
}

// optional string content = 2;
inline void MailDetailAck::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MailDetailAck::content() const {
  // @@protoc_insertion_point(field_get:NetMsg.MailDetailAck.content)
  return content_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MailDetailAck::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetMsg.MailDetailAck.content)
}
inline void MailDetailAck::set_content(const char* value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetMsg.MailDetailAck.content)
}
inline void MailDetailAck::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetMsg.MailDetailAck.content)
}
inline ::std::string* MailDetailAck::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:NetMsg.MailDetailAck.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MailDetailAck::release_content() {
  // @@protoc_insertion_point(field_release:NetMsg.MailDetailAck.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MailDetailAck::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:NetMsg.MailDetailAck.content)
}

// optional .NetMsg.Award award = 3;
inline bool MailDetailAck::has_award() const {
  return this != internal_default_instance() && award_ != NULL;
}
inline void MailDetailAck::clear_award() {
  if (GetArenaNoVirtual() == NULL && award_ != NULL) delete award_;
  award_ = NULL;
}
inline const ::NetMsg::Award& MailDetailAck::award() const {
  // @@protoc_insertion_point(field_get:NetMsg.MailDetailAck.award)
  return award_ != NULL ? *award_
                         : *::NetMsg::Award::internal_default_instance();
}
inline ::NetMsg::Award* MailDetailAck::mutable_award() {
  
  if (award_ == NULL) {
    award_ = new ::NetMsg::Award;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.MailDetailAck.award)
  return award_;
}
inline ::NetMsg::Award* MailDetailAck::release_award() {
  // @@protoc_insertion_point(field_release:NetMsg.MailDetailAck.award)
  
  ::NetMsg::Award* temp = award_;
  award_ = NULL;
  return temp;
}
inline void MailDetailAck::set_allocated_award(::NetMsg::Award* award) {
  delete award_;
  award_ = award;
  if (award) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.MailDetailAck.award)
}

inline const MailDetailAck* MailDetailAck::internal_default_instance() {
  return &MailDetailAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqGetMailAward

// optional uint32 id = 1;
inline void ReqGetMailAward::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 ReqGetMailAward::id() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqGetMailAward.id)
  return id_;
}
inline void ReqGetMailAward::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqGetMailAward.id)
}

inline const ReqGetMailAward* ReqGetMailAward::internal_default_instance() {
  return &ReqGetMailAward_default_instance_.get();
}
// -------------------------------------------------------------------

// GetMailAwardAck

// optional uint32 id = 1;
inline void GetMailAwardAck::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 GetMailAwardAck::id() const {
  // @@protoc_insertion_point(field_get:NetMsg.GetMailAwardAck.id)
  return id_;
}
inline void GetMailAwardAck::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.GetMailAwardAck.id)
}

inline const GetMailAwardAck* GetMailAwardAck::internal_default_instance() {
  return &GetMailAwardAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqDeleteMail

// optional uint32 id = 1;
inline void ReqDeleteMail::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 ReqDeleteMail::id() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqDeleteMail.id)
  return id_;
}
inline void ReqDeleteMail::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqDeleteMail.id)
}

inline const ReqDeleteMail* ReqDeleteMail::internal_default_instance() {
  return &ReqDeleteMail_default_instance_.get();
}
// -------------------------------------------------------------------

// DeleteMailAck

// optional uint32 id = 1;
inline void DeleteMailAck::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 DeleteMailAck::id() const {
  // @@protoc_insertion_point(field_get:NetMsg.DeleteMailAck.id)
  return id_;
}
inline void DeleteMailAck::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.DeleteMailAck.id)
}

inline const DeleteMailAck* DeleteMailAck::internal_default_instance() {
  return &DeleteMailAck_default_instance_.get();
}
// -------------------------------------------------------------------

// BanquetHeros

// optional uint32 uid = 1;
inline void BanquetHeros::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 BanquetHeros::uid() const {
  // @@protoc_insertion_point(field_get:NetMsg.BanquetHeros.uid)
  return uid_;
}
inline void BanquetHeros::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.BanquetHeros.uid)
}

// optional uint32 banquetId = 2;
inline void BanquetHeros::clear_banquetid() {
  banquetid_ = 0u;
}
inline ::google::protobuf::uint32 BanquetHeros::banquetid() const {
  // @@protoc_insertion_point(field_get:NetMsg.BanquetHeros.banquetId)
  return banquetid_;
}
inline void BanquetHeros::set_banquetid(::google::protobuf::uint32 value) {
  
  banquetid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.BanquetHeros.banquetId)
}

// repeated uint32 heros = 3;
inline int BanquetHeros::heros_size() const {
  return heros_.size();
}
inline void BanquetHeros::clear_heros() {
  heros_.Clear();
}
inline ::google::protobuf::uint32 BanquetHeros::heros(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.BanquetHeros.heros)
  return heros_.Get(index);
}
inline void BanquetHeros::set_heros(int index, ::google::protobuf::uint32 value) {
  heros_.Set(index, value);
  // @@protoc_insertion_point(field_set:NetMsg.BanquetHeros.heros)
}
inline void BanquetHeros::add_heros(::google::protobuf::uint32 value) {
  heros_.Add(value);
  // @@protoc_insertion_point(field_add:NetMsg.BanquetHeros.heros)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BanquetHeros::heros() const {
  // @@protoc_insertion_point(field_list:NetMsg.BanquetHeros.heros)
  return heros_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BanquetHeros::mutable_heros() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.BanquetHeros.heros)
  return &heros_;
}

// repeated bool banquet = 4;
inline int BanquetHeros::banquet_size() const {
  return banquet_.size();
}
inline void BanquetHeros::clear_banquet() {
  banquet_.Clear();
}
inline bool BanquetHeros::banquet(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.BanquetHeros.banquet)
  return banquet_.Get(index);
}
inline void BanquetHeros::set_banquet(int index, bool value) {
  banquet_.Set(index, value);
  // @@protoc_insertion_point(field_set:NetMsg.BanquetHeros.banquet)
}
inline void BanquetHeros::add_banquet(bool value) {
  banquet_.Add(value);
  // @@protoc_insertion_point(field_add:NetMsg.BanquetHeros.banquet)
}
inline const ::google::protobuf::RepeatedField< bool >&
BanquetHeros::banquet() const {
  // @@protoc_insertion_point(field_list:NetMsg.BanquetHeros.banquet)
  return banquet_;
}
inline ::google::protobuf::RepeatedField< bool >*
BanquetHeros::mutable_banquet() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.BanquetHeros.banquet)
  return &banquet_;
}

// optional uint32 leftFreeTimes = 5;
inline void BanquetHeros::clear_leftfreetimes() {
  leftfreetimes_ = 0u;
}
inline ::google::protobuf::uint32 BanquetHeros::leftfreetimes() const {
  // @@protoc_insertion_point(field_get:NetMsg.BanquetHeros.leftFreeTimes)
  return leftfreetimes_;
}
inline void BanquetHeros::set_leftfreetimes(::google::protobuf::uint32 value) {
  
  leftfreetimes_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.BanquetHeros.leftFreeTimes)
}

// optional uint32 leftTime = 6;
inline void BanquetHeros::clear_lefttime() {
  lefttime_ = 0u;
}
inline ::google::protobuf::uint32 BanquetHeros::lefttime() const {
  // @@protoc_insertion_point(field_get:NetMsg.BanquetHeros.leftTime)
  return lefttime_;
}
inline void BanquetHeros::set_lefttime(::google::protobuf::uint32 value) {
  
  lefttime_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.BanquetHeros.leftTime)
}

inline const BanquetHeros* BanquetHeros::internal_default_instance() {
  return &BanquetHeros_default_instance_.get();
}
// -------------------------------------------------------------------

// BanquetInfoAck

// repeated .NetMsg.BanquetHeros info = 1;
inline int BanquetInfoAck::info_size() const {
  return info_.size();
}
inline void BanquetInfoAck::clear_info() {
  info_.Clear();
}
inline const ::NetMsg::BanquetHeros& BanquetInfoAck::info(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.BanquetInfoAck.info)
  return info_.Get(index);
}
inline ::NetMsg::BanquetHeros* BanquetInfoAck::mutable_info(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.BanquetInfoAck.info)
  return info_.Mutable(index);
}
inline ::NetMsg::BanquetHeros* BanquetInfoAck::add_info() {
  // @@protoc_insertion_point(field_add:NetMsg.BanquetInfoAck.info)
  return info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::BanquetHeros >*
BanquetInfoAck::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.BanquetInfoAck.info)
  return &info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::BanquetHeros >&
BanquetInfoAck::info() const {
  // @@protoc_insertion_point(field_list:NetMsg.BanquetInfoAck.info)
  return info_;
}

inline const BanquetInfoAck* BanquetInfoAck::internal_default_instance() {
  return &BanquetInfoAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqBanquetHero

// optional uint32 type = 1;
inline void ReqBanquetHero::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 ReqBanquetHero::type() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqBanquetHero.type)
  return type_;
}
inline void ReqBanquetHero::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqBanquetHero.type)
}

// optional uint32 uid = 2;
inline void ReqBanquetHero::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 ReqBanquetHero::uid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqBanquetHero.uid)
  return uid_;
}
inline void ReqBanquetHero::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqBanquetHero.uid)
}

inline const ReqBanquetHero* ReqBanquetHero::internal_default_instance() {
  return &ReqBanquetHero_default_instance_.get();
}
// -------------------------------------------------------------------

// BanquetHeroAck

// optional uint32 uid = 1;
inline void BanquetHeroAck::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 BanquetHeroAck::uid() const {
  // @@protoc_insertion_point(field_get:NetMsg.BanquetHeroAck.uid)
  return uid_;
}
inline void BanquetHeroAck::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.BanquetHeroAck.uid)
}

// repeated uint64 heros = 2;
inline int BanquetHeroAck::heros_size() const {
  return heros_.size();
}
inline void BanquetHeroAck::clear_heros() {
  heros_.Clear();
}
inline ::google::protobuf::uint64 BanquetHeroAck::heros(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.BanquetHeroAck.heros)
  return heros_.Get(index);
}
inline void BanquetHeroAck::set_heros(int index, ::google::protobuf::uint64 value) {
  heros_.Set(index, value);
  // @@protoc_insertion_point(field_set:NetMsg.BanquetHeroAck.heros)
}
inline void BanquetHeroAck::add_heros(::google::protobuf::uint64 value) {
  heros_.Add(value);
  // @@protoc_insertion_point(field_add:NetMsg.BanquetHeroAck.heros)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
BanquetHeroAck::heros() const {
  // @@protoc_insertion_point(field_list:NetMsg.BanquetHeroAck.heros)
  return heros_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
BanquetHeroAck::mutable_heros() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.BanquetHeroAck.heros)
  return &heros_;
}

// optional uint32 error = 3;
inline void BanquetHeroAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 BanquetHeroAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.BanquetHeroAck.error)
  return error_;
}
inline void BanquetHeroAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.BanquetHeroAck.error)
}

inline const BanquetHeroAck* BanquetHeroAck::internal_default_instance() {
  return &BanquetHeroAck_default_instance_.get();
}
// -------------------------------------------------------------------

// WorldWarInfo

// optional uint32 id = 1;
inline void WorldWarInfo::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 WorldWarInfo::id() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarInfo.id)
  return id_;
}
inline void WorldWarInfo::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarInfo.id)
}

// optional uint32 force1 = 2;
inline void WorldWarInfo::clear_force1() {
  force1_ = 0u;
}
inline ::google::protobuf::uint32 WorldWarInfo::force1() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarInfo.force1)
  return force1_;
}
inline void WorldWarInfo::set_force1(::google::protobuf::uint32 value) {
  
  force1_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarInfo.force1)
}

// optional uint32 force2 = 3;
inline void WorldWarInfo::clear_force2() {
  force2_ = 0u;
}
inline ::google::protobuf::uint32 WorldWarInfo::force2() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarInfo.force2)
  return force2_;
}
inline void WorldWarInfo::set_force2(::google::protobuf::uint32 value) {
  
  force2_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarInfo.force2)
}

// optional uint32 type = 4;
inline void WorldWarInfo::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 WorldWarInfo::type() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarInfo.type)
  return type_;
}
inline void WorldWarInfo::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarInfo.type)
}

// optional uint32 path = 5;
inline void WorldWarInfo::clear_path() {
  path_ = 0u;
}
inline ::google::protobuf::uint32 WorldWarInfo::path() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarInfo.path)
  return path_;
}
inline void WorldWarInfo::set_path(::google::protobuf::uint32 value) {
  
  path_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarInfo.path)
}

// optional float percent = 6;
inline void WorldWarInfo::clear_percent() {
  percent_ = 0;
}
inline float WorldWarInfo::percent() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarInfo.percent)
  return percent_;
}
inline void WorldWarInfo::set_percent(float value) {
  
  percent_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarInfo.percent)
}

// optional uint32 leftTime = 7;
inline void WorldWarInfo::clear_lefttime() {
  lefttime_ = 0u;
}
inline ::google::protobuf::uint32 WorldWarInfo::lefttime() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarInfo.leftTime)
  return lefttime_;
}
inline void WorldWarInfo::set_lefttime(::google::protobuf::uint32 value) {
  
  lefttime_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarInfo.leftTime)
}

// optional uint32 warId = 8;
inline void WorldWarInfo::clear_warid() {
  warid_ = 0u;
}
inline ::google::protobuf::uint32 WorldWarInfo::warid() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarInfo.warId)
  return warid_;
}
inline void WorldWarInfo::set_warid(::google::protobuf::uint32 value) {
  
  warid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarInfo.warId)
}

inline const WorldWarInfo* WorldWarInfo::internal_default_instance() {
  return &WorldWarInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// WorldWarAck

// repeated .NetMsg.WorldWarInfo wars = 1;
inline int WorldWarAck::wars_size() const {
  return wars_.size();
}
inline void WorldWarAck::clear_wars() {
  wars_.Clear();
}
inline const ::NetMsg::WorldWarInfo& WorldWarAck::wars(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarAck.wars)
  return wars_.Get(index);
}
inline ::NetMsg::WorldWarInfo* WorldWarAck::mutable_wars(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.WorldWarAck.wars)
  return wars_.Mutable(index);
}
inline ::NetMsg::WorldWarInfo* WorldWarAck::add_wars() {
  // @@protoc_insertion_point(field_add:NetMsg.WorldWarAck.wars)
  return wars_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::WorldWarInfo >*
WorldWarAck::mutable_wars() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.WorldWarAck.wars)
  return &wars_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::WorldWarInfo >&
WorldWarAck::wars() const {
  // @@protoc_insertion_point(field_list:NetMsg.WorldWarAck.wars)
  return wars_;
}

inline const WorldWarAck* WorldWarAck::internal_default_instance() {
  return &WorldWarAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqWorldBattle

// optional uint32 id = 1;
inline void ReqWorldBattle::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 ReqWorldBattle::id() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqWorldBattle.id)
  return id_;
}
inline void ReqWorldBattle::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqWorldBattle.id)
}

inline const ReqWorldBattle* ReqWorldBattle::internal_default_instance() {
  return &ReqWorldBattle_default_instance_.get();
}
// -------------------------------------------------------------------

// WorldBattleAck

// optional uint32 id = 1;
inline void WorldBattleAck::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 WorldBattleAck::id() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldBattleAck.id)
  return id_;
}
inline void WorldBattleAck::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldBattleAck.id)
}

// optional .NetMsg.BattleAck battle = 2;
inline bool WorldBattleAck::has_battle() const {
  return this != internal_default_instance() && battle_ != NULL;
}
inline void WorldBattleAck::clear_battle() {
  if (GetArenaNoVirtual() == NULL && battle_ != NULL) delete battle_;
  battle_ = NULL;
}
inline const ::NetMsg::BattleAck& WorldBattleAck::battle() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldBattleAck.battle)
  return battle_ != NULL ? *battle_
                         : *::NetMsg::BattleAck::internal_default_instance();
}
inline ::NetMsg::BattleAck* WorldBattleAck::mutable_battle() {
  
  if (battle_ == NULL) {
    battle_ = new ::NetMsg::BattleAck;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.WorldBattleAck.battle)
  return battle_;
}
inline ::NetMsg::BattleAck* WorldBattleAck::release_battle() {
  // @@protoc_insertion_point(field_release:NetMsg.WorldBattleAck.battle)
  
  ::NetMsg::BattleAck* temp = battle_;
  battle_ = NULL;
  return temp;
}
inline void WorldBattleAck::set_allocated_battle(::NetMsg::BattleAck* battle) {
  delete battle_;
  battle_ = battle;
  if (battle) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.WorldBattleAck.battle)
}

inline const WorldBattleAck* WorldBattleAck::internal_default_instance() {
  return &WorldBattleAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqWorldWarTopList

// optional uint32 id = 1;
inline void ReqWorldWarTopList::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 ReqWorldWarTopList::id() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqWorldWarTopList.id)
  return id_;
}
inline void ReqWorldWarTopList::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqWorldWarTopList.id)
}

inline const ReqWorldWarTopList* ReqWorldWarTopList::internal_default_instance() {
  return &ReqWorldWarTopList_default_instance_.get();
}
// -------------------------------------------------------------------

// WorldWarUserInfo

// optional uint32 userId = 1;
inline void WorldWarUserInfo::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 WorldWarUserInfo::userid() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarUserInfo.userId)
  return userid_;
}
inline void WorldWarUserInfo::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarUserInfo.userId)
}

// optional uint32 exploit = 2;
inline void WorldWarUserInfo::clear_exploit() {
  exploit_ = 0u;
}
inline ::google::protobuf::uint32 WorldWarUserInfo::exploit() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarUserInfo.exploit)
  return exploit_;
}
inline void WorldWarUserInfo::set_exploit(::google::protobuf::uint32 value) {
  
  exploit_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarUserInfo.exploit)
}

// optional string name = 3;
inline void WorldWarUserInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WorldWarUserInfo::name() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarUserInfo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorldWarUserInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarUserInfo.name)
}
inline void WorldWarUserInfo::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetMsg.WorldWarUserInfo.name)
}
inline void WorldWarUserInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetMsg.WorldWarUserInfo.name)
}
inline ::std::string* WorldWarUserInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:NetMsg.WorldWarUserInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WorldWarUserInfo::release_name() {
  // @@protoc_insertion_point(field_release:NetMsg.WorldWarUserInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WorldWarUserInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:NetMsg.WorldWarUserInfo.name)
}

// optional uint32 title = 4;
inline void WorldWarUserInfo::clear_title() {
  title_ = 0u;
}
inline ::google::protobuf::uint32 WorldWarUserInfo::title() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarUserInfo.title)
  return title_;
}
inline void WorldWarUserInfo::set_title(::google::protobuf::uint32 value) {
  
  title_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarUserInfo.title)
}

// optional uint32 force = 5;
inline void WorldWarUserInfo::clear_force() {
  force_ = 0u;
}
inline ::google::protobuf::uint32 WorldWarUserInfo::force() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarUserInfo.force)
  return force_;
}
inline void WorldWarUserInfo::set_force(::google::protobuf::uint32 value) {
  
  force_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarUserInfo.force)
}

// optional uint32 level = 6;
inline void WorldWarUserInfo::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 WorldWarUserInfo::level() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarUserInfo.level)
  return level_;
}
inline void WorldWarUserInfo::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarUserInfo.level)
}

inline const WorldWarUserInfo* WorldWarUserInfo::internal_default_instance() {
  return &WorldWarUserInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// WorldWarTopListAck

// optional uint32 id = 1;
inline void WorldWarTopListAck::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 WorldWarTopListAck::id() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarTopListAck.id)
  return id_;
}
inline void WorldWarTopListAck::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarTopListAck.id)
}

// repeated .NetMsg.WorldWarUserInfo tolList = 2;
inline int WorldWarTopListAck::tollist_size() const {
  return tollist_.size();
}
inline void WorldWarTopListAck::clear_tollist() {
  tollist_.Clear();
}
inline const ::NetMsg::WorldWarUserInfo& WorldWarTopListAck::tollist(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarTopListAck.tolList)
  return tollist_.Get(index);
}
inline ::NetMsg::WorldWarUserInfo* WorldWarTopListAck::mutable_tollist(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.WorldWarTopListAck.tolList)
  return tollist_.Mutable(index);
}
inline ::NetMsg::WorldWarUserInfo* WorldWarTopListAck::add_tollist() {
  // @@protoc_insertion_point(field_add:NetMsg.WorldWarTopListAck.tolList)
  return tollist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::WorldWarUserInfo >*
WorldWarTopListAck::mutable_tollist() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.WorldWarTopListAck.tolList)
  return &tollist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::WorldWarUserInfo >&
WorldWarTopListAck::tollist() const {
  // @@protoc_insertion_point(field_list:NetMsg.WorldWarTopListAck.tolList)
  return tollist_;
}

// repeated .NetMsg.WorldWarUserInfo lastList = 3;
inline int WorldWarTopListAck::lastlist_size() const {
  return lastlist_.size();
}
inline void WorldWarTopListAck::clear_lastlist() {
  lastlist_.Clear();
}
inline const ::NetMsg::WorldWarUserInfo& WorldWarTopListAck::lastlist(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarTopListAck.lastList)
  return lastlist_.Get(index);
}
inline ::NetMsg::WorldWarUserInfo* WorldWarTopListAck::mutable_lastlist(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.WorldWarTopListAck.lastList)
  return lastlist_.Mutable(index);
}
inline ::NetMsg::WorldWarUserInfo* WorldWarTopListAck::add_lastlist() {
  // @@protoc_insertion_point(field_add:NetMsg.WorldWarTopListAck.lastList)
  return lastlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::WorldWarUserInfo >*
WorldWarTopListAck::mutable_lastlist() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.WorldWarTopListAck.lastList)
  return &lastlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::WorldWarUserInfo >&
WorldWarTopListAck::lastlist() const {
  // @@protoc_insertion_point(field_list:NetMsg.WorldWarTopListAck.lastList)
  return lastlist_;
}

// optional uint32 tolRank = 4;
inline void WorldWarTopListAck::clear_tolrank() {
  tolrank_ = 0u;
}
inline ::google::protobuf::uint32 WorldWarTopListAck::tolrank() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarTopListAck.tolRank)
  return tolrank_;
}
inline void WorldWarTopListAck::set_tolrank(::google::protobuf::uint32 value) {
  
  tolrank_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarTopListAck.tolRank)
}

// optional uint32 lastRank = 5;
inline void WorldWarTopListAck::clear_lastrank() {
  lastrank_ = 0u;
}
inline ::google::protobuf::uint32 WorldWarTopListAck::lastrank() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarTopListAck.lastRank)
  return lastrank_;
}
inline void WorldWarTopListAck::set_lastrank(::google::protobuf::uint32 value) {
  
  lastrank_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarTopListAck.lastRank)
}

// optional uint32 tolExploit = 6;
inline void WorldWarTopListAck::clear_tolexploit() {
  tolexploit_ = 0u;
}
inline ::google::protobuf::uint32 WorldWarTopListAck::tolexploit() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarTopListAck.tolExploit)
  return tolexploit_;
}
inline void WorldWarTopListAck::set_tolexploit(::google::protobuf::uint32 value) {
  
  tolexploit_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarTopListAck.tolExploit)
}

// optional uint32 lastExploit = 7;
inline void WorldWarTopListAck::clear_lastexploit() {
  lastexploit_ = 0u;
}
inline ::google::protobuf::uint32 WorldWarTopListAck::lastexploit() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarTopListAck.lastExploit)
  return lastexploit_;
}
inline void WorldWarTopListAck::set_lastexploit(::google::protobuf::uint32 value) {
  
  lastexploit_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarTopListAck.lastExploit)
}

// optional uint32 tolLeftTime = 8;
inline void WorldWarTopListAck::clear_tollefttime() {
  tollefttime_ = 0u;
}
inline ::google::protobuf::uint32 WorldWarTopListAck::tollefttime() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarTopListAck.tolLeftTime)
  return tollefttime_;
}
inline void WorldWarTopListAck::set_tollefttime(::google::protobuf::uint32 value) {
  
  tollefttime_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarTopListAck.tolLeftTime)
}

// optional uint32 periodLeftTime = 9;
inline void WorldWarTopListAck::clear_periodlefttime() {
  periodlefttime_ = 0u;
}
inline ::google::protobuf::uint32 WorldWarTopListAck::periodlefttime() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarTopListAck.periodLeftTime)
  return periodlefttime_;
}
inline void WorldWarTopListAck::set_periodlefttime(::google::protobuf::uint32 value) {
  
  periodlefttime_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarTopListAck.periodLeftTime)
}

inline const WorldWarTopListAck* WorldWarTopListAck::internal_default_instance() {
  return &WorldWarTopListAck_default_instance_.get();
}
// -------------------------------------------------------------------

// TeamInfo

// repeated uint64 heroId = 1;
inline int TeamInfo::heroid_size() const {
  return heroid_.size();
}
inline void TeamInfo::clear_heroid() {
  heroid_.Clear();
}
inline ::google::protobuf::uint64 TeamInfo::heroid(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.TeamInfo.heroId)
  return heroid_.Get(index);
}
inline void TeamInfo::set_heroid(int index, ::google::protobuf::uint64 value) {
  heroid_.Set(index, value);
  // @@protoc_insertion_point(field_set:NetMsg.TeamInfo.heroId)
}
inline void TeamInfo::add_heroid(::google::protobuf::uint64 value) {
  heroid_.Add(value);
  // @@protoc_insertion_point(field_add:NetMsg.TeamInfo.heroId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TeamInfo::heroid() const {
  // @@protoc_insertion_point(field_list:NetMsg.TeamInfo.heroId)
  return heroid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TeamInfo::mutable_heroid() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.TeamInfo.heroId)
  return &heroid_;
}

// optional uint64 clusterId = 2;
inline void TeamInfo::clear_clusterid() {
  clusterid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TeamInfo::clusterid() const {
  // @@protoc_insertion_point(field_get:NetMsg.TeamInfo.clusterId)
  return clusterid_;
}
inline void TeamInfo::set_clusterid(::google::protobuf::uint64 value) {
  
  clusterid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.TeamInfo.clusterId)
}

inline const TeamInfo* TeamInfo::internal_default_instance() {
  return &TeamInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// TeamInfoAck

// repeated .NetMsg.TeamInfo infos = 1;
inline int TeamInfoAck::infos_size() const {
  return infos_.size();
}
inline void TeamInfoAck::clear_infos() {
  infos_.Clear();
}
inline const ::NetMsg::TeamInfo& TeamInfoAck::infos(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.TeamInfoAck.infos)
  return infos_.Get(index);
}
inline ::NetMsg::TeamInfo* TeamInfoAck::mutable_infos(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.TeamInfoAck.infos)
  return infos_.Mutable(index);
}
inline ::NetMsg::TeamInfo* TeamInfoAck::add_infos() {
  // @@protoc_insertion_point(field_add:NetMsg.TeamInfoAck.infos)
  return infos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::TeamInfo >*
TeamInfoAck::mutable_infos() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.TeamInfoAck.infos)
  return &infos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::TeamInfo >&
TeamInfoAck::infos() const {
  // @@protoc_insertion_point(field_list:NetMsg.TeamInfoAck.infos)
  return infos_;
}

inline const TeamInfoAck* TeamInfoAck::internal_default_instance() {
  return &TeamInfoAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqSetTeam

// optional uint32 pos = 1;
inline void ReqSetTeam::clear_pos() {
  pos_ = 0u;
}
inline ::google::protobuf::uint32 ReqSetTeam::pos() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqSetTeam.pos)
  return pos_;
}
inline void ReqSetTeam::set_pos(::google::protobuf::uint32 value) {
  
  pos_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqSetTeam.pos)
}

// repeated uint64 heroId = 2;
inline int ReqSetTeam::heroid_size() const {
  return heroid_.size();
}
inline void ReqSetTeam::clear_heroid() {
  heroid_.Clear();
}
inline ::google::protobuf::uint64 ReqSetTeam::heroid(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqSetTeam.heroId)
  return heroid_.Get(index);
}
inline void ReqSetTeam::set_heroid(int index, ::google::protobuf::uint64 value) {
  heroid_.Set(index, value);
  // @@protoc_insertion_point(field_set:NetMsg.ReqSetTeam.heroId)
}
inline void ReqSetTeam::add_heroid(::google::protobuf::uint64 value) {
  heroid_.Add(value);
  // @@protoc_insertion_point(field_add:NetMsg.ReqSetTeam.heroId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ReqSetTeam::heroid() const {
  // @@protoc_insertion_point(field_list:NetMsg.ReqSetTeam.heroId)
  return heroid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ReqSetTeam::mutable_heroid() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.ReqSetTeam.heroId)
  return &heroid_;
}

inline const ReqSetTeam* ReqSetTeam::internal_default_instance() {
  return &ReqSetTeam_default_instance_.get();
}
// -------------------------------------------------------------------

// SetTeamAck

// optional uint32 pos = 1;
inline void SetTeamAck::clear_pos() {
  pos_ = 0u;
}
inline ::google::protobuf::uint32 SetTeamAck::pos() const {
  // @@protoc_insertion_point(field_get:NetMsg.SetTeamAck.pos)
  return pos_;
}
inline void SetTeamAck::set_pos(::google::protobuf::uint32 value) {
  
  pos_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.SetTeamAck.pos)
}

// repeated uint64 heroId = 2;
inline int SetTeamAck::heroid_size() const {
  return heroid_.size();
}
inline void SetTeamAck::clear_heroid() {
  heroid_.Clear();
}
inline ::google::protobuf::uint64 SetTeamAck::heroid(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.SetTeamAck.heroId)
  return heroid_.Get(index);
}
inline void SetTeamAck::set_heroid(int index, ::google::protobuf::uint64 value) {
  heroid_.Set(index, value);
  // @@protoc_insertion_point(field_set:NetMsg.SetTeamAck.heroId)
}
inline void SetTeamAck::add_heroid(::google::protobuf::uint64 value) {
  heroid_.Add(value);
  // @@protoc_insertion_point(field_add:NetMsg.SetTeamAck.heroId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
SetTeamAck::heroid() const {
  // @@protoc_insertion_point(field_list:NetMsg.SetTeamAck.heroId)
  return heroid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
SetTeamAck::mutable_heroid() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.SetTeamAck.heroId)
  return &heroid_;
}

// optional uint32 error = 3;
inline void SetTeamAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 SetTeamAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.SetTeamAck.error)
  return error_;
}
inline void SetTeamAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.SetTeamAck.error)
}

inline const SetTeamAck* SetTeamAck::internal_default_instance() {
  return &SetTeamAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqWriteSkillBook

// optional uint64 heroId = 1;
inline void ReqWriteSkillBook::clear_heroid() {
  heroid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ReqWriteSkillBook::heroid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqWriteSkillBook.heroId)
  return heroid_;
}
inline void ReqWriteSkillBook::set_heroid(::google::protobuf::uint64 value) {
  
  heroid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqWriteSkillBook.heroId)
}

// repeated .NetMsg.ItemInfo items = 2;
inline int ReqWriteSkillBook::items_size() const {
  return items_.size();
}
inline void ReqWriteSkillBook::clear_items() {
  items_.Clear();
}
inline const ::NetMsg::ItemInfo& ReqWriteSkillBook::items(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqWriteSkillBook.items)
  return items_.Get(index);
}
inline ::NetMsg::ItemInfo* ReqWriteSkillBook::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.ReqWriteSkillBook.items)
  return items_.Mutable(index);
}
inline ::NetMsg::ItemInfo* ReqWriteSkillBook::add_items() {
  // @@protoc_insertion_point(field_add:NetMsg.ReqWriteSkillBook.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::ItemInfo >*
ReqWriteSkillBook::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.ReqWriteSkillBook.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::ItemInfo >&
ReqWriteSkillBook::items() const {
  // @@protoc_insertion_point(field_list:NetMsg.ReqWriteSkillBook.items)
  return items_;
}

inline const ReqWriteSkillBook* ReqWriteSkillBook::internal_default_instance() {
  return &ReqWriteSkillBook_default_instance_.get();
}
// -------------------------------------------------------------------

// WriteSkillBookAck

// repeated .NetMsg.ItemInfo items = 1;
inline int WriteSkillBookAck::items_size() const {
  return items_.size();
}
inline void WriteSkillBookAck::clear_items() {
  items_.Clear();
}
inline const ::NetMsg::ItemInfo& WriteSkillBookAck::items(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.WriteSkillBookAck.items)
  return items_.Get(index);
}
inline ::NetMsg::ItemInfo* WriteSkillBookAck::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.WriteSkillBookAck.items)
  return items_.Mutable(index);
}
inline ::NetMsg::ItemInfo* WriteSkillBookAck::add_items() {
  // @@protoc_insertion_point(field_add:NetMsg.WriteSkillBookAck.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::ItemInfo >*
WriteSkillBookAck::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.WriteSkillBookAck.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::ItemInfo >&
WriteSkillBookAck::items() const {
  // @@protoc_insertion_point(field_list:NetMsg.WriteSkillBookAck.items)
  return items_;
}

// optional uint32 error = 2;
inline void WriteSkillBookAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 WriteSkillBookAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.WriteSkillBookAck.error)
  return error_;
}
inline void WriteSkillBookAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WriteSkillBookAck.error)
}

inline const WriteSkillBookAck* WriteSkillBookAck::internal_default_instance() {
  return &WriteSkillBookAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqTeamRunPath

// optional uint32 position = 1;
inline void ReqTeamRunPath::clear_position() {
  position_ = 0u;
}
inline ::google::protobuf::uint32 ReqTeamRunPath::position() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqTeamRunPath.position)
  return position_;
}
inline void ReqTeamRunPath::set_position(::google::protobuf::uint32 value) {
  
  position_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqTeamRunPath.position)
}

inline const ReqTeamRunPath* ReqTeamRunPath::internal_default_instance() {
  return &ReqTeamRunPath_default_instance_.get();
}
// -------------------------------------------------------------------

// TeamRunPathAck

// optional uint32 position = 1;
inline void TeamRunPathAck::clear_position() {
  position_ = 0u;
}
inline ::google::protobuf::uint32 TeamRunPathAck::position() const {
  // @@protoc_insertion_point(field_get:NetMsg.TeamRunPathAck.position)
  return position_;
}
inline void TeamRunPathAck::set_position(::google::protobuf::uint32 value) {
  
  position_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.TeamRunPathAck.position)
}

// optional .NetMsg.RunPathAck path = 2;
inline bool TeamRunPathAck::has_path() const {
  return this != internal_default_instance() && path_ != NULL;
}
inline void TeamRunPathAck::clear_path() {
  if (GetArenaNoVirtual() == NULL && path_ != NULL) delete path_;
  path_ = NULL;
}
inline const ::NetMsg::RunPathAck& TeamRunPathAck::path() const {
  // @@protoc_insertion_point(field_get:NetMsg.TeamRunPathAck.path)
  return path_ != NULL ? *path_
                         : *::NetMsg::RunPathAck::internal_default_instance();
}
inline ::NetMsg::RunPathAck* TeamRunPathAck::mutable_path() {
  
  if (path_ == NULL) {
    path_ = new ::NetMsg::RunPathAck;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.TeamRunPathAck.path)
  return path_;
}
inline ::NetMsg::RunPathAck* TeamRunPathAck::release_path() {
  // @@protoc_insertion_point(field_release:NetMsg.TeamRunPathAck.path)
  
  ::NetMsg::RunPathAck* temp = path_;
  path_ = NULL;
  return temp;
}
inline void TeamRunPathAck::set_allocated_path(::NetMsg::RunPathAck* path) {
  delete path_;
  path_ = path;
  if (path) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.TeamRunPathAck.path)
}

// optional int32 curCity = 3;
inline void TeamRunPathAck::clear_curcity() {
  curcity_ = 0;
}
inline ::google::protobuf::int32 TeamRunPathAck::curcity() const {
  // @@protoc_insertion_point(field_get:NetMsg.TeamRunPathAck.curCity)
  return curcity_;
}
inline void TeamRunPathAck::set_curcity(::google::protobuf::int32 value) {
  
  curcity_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.TeamRunPathAck.curCity)
}

inline const TeamRunPathAck* TeamRunPathAck::internal_default_instance() {
  return &TeamRunPathAck_default_instance_.get();
}
// -------------------------------------------------------------------

// SetTeamRunPath

// optional uint32 position = 1;
inline void SetTeamRunPath::clear_position() {
  position_ = 0u;
}
inline ::google::protobuf::uint32 SetTeamRunPath::position() const {
  // @@protoc_insertion_point(field_get:NetMsg.SetTeamRunPath.position)
  return position_;
}
inline void SetTeamRunPath::set_position(::google::protobuf::uint32 value) {
  
  position_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.SetTeamRunPath.position)
}

// optional .NetMsg.RunPathAck path = 2;
inline bool SetTeamRunPath::has_path() const {
  return this != internal_default_instance() && path_ != NULL;
}
inline void SetTeamRunPath::clear_path() {
  if (GetArenaNoVirtual() == NULL && path_ != NULL) delete path_;
  path_ = NULL;
}
inline const ::NetMsg::RunPathAck& SetTeamRunPath::path() const {
  // @@protoc_insertion_point(field_get:NetMsg.SetTeamRunPath.path)
  return path_ != NULL ? *path_
                         : *::NetMsg::RunPathAck::internal_default_instance();
}
inline ::NetMsg::RunPathAck* SetTeamRunPath::mutable_path() {
  
  if (path_ == NULL) {
    path_ = new ::NetMsg::RunPathAck;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.SetTeamRunPath.path)
  return path_;
}
inline ::NetMsg::RunPathAck* SetTeamRunPath::release_path() {
  // @@protoc_insertion_point(field_release:NetMsg.SetTeamRunPath.path)
  
  ::NetMsg::RunPathAck* temp = path_;
  path_ = NULL;
  return temp;
}
inline void SetTeamRunPath::set_allocated_path(::NetMsg::RunPathAck* path) {
  delete path_;
  path_ = path;
  if (path) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.SetTeamRunPath.path)
}

inline const SetTeamRunPath* SetTeamRunPath::internal_default_instance() {
  return &SetTeamRunPath_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqTeamArrivedTar

// optional uint32 position = 1;
inline void ReqTeamArrivedTar::clear_position() {
  position_ = 0u;
}
inline ::google::protobuf::uint32 ReqTeamArrivedTar::position() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqTeamArrivedTar.position)
  return position_;
}
inline void ReqTeamArrivedTar::set_position(::google::protobuf::uint32 value) {
  
  position_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqTeamArrivedTar.position)
}

// optional .NetMsg.RunPathAck path = 2;
inline bool ReqTeamArrivedTar::has_path() const {
  return this != internal_default_instance() && path_ != NULL;
}
inline void ReqTeamArrivedTar::clear_path() {
  if (GetArenaNoVirtual() == NULL && path_ != NULL) delete path_;
  path_ = NULL;
}
inline const ::NetMsg::RunPathAck& ReqTeamArrivedTar::path() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqTeamArrivedTar.path)
  return path_ != NULL ? *path_
                         : *::NetMsg::RunPathAck::internal_default_instance();
}
inline ::NetMsg::RunPathAck* ReqTeamArrivedTar::mutable_path() {
  
  if (path_ == NULL) {
    path_ = new ::NetMsg::RunPathAck;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.ReqTeamArrivedTar.path)
  return path_;
}
inline ::NetMsg::RunPathAck* ReqTeamArrivedTar::release_path() {
  // @@protoc_insertion_point(field_release:NetMsg.ReqTeamArrivedTar.path)
  
  ::NetMsg::RunPathAck* temp = path_;
  path_ = NULL;
  return temp;
}
inline void ReqTeamArrivedTar::set_allocated_path(::NetMsg::RunPathAck* path) {
  delete path_;
  path_ = path;
  if (path) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.ReqTeamArrivedTar.path)
}

inline const ReqTeamArrivedTar* ReqTeamArrivedTar::internal_default_instance() {
  return &ReqTeamArrivedTar_default_instance_.get();
}
// -------------------------------------------------------------------

// TeamArrivedTarAck

// optional uint32 position = 1;
inline void TeamArrivedTarAck::clear_position() {
  position_ = 0u;
}
inline ::google::protobuf::uint32 TeamArrivedTarAck::position() const {
  // @@protoc_insertion_point(field_get:NetMsg.TeamArrivedTarAck.position)
  return position_;
}
inline void TeamArrivedTarAck::set_position(::google::protobuf::uint32 value) {
  
  position_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.TeamArrivedTarAck.position)
}

// optional .NetMsg.RunPathAck path = 2;
inline bool TeamArrivedTarAck::has_path() const {
  return this != internal_default_instance() && path_ != NULL;
}
inline void TeamArrivedTarAck::clear_path() {
  if (GetArenaNoVirtual() == NULL && path_ != NULL) delete path_;
  path_ = NULL;
}
inline const ::NetMsg::RunPathAck& TeamArrivedTarAck::path() const {
  // @@protoc_insertion_point(field_get:NetMsg.TeamArrivedTarAck.path)
  return path_ != NULL ? *path_
                         : *::NetMsg::RunPathAck::internal_default_instance();
}
inline ::NetMsg::RunPathAck* TeamArrivedTarAck::mutable_path() {
  
  if (path_ == NULL) {
    path_ = new ::NetMsg::RunPathAck;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.TeamArrivedTarAck.path)
  return path_;
}
inline ::NetMsg::RunPathAck* TeamArrivedTarAck::release_path() {
  // @@protoc_insertion_point(field_release:NetMsg.TeamArrivedTarAck.path)
  
  ::NetMsg::RunPathAck* temp = path_;
  path_ = NULL;
  return temp;
}
inline void TeamArrivedTarAck::set_allocated_path(::NetMsg::RunPathAck* path) {
  delete path_;
  path_ = path;
  if (path) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.TeamArrivedTarAck.path)
}

inline const TeamArrivedTarAck* TeamArrivedTarAck::internal_default_instance() {
  return &TeamArrivedTarAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ClusterMemberInfo

// optional uint32 userId = 1;
inline void ClusterMemberInfo::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 ClusterMemberInfo::userid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ClusterMemberInfo.userId)
  return userid_;
}
inline void ClusterMemberInfo::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ClusterMemberInfo.userId)
}

// optional uint32 teamPos = 2;
inline void ClusterMemberInfo::clear_teampos() {
  teampos_ = 0u;
}
inline ::google::protobuf::uint32 ClusterMemberInfo::teampos() const {
  // @@protoc_insertion_point(field_get:NetMsg.ClusterMemberInfo.teamPos)
  return teampos_;
}
inline void ClusterMemberInfo::set_teampos(::google::protobuf::uint32 value) {
  
  teampos_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ClusterMemberInfo.teamPos)
}

inline const ClusterMemberInfo* ClusterMemberInfo::internal_default_instance() {
  return &ClusterMemberInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// ClusterCreater

// optional uint32 createrId = 1;
inline void ClusterCreater::clear_createrid() {
  createrid_ = 0u;
}
inline ::google::protobuf::uint32 ClusterCreater::createrid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ClusterCreater.createrId)
  return createrid_;
}
inline void ClusterCreater::set_createrid(::google::protobuf::uint32 value) {
  
  createrid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ClusterCreater.createrId)
}

// optional string name = 2;
inline void ClusterCreater::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClusterCreater::name() const {
  // @@protoc_insertion_point(field_get:NetMsg.ClusterCreater.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClusterCreater::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetMsg.ClusterCreater.name)
}
inline void ClusterCreater::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetMsg.ClusterCreater.name)
}
inline void ClusterCreater::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetMsg.ClusterCreater.name)
}
inline ::std::string* ClusterCreater::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:NetMsg.ClusterCreater.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClusterCreater::release_name() {
  // @@protoc_insertion_point(field_release:NetMsg.ClusterCreater.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClusterCreater::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:NetMsg.ClusterCreater.name)
}

inline const ClusterCreater* ClusterCreater::internal_default_instance() {
  return &ClusterCreater_default_instance_.get();
}
// -------------------------------------------------------------------

// ClusterInfo

// optional uint64 uid = 1;
inline void ClusterInfo::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ClusterInfo::uid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ClusterInfo.uid)
  return uid_;
}
inline void ClusterInfo::set_uid(::google::protobuf::uint64 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ClusterInfo.uid)
}

// optional .NetMsg.ClusterCreater creater = 2;
inline bool ClusterInfo::has_creater() const {
  return this != internal_default_instance() && creater_ != NULL;
}
inline void ClusterInfo::clear_creater() {
  if (GetArenaNoVirtual() == NULL && creater_ != NULL) delete creater_;
  creater_ = NULL;
}
inline const ::NetMsg::ClusterCreater& ClusterInfo::creater() const {
  // @@protoc_insertion_point(field_get:NetMsg.ClusterInfo.creater)
  return creater_ != NULL ? *creater_
                         : *::NetMsg::ClusterCreater::internal_default_instance();
}
inline ::NetMsg::ClusterCreater* ClusterInfo::mutable_creater() {
  
  if (creater_ == NULL) {
    creater_ = new ::NetMsg::ClusterCreater;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.ClusterInfo.creater)
  return creater_;
}
inline ::NetMsg::ClusterCreater* ClusterInfo::release_creater() {
  // @@protoc_insertion_point(field_release:NetMsg.ClusterInfo.creater)
  
  ::NetMsg::ClusterCreater* temp = creater_;
  creater_ = NULL;
  return temp;
}
inline void ClusterInfo::set_allocated_creater(::NetMsg::ClusterCreater* creater) {
  delete creater_;
  creater_ = creater;
  if (creater) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.ClusterInfo.creater)
}

// repeated .NetMsg.ClusterMemberInfo members = 3;
inline int ClusterInfo::members_size() const {
  return members_.size();
}
inline void ClusterInfo::clear_members() {
  members_.Clear();
}
inline const ::NetMsg::ClusterMemberInfo& ClusterInfo::members(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.ClusterInfo.members)
  return members_.Get(index);
}
inline ::NetMsg::ClusterMemberInfo* ClusterInfo::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.ClusterInfo.members)
  return members_.Mutable(index);
}
inline ::NetMsg::ClusterMemberInfo* ClusterInfo::add_members() {
  // @@protoc_insertion_point(field_add:NetMsg.ClusterInfo.members)
  return members_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::ClusterMemberInfo >*
ClusterInfo::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.ClusterInfo.members)
  return &members_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::ClusterMemberInfo >&
ClusterInfo::members() const {
  // @@protoc_insertion_point(field_list:NetMsg.ClusterInfo.members)
  return members_;
}

inline const ClusterInfo* ClusterInfo::internal_default_instance() {
  return &ClusterInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqClusterDetailInfo

// optional uint64 uid = 1;
inline void ReqClusterDetailInfo::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ReqClusterDetailInfo::uid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqClusterDetailInfo.uid)
  return uid_;
}
inline void ReqClusterDetailInfo::set_uid(::google::protobuf::uint64 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqClusterDetailInfo.uid)
}

inline const ReqClusterDetailInfo* ReqClusterDetailInfo::internal_default_instance() {
  return &ReqClusterDetailInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// TeamMemberDetail

// optional uint32 heroId = 1;
inline void TeamMemberDetail::clear_heroid() {
  heroid_ = 0u;
}
inline ::google::protobuf::uint32 TeamMemberDetail::heroid() const {
  // @@protoc_insertion_point(field_get:NetMsg.TeamMemberDetail.heroId)
  return heroid_;
}
inline void TeamMemberDetail::set_heroid(::google::protobuf::uint32 value) {
  
  heroid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.TeamMemberDetail.heroId)
}

// optional uint32 level = 2;
inline void TeamMemberDetail::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 TeamMemberDetail::level() const {
  // @@protoc_insertion_point(field_get:NetMsg.TeamMemberDetail.level)
  return level_;
}
inline void TeamMemberDetail::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.TeamMemberDetail.level)
}

// optional int32 hp = 3;
inline void TeamMemberDetail::clear_hp() {
  hp_ = 0;
}
inline ::google::protobuf::int32 TeamMemberDetail::hp() const {
  // @@protoc_insertion_point(field_get:NetMsg.TeamMemberDetail.hp)
  return hp_;
}
inline void TeamMemberDetail::set_hp(::google::protobuf::int32 value) {
  
  hp_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.TeamMemberDetail.hp)
}

inline const TeamMemberDetail* TeamMemberDetail::internal_default_instance() {
  return &TeamMemberDetail_default_instance_.get();
}
// -------------------------------------------------------------------

// ClusterMemberDetail

// optional uint32 userId = 1;
inline void ClusterMemberDetail::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 ClusterMemberDetail::userid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ClusterMemberDetail.userId)
  return userid_;
}
inline void ClusterMemberDetail::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ClusterMemberDetail.userId)
}

// optional string userName = 2;
inline void ClusterMemberDetail::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClusterMemberDetail::username() const {
  // @@protoc_insertion_point(field_get:NetMsg.ClusterMemberDetail.userName)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClusterMemberDetail::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetMsg.ClusterMemberDetail.userName)
}
inline void ClusterMemberDetail::set_username(const char* value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetMsg.ClusterMemberDetail.userName)
}
inline void ClusterMemberDetail::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetMsg.ClusterMemberDetail.userName)
}
inline ::std::string* ClusterMemberDetail::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:NetMsg.ClusterMemberDetail.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClusterMemberDetail::release_username() {
  // @@protoc_insertion_point(field_release:NetMsg.ClusterMemberDetail.userName)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClusterMemberDetail::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:NetMsg.ClusterMemberDetail.userName)
}

// repeated .NetMsg.TeamMemberDetail heros = 3;
inline int ClusterMemberDetail::heros_size() const {
  return heros_.size();
}
inline void ClusterMemberDetail::clear_heros() {
  heros_.Clear();
}
inline const ::NetMsg::TeamMemberDetail& ClusterMemberDetail::heros(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.ClusterMemberDetail.heros)
  return heros_.Get(index);
}
inline ::NetMsg::TeamMemberDetail* ClusterMemberDetail::mutable_heros(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.ClusterMemberDetail.heros)
  return heros_.Mutable(index);
}
inline ::NetMsg::TeamMemberDetail* ClusterMemberDetail::add_heros() {
  // @@protoc_insertion_point(field_add:NetMsg.ClusterMemberDetail.heros)
  return heros_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::TeamMemberDetail >*
ClusterMemberDetail::mutable_heros() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.ClusterMemberDetail.heros)
  return &heros_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::TeamMemberDetail >&
ClusterMemberDetail::heros() const {
  // @@protoc_insertion_point(field_list:NetMsg.ClusterMemberDetail.heros)
  return heros_;
}

inline const ClusterMemberDetail* ClusterMemberDetail::internal_default_instance() {
  return &ClusterMemberDetail_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqSetClusterAttr

// optional uint64 uid = 1;
inline void ReqSetClusterAttr::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ReqSetClusterAttr::uid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqSetClusterAttr.uid)
  return uid_;
}
inline void ReqSetClusterAttr::set_uid(::google::protobuf::uint64 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqSetClusterAttr.uid)
}

// optional bool pub = 2;
inline void ReqSetClusterAttr::clear_pub() {
  pub_ = false;
}
inline bool ReqSetClusterAttr::pub() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqSetClusterAttr.pub)
  return pub_;
}
inline void ReqSetClusterAttr::set_pub(bool value) {
  
  pub_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqSetClusterAttr.pub)
}

inline const ReqSetClusterAttr* ReqSetClusterAttr::internal_default_instance() {
  return &ReqSetClusterAttr_default_instance_.get();
}
// -------------------------------------------------------------------

// SetClusterAttrAck

// optional uint64 uid = 1;
inline void SetClusterAttrAck::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SetClusterAttrAck::uid() const {
  // @@protoc_insertion_point(field_get:NetMsg.SetClusterAttrAck.uid)
  return uid_;
}
inline void SetClusterAttrAck::set_uid(::google::protobuf::uint64 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.SetClusterAttrAck.uid)
}

// optional bool pub = 2;
inline void SetClusterAttrAck::clear_pub() {
  pub_ = false;
}
inline bool SetClusterAttrAck::pub() const {
  // @@protoc_insertion_point(field_get:NetMsg.SetClusterAttrAck.pub)
  return pub_;
}
inline void SetClusterAttrAck::set_pub(bool value) {
  
  pub_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.SetClusterAttrAck.pub)
}

// optional uint32 error = 3;
inline void SetClusterAttrAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 SetClusterAttrAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.SetClusterAttrAck.error)
  return error_;
}
inline void SetClusterAttrAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.SetClusterAttrAck.error)
}

inline const SetClusterAttrAck* SetClusterAttrAck::internal_default_instance() {
  return &SetClusterAttrAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ClusterDetailInfoAck

// optional uint64 uid = 1;
inline void ClusterDetailInfoAck::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ClusterDetailInfoAck::uid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ClusterDetailInfoAck.uid)
  return uid_;
}
inline void ClusterDetailInfoAck::set_uid(::google::protobuf::uint64 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ClusterDetailInfoAck.uid)
}

// repeated .NetMsg.ClusterMemberDetail members = 2;
inline int ClusterDetailInfoAck::members_size() const {
  return members_.size();
}
inline void ClusterDetailInfoAck::clear_members() {
  members_.Clear();
}
inline const ::NetMsg::ClusterMemberDetail& ClusterDetailInfoAck::members(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.ClusterDetailInfoAck.members)
  return members_.Get(index);
}
inline ::NetMsg::ClusterMemberDetail* ClusterDetailInfoAck::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.ClusterDetailInfoAck.members)
  return members_.Mutable(index);
}
inline ::NetMsg::ClusterMemberDetail* ClusterDetailInfoAck::add_members() {
  // @@protoc_insertion_point(field_add:NetMsg.ClusterDetailInfoAck.members)
  return members_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::ClusterMemberDetail >*
ClusterDetailInfoAck::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.ClusterDetailInfoAck.members)
  return &members_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::ClusterMemberDetail >&
ClusterDetailInfoAck::members() const {
  // @@protoc_insertion_point(field_list:NetMsg.ClusterDetailInfoAck.members)
  return members_;
}

// optional bool pub = 3;
inline void ClusterDetailInfoAck::clear_pub() {
  pub_ = false;
}
inline bool ClusterDetailInfoAck::pub() const {
  // @@protoc_insertion_point(field_get:NetMsg.ClusterDetailInfoAck.pub)
  return pub_;
}
inline void ClusterDetailInfoAck::set_pub(bool value) {
  
  pub_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ClusterDetailInfoAck.pub)
}

// optional uint32 error = 4;
inline void ClusterDetailInfoAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 ClusterDetailInfoAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.ClusterDetailInfoAck.error)
  return error_;
}
inline void ClusterDetailInfoAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ClusterDetailInfoAck.error)
}

inline const ClusterDetailInfoAck* ClusterDetailInfoAck::internal_default_instance() {
  return &ClusterDetailInfoAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ClusterInfoAck

// repeated .NetMsg.ClusterInfo infos = 1;
inline int ClusterInfoAck::infos_size() const {
  return infos_.size();
}
inline void ClusterInfoAck::clear_infos() {
  infos_.Clear();
}
inline const ::NetMsg::ClusterInfo& ClusterInfoAck::infos(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.ClusterInfoAck.infos)
  return infos_.Get(index);
}
inline ::NetMsg::ClusterInfo* ClusterInfoAck::mutable_infos(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.ClusterInfoAck.infos)
  return infos_.Mutable(index);
}
inline ::NetMsg::ClusterInfo* ClusterInfoAck::add_infos() {
  // @@protoc_insertion_point(field_add:NetMsg.ClusterInfoAck.infos)
  return infos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::ClusterInfo >*
ClusterInfoAck::mutable_infos() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.ClusterInfoAck.infos)
  return &infos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::ClusterInfo >&
ClusterInfoAck::infos() const {
  // @@protoc_insertion_point(field_list:NetMsg.ClusterInfoAck.infos)
  return infos_;
}

inline const ClusterInfoAck* ClusterInfoAck::internal_default_instance() {
  return &ClusterInfoAck_default_instance_.get();
}
// -------------------------------------------------------------------

// AllClusterAck

// repeated .NetMsg.ClusterInfo infos = 1;
inline int AllClusterAck::infos_size() const {
  return infos_.size();
}
inline void AllClusterAck::clear_infos() {
  infos_.Clear();
}
inline const ::NetMsg::ClusterInfo& AllClusterAck::infos(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.AllClusterAck.infos)
  return infos_.Get(index);
}
inline ::NetMsg::ClusterInfo* AllClusterAck::mutable_infos(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.AllClusterAck.infos)
  return infos_.Mutable(index);
}
inline ::NetMsg::ClusterInfo* AllClusterAck::add_infos() {
  // @@protoc_insertion_point(field_add:NetMsg.AllClusterAck.infos)
  return infos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::ClusterInfo >*
AllClusterAck::mutable_infos() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.AllClusterAck.infos)
  return &infos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::ClusterInfo >&
AllClusterAck::infos() const {
  // @@protoc_insertion_point(field_list:NetMsg.AllClusterAck.infos)
  return infos_;
}

inline const AllClusterAck* AllClusterAck::internal_default_instance() {
  return &AllClusterAck_default_instance_.get();
}
// -------------------------------------------------------------------

// CreateClusterAck

// optional uint64 uid = 1;
inline void CreateClusterAck::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CreateClusterAck::uid() const {
  // @@protoc_insertion_point(field_get:NetMsg.CreateClusterAck.uid)
  return uid_;
}
inline void CreateClusterAck::set_uid(::google::protobuf::uint64 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CreateClusterAck.uid)
}

// optional uint32 error = 2;
inline void CreateClusterAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 CreateClusterAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.CreateClusterAck.error)
  return error_;
}
inline void CreateClusterAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CreateClusterAck.error)
}

inline const CreateClusterAck* CreateClusterAck::internal_default_instance() {
  return &CreateClusterAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqJoinCluster

// optional uint64 uid = 1;
inline void ReqJoinCluster::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ReqJoinCluster::uid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqJoinCluster.uid)
  return uid_;
}
inline void ReqJoinCluster::set_uid(::google::protobuf::uint64 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqJoinCluster.uid)
}

// optional uint32 teamPos = 2;
inline void ReqJoinCluster::clear_teampos() {
  teampos_ = 0u;
}
inline ::google::protobuf::uint32 ReqJoinCluster::teampos() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqJoinCluster.teamPos)
  return teampos_;
}
inline void ReqJoinCluster::set_teampos(::google::protobuf::uint32 value) {
  
  teampos_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqJoinCluster.teamPos)
}

inline const ReqJoinCluster* ReqJoinCluster::internal_default_instance() {
  return &ReqJoinCluster_default_instance_.get();
}
// -------------------------------------------------------------------

// JoinClusterAck

// optional uint64 uid = 1;
inline void JoinClusterAck::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 JoinClusterAck::uid() const {
  // @@protoc_insertion_point(field_get:NetMsg.JoinClusterAck.uid)
  return uid_;
}
inline void JoinClusterAck::set_uid(::google::protobuf::uint64 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.JoinClusterAck.uid)
}

// optional uint32 teamPos = 2;
inline void JoinClusterAck::clear_teampos() {
  teampos_ = 0u;
}
inline ::google::protobuf::uint32 JoinClusterAck::teampos() const {
  // @@protoc_insertion_point(field_get:NetMsg.JoinClusterAck.teamPos)
  return teampos_;
}
inline void JoinClusterAck::set_teampos(::google::protobuf::uint32 value) {
  
  teampos_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.JoinClusterAck.teamPos)
}

// optional uint32 error = 3;
inline void JoinClusterAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 JoinClusterAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.JoinClusterAck.error)
  return error_;
}
inline void JoinClusterAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.JoinClusterAck.error)
}

inline const JoinClusterAck* JoinClusterAck::internal_default_instance() {
  return &JoinClusterAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqExitCluster

// optional uint64 uid = 1;
inline void ReqExitCluster::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ReqExitCluster::uid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqExitCluster.uid)
  return uid_;
}
inline void ReqExitCluster::set_uid(::google::protobuf::uint64 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqExitCluster.uid)
}

// optional uint32 teamPos = 2;
inline void ReqExitCluster::clear_teampos() {
  teampos_ = 0u;
}
inline ::google::protobuf::uint32 ReqExitCluster::teampos() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqExitCluster.teamPos)
  return teampos_;
}
inline void ReqExitCluster::set_teampos(::google::protobuf::uint32 value) {
  
  teampos_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqExitCluster.teamPos)
}

inline const ReqExitCluster* ReqExitCluster::internal_default_instance() {
  return &ReqExitCluster_default_instance_.get();
}
// -------------------------------------------------------------------

// ExitClusterAck

// optional uint64 uid = 1;
inline void ExitClusterAck::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ExitClusterAck::uid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ExitClusterAck.uid)
  return uid_;
}
inline void ExitClusterAck::set_uid(::google::protobuf::uint64 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ExitClusterAck.uid)
}

// optional uint32 teamPos = 2;
inline void ExitClusterAck::clear_teampos() {
  teampos_ = 0u;
}
inline ::google::protobuf::uint32 ExitClusterAck::teampos() const {
  // @@protoc_insertion_point(field_get:NetMsg.ExitClusterAck.teamPos)
  return teampos_;
}
inline void ExitClusterAck::set_teampos(::google::protobuf::uint32 value) {
  
  teampos_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ExitClusterAck.teamPos)
}

// optional uint32 error = 3;
inline void ExitClusterAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 ExitClusterAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.ExitClusterAck.error)
  return error_;
}
inline void ExitClusterAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ExitClusterAck.error)
}

inline const ExitClusterAck* ExitClusterAck::internal_default_instance() {
  return &ExitClusterAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqCityItem

// optional uint32 cityId = 1;
inline void ReqCityItem::clear_cityid() {
  cityid_ = 0u;
}
inline ::google::protobuf::uint32 ReqCityItem::cityid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqCityItem.cityId)
  return cityid_;
}
inline void ReqCityItem::set_cityid(::google::protobuf::uint32 value) {
  
  cityid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqCityItem.cityId)
}

inline const ReqCityItem* ReqCityItem::internal_default_instance() {
  return &ReqCityItem_default_instance_.get();
}
// -------------------------------------------------------------------

// CityItemAck

// repeated .NetMsg.CityItemInfo cityItem = 1;
inline int CityItemAck::cityitem_size() const {
  return cityitem_.size();
}
inline void CityItemAck::clear_cityitem() {
  cityitem_.Clear();
}
inline const ::NetMsg::CityItemInfo& CityItemAck::cityitem(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.CityItemAck.cityItem)
  return cityitem_.Get(index);
}
inline ::NetMsg::CityItemInfo* CityItemAck::mutable_cityitem(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.CityItemAck.cityItem)
  return cityitem_.Mutable(index);
}
inline ::NetMsg::CityItemInfo* CityItemAck::add_cityitem() {
  // @@protoc_insertion_point(field_add:NetMsg.CityItemAck.cityItem)
  return cityitem_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::CityItemInfo >*
CityItemAck::mutable_cityitem() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.CityItemAck.cityItem)
  return &cityitem_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::CityItemInfo >&
CityItemAck::cityitem() const {
  // @@protoc_insertion_point(field_list:NetMsg.CityItemAck.cityItem)
  return cityitem_;
}

// optional uint32 error = 2;
inline void CityItemAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 CityItemAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.CityItemAck.error)
  return error_;
}
inline void CityItemAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CityItemAck.error)
}

inline const CityItemAck* CityItemAck::internal_default_instance() {
  return &CityItemAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqCityHero

// optional uint32 cityId = 1;
inline void ReqCityHero::clear_cityid() {
  cityid_ = 0u;
}
inline ::google::protobuf::uint32 ReqCityHero::cityid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqCityHero.cityId)
  return cityid_;
}
inline void ReqCityHero::set_cityid(::google::protobuf::uint32 value) {
  
  cityid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqCityHero.cityId)
}

inline const ReqCityHero* ReqCityHero::internal_default_instance() {
  return &ReqCityHero_default_instance_.get();
}
// -------------------------------------------------------------------

// CityHeroAck

// repeated .NetMsg.CityHeroInfo cityHero = 1;
inline int CityHeroAck::cityhero_size() const {
  return cityhero_.size();
}
inline void CityHeroAck::clear_cityhero() {
  cityhero_.Clear();
}
inline const ::NetMsg::CityHeroInfo& CityHeroAck::cityhero(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.CityHeroAck.cityHero)
  return cityhero_.Get(index);
}
inline ::NetMsg::CityHeroInfo* CityHeroAck::mutable_cityhero(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.CityHeroAck.cityHero)
  return cityhero_.Mutable(index);
}
inline ::NetMsg::CityHeroInfo* CityHeroAck::add_cityhero() {
  // @@protoc_insertion_point(field_add:NetMsg.CityHeroAck.cityHero)
  return cityhero_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::CityHeroInfo >*
CityHeroAck::mutable_cityhero() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.CityHeroAck.cityHero)
  return &cityhero_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::CityHeroInfo >&
CityHeroAck::cityhero() const {
  // @@protoc_insertion_point(field_list:NetMsg.CityHeroAck.cityHero)
  return cityhero_;
}

// optional uint32 error = 2;
inline void CityHeroAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 CityHeroAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.CityHeroAck.error)
  return error_;
}
inline void CityHeroAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.CityHeroAck.error)
}

inline const CityHeroAck* CityHeroAck::internal_default_instance() {
  return &CityHeroAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ResourceInfo

// optional uint32 uid = 1;
inline void ResourceInfo::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 ResourceInfo::uid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ResourceInfo.uid)
  return uid_;
}
inline void ResourceInfo::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ResourceInfo.uid)
}

// optional uint32 star = 2;
inline void ResourceInfo::clear_star() {
  star_ = 0u;
}
inline ::google::protobuf::uint32 ResourceInfo::star() const {
  // @@protoc_insertion_point(field_get:NetMsg.ResourceInfo.star)
  return star_;
}
inline void ResourceInfo::set_star(::google::protobuf::uint32 value) {
  
  star_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ResourceInfo.star)
}

// optional .NetMsg.ResourceType type = 3;
inline void ResourceInfo::clear_type() {
  type_ = 0;
}
inline ::NetMsg::ResourceType ResourceInfo::type() const {
  // @@protoc_insertion_point(field_get:NetMsg.ResourceInfo.type)
  return static_cast< ::NetMsg::ResourceType >(type_);
}
inline void ResourceInfo::set_type(::NetMsg::ResourceType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ResourceInfo.type)
}

// optional uint32 resourceNum = 4;
inline void ResourceInfo::clear_resourcenum() {
  resourcenum_ = 0u;
}
inline ::google::protobuf::uint32 ResourceInfo::resourcenum() const {
  // @@protoc_insertion_point(field_get:NetMsg.ResourceInfo.resourceNum)
  return resourcenum_;
}
inline void ResourceInfo::set_resourcenum(::google::protobuf::uint32 value) {
  
  resourcenum_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ResourceInfo.resourceNum)
}

// optional uint32 leftTime = 5;
inline void ResourceInfo::clear_lefttime() {
  lefttime_ = 0u;
}
inline ::google::protobuf::uint32 ResourceInfo::lefttime() const {
  // @@protoc_insertion_point(field_get:NetMsg.ResourceInfo.leftTime)
  return lefttime_;
}
inline void ResourceInfo::set_lefttime(::google::protobuf::uint32 value) {
  
  lefttime_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ResourceInfo.leftTime)
}

// optional uint32 posId = 6;
inline void ResourceInfo::clear_posid() {
  posid_ = 0u;
}
inline ::google::protobuf::uint32 ResourceInfo::posid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ResourceInfo.posId)
  return posid_;
}
inline void ResourceInfo::set_posid(::google::protobuf::uint32 value) {
  
  posid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ResourceInfo.posId)
}

inline const ResourceInfo* ResourceInfo::internal_default_instance() {
  return &ResourceInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// ResourceInfoAck

// repeated .NetMsg.ResourceInfo info = 1;
inline int ResourceInfoAck::info_size() const {
  return info_.size();
}
inline void ResourceInfoAck::clear_info() {
  info_.Clear();
}
inline const ::NetMsg::ResourceInfo& ResourceInfoAck::info(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.ResourceInfoAck.info)
  return info_.Get(index);
}
inline ::NetMsg::ResourceInfo* ResourceInfoAck::mutable_info(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.ResourceInfoAck.info)
  return info_.Mutable(index);
}
inline ::NetMsg::ResourceInfo* ResourceInfoAck::add_info() {
  // @@protoc_insertion_point(field_add:NetMsg.ResourceInfoAck.info)
  return info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::ResourceInfo >*
ResourceInfoAck::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.ResourceInfoAck.info)
  return &info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::ResourceInfo >&
ResourceInfoAck::info() const {
  // @@protoc_insertion_point(field_list:NetMsg.ResourceInfoAck.info)
  return info_;
}

inline const ResourceInfoAck* ResourceInfoAck::internal_default_instance() {
  return &ResourceInfoAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqResourceDetailInfo

// optional uint32 uid = 1;
inline void ReqResourceDetailInfo::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 ReqResourceDetailInfo::uid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqResourceDetailInfo.uid)
  return uid_;
}
inline void ReqResourceDetailInfo::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqResourceDetailInfo.uid)
}

inline const ReqResourceDetailInfo* ReqResourceDetailInfo::internal_default_instance() {
  return &ReqResourceDetailInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// ResourceDetailInfo

// optional uint32 teamPos = 1;
inline void ResourceDetailInfo::clear_teampos() {
  teampos_ = 0u;
}
inline ::google::protobuf::uint32 ResourceDetailInfo::teampos() const {
  // @@protoc_insertion_point(field_get:NetMsg.ResourceDetailInfo.teamPos)
  return teampos_;
}
inline void ResourceDetailInfo::set_teampos(::google::protobuf::uint32 value) {
  
  teampos_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ResourceDetailInfo.teamPos)
}

// optional uint32 resourceNum = 2;
inline void ResourceDetailInfo::clear_resourcenum() {
  resourcenum_ = 0u;
}
inline ::google::protobuf::uint32 ResourceDetailInfo::resourcenum() const {
  // @@protoc_insertion_point(field_get:NetMsg.ResourceDetailInfo.resourceNum)
  return resourcenum_;
}
inline void ResourceDetailInfo::set_resourcenum(::google::protobuf::uint32 value) {
  
  resourcenum_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ResourceDetailInfo.resourceNum)
}

inline const ResourceDetailInfo* ResourceDetailInfo::internal_default_instance() {
  return &ResourceDetailInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// ResourceDetailInfoAck

// optional uint32 uid = 1;
inline void ResourceDetailInfoAck::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 ResourceDetailInfoAck::uid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ResourceDetailInfoAck.uid)
  return uid_;
}
inline void ResourceDetailInfoAck::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ResourceDetailInfoAck.uid)
}

// optional uint32 resourceNum = 2;
inline void ResourceDetailInfoAck::clear_resourcenum() {
  resourcenum_ = 0u;
}
inline ::google::protobuf::uint32 ResourceDetailInfoAck::resourcenum() const {
  // @@protoc_insertion_point(field_get:NetMsg.ResourceDetailInfoAck.resourceNum)
  return resourcenum_;
}
inline void ResourceDetailInfoAck::set_resourcenum(::google::protobuf::uint32 value) {
  
  resourcenum_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ResourceDetailInfoAck.resourceNum)
}

// repeated .NetMsg.ResourceDetailInfo detailInfo = 3;
inline int ResourceDetailInfoAck::detailinfo_size() const {
  return detailinfo_.size();
}
inline void ResourceDetailInfoAck::clear_detailinfo() {
  detailinfo_.Clear();
}
inline const ::NetMsg::ResourceDetailInfo& ResourceDetailInfoAck::detailinfo(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.ResourceDetailInfoAck.detailInfo)
  return detailinfo_.Get(index);
}
inline ::NetMsg::ResourceDetailInfo* ResourceDetailInfoAck::mutable_detailinfo(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.ResourceDetailInfoAck.detailInfo)
  return detailinfo_.Mutable(index);
}
inline ::NetMsg::ResourceDetailInfo* ResourceDetailInfoAck::add_detailinfo() {
  // @@protoc_insertion_point(field_add:NetMsg.ResourceDetailInfoAck.detailInfo)
  return detailinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::ResourceDetailInfo >*
ResourceDetailInfoAck::mutable_detailinfo() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.ResourceDetailInfoAck.detailInfo)
  return &detailinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::ResourceDetailInfo >&
ResourceDetailInfoAck::detailinfo() const {
  // @@protoc_insertion_point(field_list:NetMsg.ResourceDetailInfoAck.detailInfo)
  return detailinfo_;
}

// optional uint32 error = 4;
inline void ResourceDetailInfoAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 ResourceDetailInfoAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.ResourceDetailInfoAck.error)
  return error_;
}
inline void ResourceDetailInfoAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ResourceDetailInfoAck.error)
}

inline const ResourceDetailInfoAck* ResourceDetailInfoAck::internal_default_instance() {
  return &ResourceDetailInfoAck_default_instance_.get();
}
// -------------------------------------------------------------------

// RegInviteJoinCluster

// optional uint32 userId = 1;
inline void RegInviteJoinCluster::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 RegInviteJoinCluster::userid() const {
  // @@protoc_insertion_point(field_get:NetMsg.RegInviteJoinCluster.userId)
  return userid_;
}
inline void RegInviteJoinCluster::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.RegInviteJoinCluster.userId)
}

inline const RegInviteJoinCluster* RegInviteJoinCluster::internal_default_instance() {
  return &RegInviteJoinCluster_default_instance_.get();
}
// -------------------------------------------------------------------

// InviteJoinClusterAck

// optional uint32 userId = 1;
inline void InviteJoinClusterAck::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 InviteJoinClusterAck::userid() const {
  // @@protoc_insertion_point(field_get:NetMsg.InviteJoinClusterAck.userId)
  return userid_;
}
inline void InviteJoinClusterAck::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.InviteJoinClusterAck.userId)
}

// optional uint32 error = 2;
inline void InviteJoinClusterAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 InviteJoinClusterAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.InviteJoinClusterAck.error)
  return error_;
}
inline void InviteJoinClusterAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.InviteJoinClusterAck.error)
}

inline const InviteJoinClusterAck* InviteJoinClusterAck::internal_default_instance() {
  return &InviteJoinClusterAck_default_instance_.get();
}
// -------------------------------------------------------------------

// UserInviteJoinCluster

// optional uint32 userId = 1;
inline void UserInviteJoinCluster::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 UserInviteJoinCluster::userid() const {
  // @@protoc_insertion_point(field_get:NetMsg.UserInviteJoinCluster.userId)
  return userid_;
}
inline void UserInviteJoinCluster::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.UserInviteJoinCluster.userId)
}

// optional uint64 clusterId = 2;
inline void UserInviteJoinCluster::clear_clusterid() {
  clusterid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UserInviteJoinCluster::clusterid() const {
  // @@protoc_insertion_point(field_get:NetMsg.UserInviteJoinCluster.clusterId)
  return clusterid_;
}
inline void UserInviteJoinCluster::set_clusterid(::google::protobuf::uint64 value) {
  
  clusterid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.UserInviteJoinCluster.clusterId)
}

// optional string userName = 3;
inline void UserInviteJoinCluster::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserInviteJoinCluster::username() const {
  // @@protoc_insertion_point(field_get:NetMsg.UserInviteJoinCluster.userName)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInviteJoinCluster::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetMsg.UserInviteJoinCluster.userName)
}
inline void UserInviteJoinCluster::set_username(const char* value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetMsg.UserInviteJoinCluster.userName)
}
inline void UserInviteJoinCluster::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetMsg.UserInviteJoinCluster.userName)
}
inline ::std::string* UserInviteJoinCluster::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:NetMsg.UserInviteJoinCluster.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserInviteJoinCluster::release_username() {
  // @@protoc_insertion_point(field_release:NetMsg.UserInviteJoinCluster.userName)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInviteJoinCluster::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:NetMsg.UserInviteJoinCluster.userName)
}

inline const UserInviteJoinCluster* UserInviteJoinCluster::internal_default_instance() {
  return &UserInviteJoinCluster_default_instance_.get();
}
// -------------------------------------------------------------------

// ClusterRunPathAck

// optional .NetMsg.RunPathAck path = 1;
inline bool ClusterRunPathAck::has_path() const {
  return this != internal_default_instance() && path_ != NULL;
}
inline void ClusterRunPathAck::clear_path() {
  if (GetArenaNoVirtual() == NULL && path_ != NULL) delete path_;
  path_ = NULL;
}
inline const ::NetMsg::RunPathAck& ClusterRunPathAck::path() const {
  // @@protoc_insertion_point(field_get:NetMsg.ClusterRunPathAck.path)
  return path_ != NULL ? *path_
                         : *::NetMsg::RunPathAck::internal_default_instance();
}
inline ::NetMsg::RunPathAck* ClusterRunPathAck::mutable_path() {
  
  if (path_ == NULL) {
    path_ = new ::NetMsg::RunPathAck;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.ClusterRunPathAck.path)
  return path_;
}
inline ::NetMsg::RunPathAck* ClusterRunPathAck::release_path() {
  // @@protoc_insertion_point(field_release:NetMsg.ClusterRunPathAck.path)
  
  ::NetMsg::RunPathAck* temp = path_;
  path_ = NULL;
  return temp;
}
inline void ClusterRunPathAck::set_allocated_path(::NetMsg::RunPathAck* path) {
  delete path_;
  path_ = path;
  if (path) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.ClusterRunPathAck.path)
}

// optional int32 curCity = 2;
inline void ClusterRunPathAck::clear_curcity() {
  curcity_ = 0;
}
inline ::google::protobuf::int32 ClusterRunPathAck::curcity() const {
  // @@protoc_insertion_point(field_get:NetMsg.ClusterRunPathAck.curCity)
  return curcity_;
}
inline void ClusterRunPathAck::set_curcity(::google::protobuf::int32 value) {
  
  curcity_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ClusterRunPathAck.curCity)
}

inline const ClusterRunPathAck* ClusterRunPathAck::internal_default_instance() {
  return &ClusterRunPathAck_default_instance_.get();
}
// -------------------------------------------------------------------

// SetClusterRunPath

// optional .NetMsg.RunPathAck path = 1;
inline bool SetClusterRunPath::has_path() const {
  return this != internal_default_instance() && path_ != NULL;
}
inline void SetClusterRunPath::clear_path() {
  if (GetArenaNoVirtual() == NULL && path_ != NULL) delete path_;
  path_ = NULL;
}
inline const ::NetMsg::RunPathAck& SetClusterRunPath::path() const {
  // @@protoc_insertion_point(field_get:NetMsg.SetClusterRunPath.path)
  return path_ != NULL ? *path_
                         : *::NetMsg::RunPathAck::internal_default_instance();
}
inline ::NetMsg::RunPathAck* SetClusterRunPath::mutable_path() {
  
  if (path_ == NULL) {
    path_ = new ::NetMsg::RunPathAck;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.SetClusterRunPath.path)
  return path_;
}
inline ::NetMsg::RunPathAck* SetClusterRunPath::release_path() {
  // @@protoc_insertion_point(field_release:NetMsg.SetClusterRunPath.path)
  
  ::NetMsg::RunPathAck* temp = path_;
  path_ = NULL;
  return temp;
}
inline void SetClusterRunPath::set_allocated_path(::NetMsg::RunPathAck* path) {
  delete path_;
  path_ = path;
  if (path) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.SetClusterRunPath.path)
}

inline const SetClusterRunPath* SetClusterRunPath::internal_default_instance() {
  return &SetClusterRunPath_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqClusterArrivedTar

// optional .NetMsg.RunPathAck path = 1;
inline bool ReqClusterArrivedTar::has_path() const {
  return this != internal_default_instance() && path_ != NULL;
}
inline void ReqClusterArrivedTar::clear_path() {
  if (GetArenaNoVirtual() == NULL && path_ != NULL) delete path_;
  path_ = NULL;
}
inline const ::NetMsg::RunPathAck& ReqClusterArrivedTar::path() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqClusterArrivedTar.path)
  return path_ != NULL ? *path_
                         : *::NetMsg::RunPathAck::internal_default_instance();
}
inline ::NetMsg::RunPathAck* ReqClusterArrivedTar::mutable_path() {
  
  if (path_ == NULL) {
    path_ = new ::NetMsg::RunPathAck;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.ReqClusterArrivedTar.path)
  return path_;
}
inline ::NetMsg::RunPathAck* ReqClusterArrivedTar::release_path() {
  // @@protoc_insertion_point(field_release:NetMsg.ReqClusterArrivedTar.path)
  
  ::NetMsg::RunPathAck* temp = path_;
  path_ = NULL;
  return temp;
}
inline void ReqClusterArrivedTar::set_allocated_path(::NetMsg::RunPathAck* path) {
  delete path_;
  path_ = path;
  if (path) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.ReqClusterArrivedTar.path)
}

inline const ReqClusterArrivedTar* ReqClusterArrivedTar::internal_default_instance() {
  return &ReqClusterArrivedTar_default_instance_.get();
}
// -------------------------------------------------------------------

// ClusterArrivedTarAck

// optional .NetMsg.RunPathAck path = 1;
inline bool ClusterArrivedTarAck::has_path() const {
  return this != internal_default_instance() && path_ != NULL;
}
inline void ClusterArrivedTarAck::clear_path() {
  if (GetArenaNoVirtual() == NULL && path_ != NULL) delete path_;
  path_ = NULL;
}
inline const ::NetMsg::RunPathAck& ClusterArrivedTarAck::path() const {
  // @@protoc_insertion_point(field_get:NetMsg.ClusterArrivedTarAck.path)
  return path_ != NULL ? *path_
                         : *::NetMsg::RunPathAck::internal_default_instance();
}
inline ::NetMsg::RunPathAck* ClusterArrivedTarAck::mutable_path() {
  
  if (path_ == NULL) {
    path_ = new ::NetMsg::RunPathAck;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.ClusterArrivedTarAck.path)
  return path_;
}
inline ::NetMsg::RunPathAck* ClusterArrivedTarAck::release_path() {
  // @@protoc_insertion_point(field_release:NetMsg.ClusterArrivedTarAck.path)
  
  ::NetMsg::RunPathAck* temp = path_;
  path_ = NULL;
  return temp;
}
inline void ClusterArrivedTarAck::set_allocated_path(::NetMsg::RunPathAck* path) {
  delete path_;
  path_ = path;
  if (path) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.ClusterArrivedTarAck.path)
}

inline const ClusterArrivedTarAck* ClusterArrivedTarAck::internal_default_instance() {
  return &ClusterArrivedTarAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqEnterWorldWar

// optional uint32 worldWarId = 1;
inline void ReqEnterWorldWar::clear_worldwarid() {
  worldwarid_ = 0u;
}
inline ::google::protobuf::uint32 ReqEnterWorldWar::worldwarid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqEnterWorldWar.worldWarId)
  return worldwarid_;
}
inline void ReqEnterWorldWar::set_worldwarid(::google::protobuf::uint32 value) {
  
  worldwarid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqEnterWorldWar.worldWarId)
}

inline const ReqEnterWorldWar* ReqEnterWorldWar::internal_default_instance() {
  return &ReqEnterWorldWar_default_instance_.get();
}
// -------------------------------------------------------------------

// EnterWorldWarAck

// optional uint32 worldWarId = 1;
inline void EnterWorldWarAck::clear_worldwarid() {
  worldwarid_ = 0u;
}
inline ::google::protobuf::uint32 EnterWorldWarAck::worldwarid() const {
  // @@protoc_insertion_point(field_get:NetMsg.EnterWorldWarAck.worldWarId)
  return worldwarid_;
}
inline void EnterWorldWarAck::set_worldwarid(::google::protobuf::uint32 value) {
  
  worldwarid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.EnterWorldWarAck.worldWarId)
}

// optional uint32 sceneId = 2;
inline void EnterWorldWarAck::clear_sceneid() {
  sceneid_ = 0u;
}
inline ::google::protobuf::uint32 EnterWorldWarAck::sceneid() const {
  // @@protoc_insertion_point(field_get:NetMsg.EnterWorldWarAck.sceneId)
  return sceneid_;
}
inline void EnterWorldWarAck::set_sceneid(::google::protobuf::uint32 value) {
  
  sceneid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.EnterWorldWarAck.sceneId)
}

// optional .NetMsg.WorldWarSceneForceType force = 3;
inline void EnterWorldWarAck::clear_force() {
  force_ = 0;
}
inline ::NetMsg::WorldWarSceneForceType EnterWorldWarAck::force() const {
  // @@protoc_insertion_point(field_get:NetMsg.EnterWorldWarAck.force)
  return static_cast< ::NetMsg::WorldWarSceneForceType >(force_);
}
inline void EnterWorldWarAck::set_force(::NetMsg::WorldWarSceneForceType value) {
  
  force_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.EnterWorldWarAck.force)
}

// optional uint32 error = 4;
inline void EnterWorldWarAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 EnterWorldWarAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.EnterWorldWarAck.error)
  return error_;
}
inline void EnterWorldWarAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.EnterWorldWarAck.error)
}

inline const EnterWorldWarAck* EnterWorldWarAck::internal_default_instance() {
  return &EnterWorldWarAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqWorldWarStatus

// optional uint32 worldWarId = 1;
inline void ReqWorldWarStatus::clear_worldwarid() {
  worldwarid_ = 0u;
}
inline ::google::protobuf::uint32 ReqWorldWarStatus::worldwarid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqWorldWarStatus.worldWarId)
  return worldwarid_;
}
inline void ReqWorldWarStatus::set_worldwarid(::google::protobuf::uint32 value) {
  
  worldwarid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqWorldWarStatus.worldWarId)
}

inline const ReqWorldWarStatus* ReqWorldWarStatus::internal_default_instance() {
  return &ReqWorldWarStatus_default_instance_.get();
}
// -------------------------------------------------------------------

// WorldWarSceneBlockState

// optional uint32 blockId = 1;
inline void WorldWarSceneBlockState::clear_blockid() {
  blockid_ = 0u;
}
inline ::google::protobuf::uint32 WorldWarSceneBlockState::blockid() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarSceneBlockState.blockId)
  return blockid_;
}
inline void WorldWarSceneBlockState::set_blockid(::google::protobuf::uint32 value) {
  
  blockid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarSceneBlockState.blockId)
}

// optional .NetMsg.WorldWarSceneForceType occupied = 2;
inline void WorldWarSceneBlockState::clear_occupied() {
  occupied_ = 0;
}
inline ::NetMsg::WorldWarSceneForceType WorldWarSceneBlockState::occupied() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarSceneBlockState.occupied)
  return static_cast< ::NetMsg::WorldWarSceneForceType >(occupied_);
}
inline void WorldWarSceneBlockState::set_occupied(::NetMsg::WorldWarSceneForceType value) {
  
  occupied_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarSceneBlockState.occupied)
}

// optional uint32 number = 3;
inline void WorldWarSceneBlockState::clear_number() {
  number_ = 0u;
}
inline ::google::protobuf::uint32 WorldWarSceneBlockState::number() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarSceneBlockState.number)
  return number_;
}
inline void WorldWarSceneBlockState::set_number(::google::protobuf::uint32 value) {
  
  number_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarSceneBlockState.number)
}

inline const WorldWarSceneBlockState* WorldWarSceneBlockState::internal_default_instance() {
  return &WorldWarSceneBlockState_default_instance_.get();
}
// -------------------------------------------------------------------

// WorldWarSceneBuildingState

// optional uint32 blockId = 1;
inline void WorldWarSceneBuildingState::clear_blockid() {
  blockid_ = 0u;
}
inline ::google::protobuf::uint32 WorldWarSceneBuildingState::blockid() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarSceneBuildingState.blockId)
  return blockid_;
}
inline void WorldWarSceneBuildingState::set_blockid(::google::protobuf::uint32 value) {
  
  blockid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarSceneBuildingState.blockId)
}

// optional .NetMsg.WorldWarSceneBuildingType type = 2;
inline void WorldWarSceneBuildingState::clear_type() {
  type_ = 0;
}
inline ::NetMsg::WorldWarSceneBuildingType WorldWarSceneBuildingState::type() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarSceneBuildingState.type)
  return static_cast< ::NetMsg::WorldWarSceneBuildingType >(type_);
}
inline void WorldWarSceneBuildingState::set_type(::NetMsg::WorldWarSceneBuildingType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarSceneBuildingState.type)
}

// optional .NetMsg.WorldWarSceneForceType occupied = 3;
inline void WorldWarSceneBuildingState::clear_occupied() {
  occupied_ = 0;
}
inline ::NetMsg::WorldWarSceneForceType WorldWarSceneBuildingState::occupied() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarSceneBuildingState.occupied)
  return static_cast< ::NetMsg::WorldWarSceneForceType >(occupied_);
}
inline void WorldWarSceneBuildingState::set_occupied(::NetMsg::WorldWarSceneForceType value) {
  
  occupied_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarSceneBuildingState.occupied)
}

// optional uint32 currentHealth = 4;
inline void WorldWarSceneBuildingState::clear_currenthealth() {
  currenthealth_ = 0u;
}
inline ::google::protobuf::uint32 WorldWarSceneBuildingState::currenthealth() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarSceneBuildingState.currentHealth)
  return currenthealth_;
}
inline void WorldWarSceneBuildingState::set_currenthealth(::google::protobuf::uint32 value) {
  
  currenthealth_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarSceneBuildingState.currentHealth)
}

// optional uint32 totalHealth = 5;
inline void WorldWarSceneBuildingState::clear_totalhealth() {
  totalhealth_ = 0u;
}
inline ::google::protobuf::uint32 WorldWarSceneBuildingState::totalhealth() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarSceneBuildingState.totalHealth)
  return totalhealth_;
}
inline void WorldWarSceneBuildingState::set_totalhealth(::google::protobuf::uint32 value) {
  
  totalhealth_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarSceneBuildingState.totalHealth)
}

inline const WorldWarSceneBuildingState* WorldWarSceneBuildingState::internal_default_instance() {
  return &WorldWarSceneBuildingState_default_instance_.get();
}
// -------------------------------------------------------------------

// WorldWarSceneAgent

// optional uint32 agentId = 1;
inline void WorldWarSceneAgent::clear_agentid() {
  agentid_ = 0u;
}
inline ::google::protobuf::uint32 WorldWarSceneAgent::agentid() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarSceneAgent.agentId)
  return agentid_;
}
inline void WorldWarSceneAgent::set_agentid(::google::protobuf::uint32 value) {
  
  agentid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarSceneAgent.agentId)
}

// optional uint32 userId = 2;
inline void WorldWarSceneAgent::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 WorldWarSceneAgent::userid() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarSceneAgent.userId)
  return userid_;
}
inline void WorldWarSceneAgent::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarSceneAgent.userId)
}

// optional bool isCluster = 3;
inline void WorldWarSceneAgent::clear_iscluster() {
  iscluster_ = false;
}
inline bool WorldWarSceneAgent::iscluster() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarSceneAgent.isCluster)
  return iscluster_;
}
inline void WorldWarSceneAgent::set_iscluster(bool value) {
  
  iscluster_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarSceneAgent.isCluster)
}

// optional uint64 clusterIdOrTeamPos = 4;
inline void WorldWarSceneAgent::clear_clusteridorteampos() {
  clusteridorteampos_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 WorldWarSceneAgent::clusteridorteampos() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarSceneAgent.clusterIdOrTeamPos)
  return clusteridorteampos_;
}
inline void WorldWarSceneAgent::set_clusteridorteampos(::google::protobuf::uint64 value) {
  
  clusteridorteampos_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarSceneAgent.clusterIdOrTeamPos)
}

// optional .NetMsg.WorldWarSceneForceState state = 5;
inline void WorldWarSceneAgent::clear_state() {
  state_ = 0;
}
inline ::NetMsg::WorldWarSceneForceState WorldWarSceneAgent::state() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarSceneAgent.state)
  return static_cast< ::NetMsg::WorldWarSceneForceState >(state_);
}
inline void WorldWarSceneAgent::set_state(::NetMsg::WorldWarSceneForceState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarSceneAgent.state)
}

// optional uint32 currentHealth = 6;
inline void WorldWarSceneAgent::clear_currenthealth() {
  currenthealth_ = 0u;
}
inline ::google::protobuf::uint32 WorldWarSceneAgent::currenthealth() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarSceneAgent.currentHealth)
  return currenthealth_;
}
inline void WorldWarSceneAgent::set_currenthealth(::google::protobuf::uint32 value) {
  
  currenthealth_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarSceneAgent.currentHealth)
}

// optional uint32 totalHealth = 7;
inline void WorldWarSceneAgent::clear_totalhealth() {
  totalhealth_ = 0u;
}
inline ::google::protobuf::uint32 WorldWarSceneAgent::totalhealth() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarSceneAgent.totalHealth)
  return totalhealth_;
}
inline void WorldWarSceneAgent::set_totalhealth(::google::protobuf::uint32 value) {
  
  totalhealth_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarSceneAgent.totalHealth)
}

// optional uint32 attackCD = 8;
inline void WorldWarSceneAgent::clear_attackcd() {
  attackcd_ = 0u;
}
inline ::google::protobuf::uint32 WorldWarSceneAgent::attackcd() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarSceneAgent.attackCD)
  return attackcd_;
}
inline void WorldWarSceneAgent::set_attackcd(::google::protobuf::uint32 value) {
  
  attackcd_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarSceneAgent.attackCD)
}

// optional uint32 moveCD = 9;
inline void WorldWarSceneAgent::clear_movecd() {
  movecd_ = 0u;
}
inline ::google::protobuf::uint32 WorldWarSceneAgent::movecd() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarSceneAgent.moveCD)
  return movecd_;
}
inline void WorldWarSceneAgent::set_movecd(::google::protobuf::uint32 value) {
  
  movecd_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarSceneAgent.moveCD)
}

// optional uint32 currentBlockId = 10;
inline void WorldWarSceneAgent::clear_currentblockid() {
  currentblockid_ = 0u;
}
inline ::google::protobuf::uint32 WorldWarSceneAgent::currentblockid() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarSceneAgent.currentBlockId)
  return currentblockid_;
}
inline void WorldWarSceneAgent::set_currentblockid(::google::protobuf::uint32 value) {
  
  currentblockid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarSceneAgent.currentBlockId)
}

// optional uint32 DefenceTarget = 11;
inline void WorldWarSceneAgent::clear_defencetarget() {
  defencetarget_ = 0u;
}
inline ::google::protobuf::uint32 WorldWarSceneAgent::defencetarget() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarSceneAgent.DefenceTarget)
  return defencetarget_;
}
inline void WorldWarSceneAgent::set_defencetarget(::google::protobuf::uint32 value) {
  
  defencetarget_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarSceneAgent.DefenceTarget)
}

// repeated uint32 path = 12;
inline int WorldWarSceneAgent::path_size() const {
  return path_.size();
}
inline void WorldWarSceneAgent::clear_path() {
  path_.Clear();
}
inline ::google::protobuf::uint32 WorldWarSceneAgent::path(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarSceneAgent.path)
  return path_.Get(index);
}
inline void WorldWarSceneAgent::set_path(int index, ::google::protobuf::uint32 value) {
  path_.Set(index, value);
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarSceneAgent.path)
}
inline void WorldWarSceneAgent::add_path(::google::protobuf::uint32 value) {
  path_.Add(value);
  // @@protoc_insertion_point(field_add:NetMsg.WorldWarSceneAgent.path)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
WorldWarSceneAgent::path() const {
  // @@protoc_insertion_point(field_list:NetMsg.WorldWarSceneAgent.path)
  return path_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
WorldWarSceneAgent::mutable_path() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.WorldWarSceneAgent.path)
  return &path_;
}

inline const WorldWarSceneAgent* WorldWarSceneAgent::internal_default_instance() {
  return &WorldWarSceneAgent_default_instance_.get();
}
// -------------------------------------------------------------------

// WorldWarStatusAck

// optional uint32 worldWarId = 1;
inline void WorldWarStatusAck::clear_worldwarid() {
  worldwarid_ = 0u;
}
inline ::google::protobuf::uint32 WorldWarStatusAck::worldwarid() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarStatusAck.worldWarId)
  return worldwarid_;
}
inline void WorldWarStatusAck::set_worldwarid(::google::protobuf::uint32 value) {
  
  worldwarid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarStatusAck.worldWarId)
}

// repeated .NetMsg.WorldWarSceneBlockState blocks = 2;
inline int WorldWarStatusAck::blocks_size() const {
  return blocks_.size();
}
inline void WorldWarStatusAck::clear_blocks() {
  blocks_.Clear();
}
inline const ::NetMsg::WorldWarSceneBlockState& WorldWarStatusAck::blocks(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarStatusAck.blocks)
  return blocks_.Get(index);
}
inline ::NetMsg::WorldWarSceneBlockState* WorldWarStatusAck::mutable_blocks(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.WorldWarStatusAck.blocks)
  return blocks_.Mutable(index);
}
inline ::NetMsg::WorldWarSceneBlockState* WorldWarStatusAck::add_blocks() {
  // @@protoc_insertion_point(field_add:NetMsg.WorldWarStatusAck.blocks)
  return blocks_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::WorldWarSceneBlockState >*
WorldWarStatusAck::mutable_blocks() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.WorldWarStatusAck.blocks)
  return &blocks_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::WorldWarSceneBlockState >&
WorldWarStatusAck::blocks() const {
  // @@protoc_insertion_point(field_list:NetMsg.WorldWarStatusAck.blocks)
  return blocks_;
}

// repeated .NetMsg.WorldWarSceneBuildingState buildings = 3;
inline int WorldWarStatusAck::buildings_size() const {
  return buildings_.size();
}
inline void WorldWarStatusAck::clear_buildings() {
  buildings_.Clear();
}
inline const ::NetMsg::WorldWarSceneBuildingState& WorldWarStatusAck::buildings(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarStatusAck.buildings)
  return buildings_.Get(index);
}
inline ::NetMsg::WorldWarSceneBuildingState* WorldWarStatusAck::mutable_buildings(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.WorldWarStatusAck.buildings)
  return buildings_.Mutable(index);
}
inline ::NetMsg::WorldWarSceneBuildingState* WorldWarStatusAck::add_buildings() {
  // @@protoc_insertion_point(field_add:NetMsg.WorldWarStatusAck.buildings)
  return buildings_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::WorldWarSceneBuildingState >*
WorldWarStatusAck::mutable_buildings() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.WorldWarStatusAck.buildings)
  return &buildings_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::WorldWarSceneBuildingState >&
WorldWarStatusAck::buildings() const {
  // @@protoc_insertion_point(field_list:NetMsg.WorldWarStatusAck.buildings)
  return buildings_;
}

// repeated .NetMsg.WorldWarSceneAgent agents = 4;
inline int WorldWarStatusAck::agents_size() const {
  return agents_.size();
}
inline void WorldWarStatusAck::clear_agents() {
  agents_.Clear();
}
inline const ::NetMsg::WorldWarSceneAgent& WorldWarStatusAck::agents(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarStatusAck.agents)
  return agents_.Get(index);
}
inline ::NetMsg::WorldWarSceneAgent* WorldWarStatusAck::mutable_agents(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.WorldWarStatusAck.agents)
  return agents_.Mutable(index);
}
inline ::NetMsg::WorldWarSceneAgent* WorldWarStatusAck::add_agents() {
  // @@protoc_insertion_point(field_add:NetMsg.WorldWarStatusAck.agents)
  return agents_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::WorldWarSceneAgent >*
WorldWarStatusAck::mutable_agents() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.WorldWarStatusAck.agents)
  return &agents_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::WorldWarSceneAgent >&
WorldWarStatusAck::agents() const {
  // @@protoc_insertion_point(field_list:NetMsg.WorldWarStatusAck.agents)
  return agents_;
}

// repeated .NetMsg.WorldWarSceneAgent importantAgents = 5;
inline int WorldWarStatusAck::importantagents_size() const {
  return importantagents_.size();
}
inline void WorldWarStatusAck::clear_importantagents() {
  importantagents_.Clear();
}
inline const ::NetMsg::WorldWarSceneAgent& WorldWarStatusAck::importantagents(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarStatusAck.importantAgents)
  return importantagents_.Get(index);
}
inline ::NetMsg::WorldWarSceneAgent* WorldWarStatusAck::mutable_importantagents(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.WorldWarStatusAck.importantAgents)
  return importantagents_.Mutable(index);
}
inline ::NetMsg::WorldWarSceneAgent* WorldWarStatusAck::add_importantagents() {
  // @@protoc_insertion_point(field_add:NetMsg.WorldWarStatusAck.importantAgents)
  return importantagents_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NetMsg::WorldWarSceneAgent >*
WorldWarStatusAck::mutable_importantagents() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.WorldWarStatusAck.importantAgents)
  return &importantagents_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NetMsg::WorldWarSceneAgent >&
WorldWarStatusAck::importantagents() const {
  // @@protoc_insertion_point(field_list:NetMsg.WorldWarStatusAck.importantAgents)
  return importantagents_;
}

// optional uint32 error = 6;
inline void WorldWarStatusAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 WorldWarStatusAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarStatusAck.error)
  return error_;
}
inline void WorldWarStatusAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarStatusAck.error)
}

inline const WorldWarStatusAck* WorldWarStatusAck::internal_default_instance() {
  return &WorldWarStatusAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqWorldWarMove

// optional uint32 worldWarId = 1;
inline void ReqWorldWarMove::clear_worldwarid() {
  worldwarid_ = 0u;
}
inline ::google::protobuf::uint32 ReqWorldWarMove::worldwarid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqWorldWarMove.worldWarId)
  return worldwarid_;
}
inline void ReqWorldWarMove::set_worldwarid(::google::protobuf::uint32 value) {
  
  worldwarid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqWorldWarMove.worldWarId)
}

// optional uint32 agentId = 2;
inline void ReqWorldWarMove::clear_agentid() {
  agentid_ = 0u;
}
inline ::google::protobuf::uint32 ReqWorldWarMove::agentid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqWorldWarMove.agentId)
  return agentid_;
}
inline void ReqWorldWarMove::set_agentid(::google::protobuf::uint32 value) {
  
  agentid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqWorldWarMove.agentId)
}

// repeated uint32 path = 3;
inline int ReqWorldWarMove::path_size() const {
  return path_.size();
}
inline void ReqWorldWarMove::clear_path() {
  path_.Clear();
}
inline ::google::protobuf::uint32 ReqWorldWarMove::path(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqWorldWarMove.path)
  return path_.Get(index);
}
inline void ReqWorldWarMove::set_path(int index, ::google::protobuf::uint32 value) {
  path_.Set(index, value);
  // @@protoc_insertion_point(field_set:NetMsg.ReqWorldWarMove.path)
}
inline void ReqWorldWarMove::add_path(::google::protobuf::uint32 value) {
  path_.Add(value);
  // @@protoc_insertion_point(field_add:NetMsg.ReqWorldWarMove.path)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ReqWorldWarMove::path() const {
  // @@protoc_insertion_point(field_list:NetMsg.ReqWorldWarMove.path)
  return path_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ReqWorldWarMove::mutable_path() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.ReqWorldWarMove.path)
  return &path_;
}

inline const ReqWorldWarMove* ReqWorldWarMove::internal_default_instance() {
  return &ReqWorldWarMove_default_instance_.get();
}
// -------------------------------------------------------------------

// WorldWarMoveAck

// optional uint32 worldWarId = 1;
inline void WorldWarMoveAck::clear_worldwarid() {
  worldwarid_ = 0u;
}
inline ::google::protobuf::uint32 WorldWarMoveAck::worldwarid() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarMoveAck.worldWarId)
  return worldwarid_;
}
inline void WorldWarMoveAck::set_worldwarid(::google::protobuf::uint32 value) {
  
  worldwarid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarMoveAck.worldWarId)
}

// optional uint32 agentId = 2;
inline void WorldWarMoveAck::clear_agentid() {
  agentid_ = 0u;
}
inline ::google::protobuf::uint32 WorldWarMoveAck::agentid() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarMoveAck.agentId)
  return agentid_;
}
inline void WorldWarMoveAck::set_agentid(::google::protobuf::uint32 value) {
  
  agentid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarMoveAck.agentId)
}

// optional uint32 error = 3;
inline void WorldWarMoveAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 WorldWarMoveAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarMoveAck.error)
  return error_;
}
inline void WorldWarMoveAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarMoveAck.error)
}

inline const WorldWarMoveAck* WorldWarMoveAck::internal_default_instance() {
  return &WorldWarMoveAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqWorldWarDefence

// optional uint32 worldWarId = 1;
inline void ReqWorldWarDefence::clear_worldwarid() {
  worldwarid_ = 0u;
}
inline ::google::protobuf::uint32 ReqWorldWarDefence::worldwarid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqWorldWarDefence.worldWarId)
  return worldwarid_;
}
inline void ReqWorldWarDefence::set_worldwarid(::google::protobuf::uint32 value) {
  
  worldwarid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqWorldWarDefence.worldWarId)
}

// optional uint32 agentId = 2;
inline void ReqWorldWarDefence::clear_agentid() {
  agentid_ = 0u;
}
inline ::google::protobuf::uint32 ReqWorldWarDefence::agentid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqWorldWarDefence.agentId)
  return agentid_;
}
inline void ReqWorldWarDefence::set_agentid(::google::protobuf::uint32 value) {
  
  agentid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqWorldWarDefence.agentId)
}

inline const ReqWorldWarDefence* ReqWorldWarDefence::internal_default_instance() {
  return &ReqWorldWarDefence_default_instance_.get();
}
// -------------------------------------------------------------------

// WorldWarDefenceAck

// optional uint32 worldWarId = 1;
inline void WorldWarDefenceAck::clear_worldwarid() {
  worldwarid_ = 0u;
}
inline ::google::protobuf::uint32 WorldWarDefenceAck::worldwarid() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarDefenceAck.worldWarId)
  return worldwarid_;
}
inline void WorldWarDefenceAck::set_worldwarid(::google::protobuf::uint32 value) {
  
  worldwarid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarDefenceAck.worldWarId)
}

// optional uint32 agentId = 2;
inline void WorldWarDefenceAck::clear_agentid() {
  agentid_ = 0u;
}
inline ::google::protobuf::uint32 WorldWarDefenceAck::agentid() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarDefenceAck.agentId)
  return agentid_;
}
inline void WorldWarDefenceAck::set_agentid(::google::protobuf::uint32 value) {
  
  agentid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarDefenceAck.agentId)
}

// optional uint32 error = 3;
inline void WorldWarDefenceAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 WorldWarDefenceAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarDefenceAck.error)
  return error_;
}
inline void WorldWarDefenceAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarDefenceAck.error)
}

inline const WorldWarDefenceAck* WorldWarDefenceAck::internal_default_instance() {
  return &WorldWarDefenceAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqWorldWarDefenceTarget

// optional uint32 worldWarId = 1;
inline void ReqWorldWarDefenceTarget::clear_worldwarid() {
  worldwarid_ = 0u;
}
inline ::google::protobuf::uint32 ReqWorldWarDefenceTarget::worldwarid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqWorldWarDefenceTarget.worldWarId)
  return worldwarid_;
}
inline void ReqWorldWarDefenceTarget::set_worldwarid(::google::protobuf::uint32 value) {
  
  worldwarid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqWorldWarDefenceTarget.worldWarId)
}

// optional uint32 agentId = 2;
inline void ReqWorldWarDefenceTarget::clear_agentid() {
  agentid_ = 0u;
}
inline ::google::protobuf::uint32 ReqWorldWarDefenceTarget::agentid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqWorldWarDefenceTarget.agentId)
  return agentid_;
}
inline void ReqWorldWarDefenceTarget::set_agentid(::google::protobuf::uint32 value) {
  
  agentid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqWorldWarDefenceTarget.agentId)
}

// optional uint32 blockId = 3;
inline void ReqWorldWarDefenceTarget::clear_blockid() {
  blockid_ = 0u;
}
inline ::google::protobuf::uint32 ReqWorldWarDefenceTarget::blockid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqWorldWarDefenceTarget.blockId)
  return blockid_;
}
inline void ReqWorldWarDefenceTarget::set_blockid(::google::protobuf::uint32 value) {
  
  blockid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqWorldWarDefenceTarget.blockId)
}

inline const ReqWorldWarDefenceTarget* ReqWorldWarDefenceTarget::internal_default_instance() {
  return &ReqWorldWarDefenceTarget_default_instance_.get();
}
// -------------------------------------------------------------------

// WorldWarDefenceTargetAck

// optional uint32 worldWarId = 1;
inline void WorldWarDefenceTargetAck::clear_worldwarid() {
  worldwarid_ = 0u;
}
inline ::google::protobuf::uint32 WorldWarDefenceTargetAck::worldwarid() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarDefenceTargetAck.worldWarId)
  return worldwarid_;
}
inline void WorldWarDefenceTargetAck::set_worldwarid(::google::protobuf::uint32 value) {
  
  worldwarid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarDefenceTargetAck.worldWarId)
}

// optional uint32 agentId = 2;
inline void WorldWarDefenceTargetAck::clear_agentid() {
  agentid_ = 0u;
}
inline ::google::protobuf::uint32 WorldWarDefenceTargetAck::agentid() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarDefenceTargetAck.agentId)
  return agentid_;
}
inline void WorldWarDefenceTargetAck::set_agentid(::google::protobuf::uint32 value) {
  
  agentid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarDefenceTargetAck.agentId)
}

// optional uint32 error = 3;
inline void WorldWarDefenceTargetAck::clear_error() {
  error_ = 0u;
}
inline ::google::protobuf::uint32 WorldWarDefenceTargetAck::error() const {
  // @@protoc_insertion_point(field_get:NetMsg.WorldWarDefenceTargetAck.error)
  return error_;
}
inline void WorldWarDefenceTargetAck::set_error(::google::protobuf::uint32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.WorldWarDefenceTargetAck.error)
}

inline const WorldWarDefenceTargetAck* WorldWarDefenceTargetAck::internal_default_instance() {
  return &WorldWarDefenceTargetAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqLeaveWorldWar

// optional uint32 worldWarId = 1;
inline void ReqLeaveWorldWar::clear_worldwarid() {
  worldwarid_ = 0u;
}
inline ::google::protobuf::uint32 ReqLeaveWorldWar::worldwarid() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqLeaveWorldWar.worldWarId)
  return worldwarid_;
}
inline void ReqLeaveWorldWar::set_worldwarid(::google::protobuf::uint32 value) {
  
  worldwarid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqLeaveWorldWar.worldWarId)
}

inline const ReqLeaveWorldWar* ReqLeaveWorldWar::internal_default_instance() {
  return &ReqLeaveWorldWar_default_instance_.get();
}
// -------------------------------------------------------------------

// LeaveWorldWarAck

// optional uint32 worldWarId = 1;
inline void LeaveWorldWarAck::clear_worldwarid() {
  worldwarid_ = 0u;
}
inline ::google::protobuf::uint32 LeaveWorldWarAck::worldwarid() const {
  // @@protoc_insertion_point(field_get:NetMsg.LeaveWorldWarAck.worldWarId)
  return worldwarid_;
}
inline void LeaveWorldWarAck::set_worldwarid(::google::protobuf::uint32 value) {
  
  worldwarid_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.LeaveWorldWarAck.worldWarId)
}

inline const LeaveWorldWarAck* LeaveWorldWarAck::internal_default_instance() {
  return &LeaveWorldWarAck_default_instance_.get();
}
// -------------------------------------------------------------------

// ReqTest

// optional string a = 1;
inline void ReqTest::clear_a() {
  a_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqTest::a() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqTest.a)
  return a_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqTest::set_a(const ::std::string& value) {
  
  a_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetMsg.ReqTest.a)
}
inline void ReqTest::set_a(const char* value) {
  
  a_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetMsg.ReqTest.a)
}
inline void ReqTest::set_a(const char* value, size_t size) {
  
  a_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetMsg.ReqTest.a)
}
inline ::std::string* ReqTest::mutable_a() {
  
  // @@protoc_insertion_point(field_mutable:NetMsg.ReqTest.a)
  return a_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqTest::release_a() {
  // @@protoc_insertion_point(field_release:NetMsg.ReqTest.a)
  
  return a_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqTest::set_allocated_a(::std::string* a) {
  if (a != NULL) {
    
  } else {
    
  }
  a_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), a);
  // @@protoc_insertion_point(field_set_allocated:NetMsg.ReqTest.a)
}

// optional float b = 2;
inline void ReqTest::clear_b() {
  b_ = 0;
}
inline float ReqTest::b() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqTest.b)
  return b_;
}
inline void ReqTest::set_b(float value) {
  
  b_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqTest.b)
}

// optional int32 c = 3;
inline void ReqTest::clear_c() {
  c_ = 0;
}
inline ::google::protobuf::int32 ReqTest::c() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqTest.c)
  return c_;
}
inline void ReqTest::set_c(::google::protobuf::int32 value) {
  
  c_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqTest.c)
}

// optional uint32 d = 4;
inline void ReqTest::clear_d() {
  d_ = 0u;
}
inline ::google::protobuf::uint32 ReqTest::d() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqTest.d)
  return d_;
}
inline void ReqTest::set_d(::google::protobuf::uint32 value) {
  
  d_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqTest.d)
}

// optional bool e = 5;
inline void ReqTest::clear_e() {
  e_ = false;
}
inline bool ReqTest::e() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqTest.e)
  return e_;
}
inline void ReqTest::set_e(bool value) {
  
  e_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.ReqTest.e)
}

// repeated string f = 6;
inline int ReqTest::f_size() const {
  return f_.size();
}
inline void ReqTest::clear_f() {
  f_.Clear();
}
inline const ::std::string& ReqTest::f(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqTest.f)
  return f_.Get(index);
}
inline ::std::string* ReqTest::mutable_f(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.ReqTest.f)
  return f_.Mutable(index);
}
inline void ReqTest::set_f(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:NetMsg.ReqTest.f)
  f_.Mutable(index)->assign(value);
}
inline void ReqTest::set_f(int index, const char* value) {
  f_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:NetMsg.ReqTest.f)
}
inline void ReqTest::set_f(int index, const char* value, size_t size) {
  f_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:NetMsg.ReqTest.f)
}
inline ::std::string* ReqTest::add_f() {
  // @@protoc_insertion_point(field_add_mutable:NetMsg.ReqTest.f)
  return f_.Add();
}
inline void ReqTest::add_f(const ::std::string& value) {
  f_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:NetMsg.ReqTest.f)
}
inline void ReqTest::add_f(const char* value) {
  f_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:NetMsg.ReqTest.f)
}
inline void ReqTest::add_f(const char* value, size_t size) {
  f_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:NetMsg.ReqTest.f)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ReqTest::f() const {
  // @@protoc_insertion_point(field_list:NetMsg.ReqTest.f)
  return f_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ReqTest::mutable_f() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.ReqTest.f)
  return &f_;
}

// optional .NetMsg.PlayerData g = 7;
inline bool ReqTest::has_g() const {
  return this != internal_default_instance() && g_ != NULL;
}
inline void ReqTest::clear_g() {
  if (GetArenaNoVirtual() == NULL && g_ != NULL) delete g_;
  g_ = NULL;
}
inline const ::NetMsg::PlayerData& ReqTest::g() const {
  // @@protoc_insertion_point(field_get:NetMsg.ReqTest.g)
  return g_ != NULL ? *g_
                         : *::NetMsg::PlayerData::internal_default_instance();
}
inline ::NetMsg::PlayerData* ReqTest::mutable_g() {
  
  if (g_ == NULL) {
    g_ = new ::NetMsg::PlayerData;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.ReqTest.g)
  return g_;
}
inline ::NetMsg::PlayerData* ReqTest::release_g() {
  // @@protoc_insertion_point(field_release:NetMsg.ReqTest.g)
  
  ::NetMsg::PlayerData* temp = g_;
  g_ = NULL;
  return temp;
}
inline void ReqTest::set_allocated_g(::NetMsg::PlayerData* g) {
  delete g_;
  g_ = g;
  if (g) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.ReqTest.g)
}

inline const ReqTest* ReqTest::internal_default_instance() {
  return &ReqTest_default_instance_.get();
}
// -------------------------------------------------------------------

// TestAck

// optional string a = 1;
inline void TestAck::clear_a() {
  a_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TestAck::a() const {
  // @@protoc_insertion_point(field_get:NetMsg.TestAck.a)
  return a_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TestAck::set_a(const ::std::string& value) {
  
  a_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetMsg.TestAck.a)
}
inline void TestAck::set_a(const char* value) {
  
  a_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetMsg.TestAck.a)
}
inline void TestAck::set_a(const char* value, size_t size) {
  
  a_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetMsg.TestAck.a)
}
inline ::std::string* TestAck::mutable_a() {
  
  // @@protoc_insertion_point(field_mutable:NetMsg.TestAck.a)
  return a_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TestAck::release_a() {
  // @@protoc_insertion_point(field_release:NetMsg.TestAck.a)
  
  return a_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TestAck::set_allocated_a(::std::string* a) {
  if (a != NULL) {
    
  } else {
    
  }
  a_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), a);
  // @@protoc_insertion_point(field_set_allocated:NetMsg.TestAck.a)
}

// optional float b = 2;
inline void TestAck::clear_b() {
  b_ = 0;
}
inline float TestAck::b() const {
  // @@protoc_insertion_point(field_get:NetMsg.TestAck.b)
  return b_;
}
inline void TestAck::set_b(float value) {
  
  b_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.TestAck.b)
}

// optional int32 c = 3;
inline void TestAck::clear_c() {
  c_ = 0;
}
inline ::google::protobuf::int32 TestAck::c() const {
  // @@protoc_insertion_point(field_get:NetMsg.TestAck.c)
  return c_;
}
inline void TestAck::set_c(::google::protobuf::int32 value) {
  
  c_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.TestAck.c)
}

// optional uint32 d = 4;
inline void TestAck::clear_d() {
  d_ = 0u;
}
inline ::google::protobuf::uint32 TestAck::d() const {
  // @@protoc_insertion_point(field_get:NetMsg.TestAck.d)
  return d_;
}
inline void TestAck::set_d(::google::protobuf::uint32 value) {
  
  d_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.TestAck.d)
}

// optional bool e = 5;
inline void TestAck::clear_e() {
  e_ = false;
}
inline bool TestAck::e() const {
  // @@protoc_insertion_point(field_get:NetMsg.TestAck.e)
  return e_;
}
inline void TestAck::set_e(bool value) {
  
  e_ = value;
  // @@protoc_insertion_point(field_set:NetMsg.TestAck.e)
}

// repeated string f = 6;
inline int TestAck::f_size() const {
  return f_.size();
}
inline void TestAck::clear_f() {
  f_.Clear();
}
inline const ::std::string& TestAck::f(int index) const {
  // @@protoc_insertion_point(field_get:NetMsg.TestAck.f)
  return f_.Get(index);
}
inline ::std::string* TestAck::mutable_f(int index) {
  // @@protoc_insertion_point(field_mutable:NetMsg.TestAck.f)
  return f_.Mutable(index);
}
inline void TestAck::set_f(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:NetMsg.TestAck.f)
  f_.Mutable(index)->assign(value);
}
inline void TestAck::set_f(int index, const char* value) {
  f_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:NetMsg.TestAck.f)
}
inline void TestAck::set_f(int index, const char* value, size_t size) {
  f_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:NetMsg.TestAck.f)
}
inline ::std::string* TestAck::add_f() {
  // @@protoc_insertion_point(field_add_mutable:NetMsg.TestAck.f)
  return f_.Add();
}
inline void TestAck::add_f(const ::std::string& value) {
  f_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:NetMsg.TestAck.f)
}
inline void TestAck::add_f(const char* value) {
  f_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:NetMsg.TestAck.f)
}
inline void TestAck::add_f(const char* value, size_t size) {
  f_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:NetMsg.TestAck.f)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
TestAck::f() const {
  // @@protoc_insertion_point(field_list:NetMsg.TestAck.f)
  return f_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
TestAck::mutable_f() {
  // @@protoc_insertion_point(field_mutable_list:NetMsg.TestAck.f)
  return &f_;
}

// optional .NetMsg.PlayerData g = 7;
inline bool TestAck::has_g() const {
  return this != internal_default_instance() && g_ != NULL;
}
inline void TestAck::clear_g() {
  if (GetArenaNoVirtual() == NULL && g_ != NULL) delete g_;
  g_ = NULL;
}
inline const ::NetMsg::PlayerData& TestAck::g() const {
  // @@protoc_insertion_point(field_get:NetMsg.TestAck.g)
  return g_ != NULL ? *g_
                         : *::NetMsg::PlayerData::internal_default_instance();
}
inline ::NetMsg::PlayerData* TestAck::mutable_g() {
  
  if (g_ == NULL) {
    g_ = new ::NetMsg::PlayerData;
  }
  // @@protoc_insertion_point(field_mutable:NetMsg.TestAck.g)
  return g_;
}
inline ::NetMsg::PlayerData* TestAck::release_g() {
  // @@protoc_insertion_point(field_release:NetMsg.TestAck.g)
  
  ::NetMsg::PlayerData* temp = g_;
  g_ = NULL;
  return temp;
}
inline void TestAck::set_allocated_g(::NetMsg::PlayerData* g) {
  delete g_;
  g_ = g;
  if (g) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NetMsg.TestAck.g)
}

inline const TestAck* TestAck::internal_default_instance() {
  return &TestAck_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace NetMsg

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::NetMsg::MessageType_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::NetMsg::MessageType_Type>() {
  return ::NetMsg::MessageType_Type_descriptor();
}
template <> struct is_proto_enum< ::NetMsg::UpdatePlayerAck_UpdateType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::NetMsg::UpdatePlayerAck_UpdateType>() {
  return ::NetMsg::UpdatePlayerAck_UpdateType_descriptor();
}
template <> struct is_proto_enum< ::NetMsg::ServerStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::NetMsg::ServerStatus>() {
  return ::NetMsg::ServerStatus_descriptor();
}
template <> struct is_proto_enum< ::NetMsg::ChatType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::NetMsg::ChatType>() {
  return ::NetMsg::ChatType_descriptor();
}
template <> struct is_proto_enum< ::NetMsg::RunState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::NetMsg::RunState>() {
  return ::NetMsg::RunState_descriptor();
}
template <> struct is_proto_enum< ::NetMsg::RunTargetType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::NetMsg::RunTargetType>() {
  return ::NetMsg::RunTargetType_descriptor();
}
template <> struct is_proto_enum< ::NetMsg::QuestDiscoveryFinishedType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::NetMsg::QuestDiscoveryFinishedType>() {
  return ::NetMsg::QuestDiscoveryFinishedType_descriptor();
}
template <> struct is_proto_enum< ::NetMsg::QuestState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::NetMsg::QuestState>() {
  return ::NetMsg::QuestState_descriptor();
}
template <> struct is_proto_enum< ::NetMsg::QuestType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::NetMsg::QuestType>() {
  return ::NetMsg::QuestType_descriptor();
}
template <> struct is_proto_enum< ::NetMsg::AdvantureEventStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::NetMsg::AdvantureEventStatus>() {
  return ::NetMsg::AdvantureEventStatus_descriptor();
}
template <> struct is_proto_enum< ::NetMsg::HeroPropertyType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::NetMsg::HeroPropertyType>() {
  return ::NetMsg::HeroPropertyType_descriptor();
}
template <> struct is_proto_enum< ::NetMsg::CampType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::NetMsg::CampType>() {
  return ::NetMsg::CampType_descriptor();
}
template <> struct is_proto_enum< ::NetMsg::TopListType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::NetMsg::TopListType>() {
  return ::NetMsg::TopListType_descriptor();
}
template <> struct is_proto_enum< ::NetMsg::MailType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::NetMsg::MailType>() {
  return ::NetMsg::MailType_descriptor();
}
template <> struct is_proto_enum< ::NetMsg::ResourceType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::NetMsg::ResourceType>() {
  return ::NetMsg::ResourceType_descriptor();
}
template <> struct is_proto_enum< ::NetMsg::WorldWarSceneForceType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::NetMsg::WorldWarSceneForceType>() {
  return ::NetMsg::WorldWarSceneForceType_descriptor();
}
template <> struct is_proto_enum< ::NetMsg::WorldWarSceneForceState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::NetMsg::WorldWarSceneForceState>() {
  return ::NetMsg::WorldWarSceneForceState_descriptor();
}
template <> struct is_proto_enum< ::NetMsg::WorldWarSceneBuildingType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::NetMsg::WorldWarSceneBuildingType>() {
  return ::NetMsg::WorldWarSceneBuildingType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_NetMsg_2eproto__INCLUDED
